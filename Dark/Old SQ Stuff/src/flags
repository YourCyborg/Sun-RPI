act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
act_info.c:            send_to_char( pexit->cdescription, ch);
act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
act_info.c:	send_to_char( pexit->description, ch );
act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
act_info.c:	if ( pexit->to_room == NULL )
act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
act_info.c:          if ( pexit->keyword    != NULL
act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
act_info.c:          if ( pexit->keyword    != NULL
act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
act_info.c:	look_room = pexit->to_room;
act_info.c:	&&   pexit->to_room != NULL
act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
act_info.c:			one_argument( (char *) pexit->keyword, dname );
act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
act_info.c:			: pexit->to_room->name
act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
act_move.c:	    &&   pexit->keyword != NULL
act_move.c:	    &&   is_name( arg, pexit->keyword ) )
act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
act_move.c:	    &&   pexit->keyword != NULL
act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
act_move.c:    || ( pexit->to_room == NULL ) )
act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
act_move.c:	one_argument( pexit->keyword, fence );
act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
act_move.c:	if ( pexit->key < 0 )
act_move.c:	if ( !has_key( ch, pexit->key) )
act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
act_move.c:	if ( pexit->key < 0 )
act_move.c:	if ( !has_key( ch, pexit->key) )
act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
act_move.c:    if ( pexit->key < 0 )
act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
act_move.c:    if ( pick->value[0] < pexit->difficulty )
act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
act_wiz.c:	    	pexit->key,
act_wiz.c:	    	pexit->exit_flags,
act_wiz.c:		pexit->difficulty,
act_wiz.c:	    	pexit->keyword,
act_wiz.c:	    	pexit->description[0] != '\0'
act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
db.c:		pexit->description	= fread_string( fp );
db.c://                pexit->cdescription     = fread_string( fp );
db.c:		pexit->keyword		= fread_string( fp );
db.c:		pexit->exit_flags	= fread_number( fp );
db.c:		pexit->key		= fread_number( fp );
db.c:		pexit->vnum		= fread_number( fp );
db.c:		pexit->difficulty	= fread_number( fp );
db.c:		    if ( pexit->vnum <= 0 )
db.c:			pexit->to_room = NULL;
db.c:			pexit->to_room = get_room_index( pexit->vnum );
db.c:			    pexit->vnum = -1;
db.c:			    if ( pexit->description[0] == '\0'
db.c:			    && pexit->keyword[0] == '\0' )
db.c://                            && pexit->cdescription[0] == '\0' )
db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
fight.c:	&&   pexit->to_room != NULL
fight.c:	&&   pexit->to_room != was_in_room )
fight.c:	    ch->in_room = pexit->to_room;
fight.c:	||   pexit->to_room == NULL
fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:act_info.c:	send_to_char( pexit->description, ch );
flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:act_info.c:	if ( pexit->to_room == NULL )
flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:act_info.c:          if ( pexit->keyword    != NULL
flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:act_info.c:          if ( pexit->keyword    != NULL
flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:act_info.c:	look_room = pexit->to_room;
flags:act_info.c:	&&   pexit->to_room != NULL
flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:act_info.c:			: pexit->to_room->name
flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:act_move.c:	    &&   pexit->keyword != NULL
flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:act_move.c:	    &&   pexit->keyword != NULL
flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_move.c:	if ( pexit->key < 0 )
flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_move.c:	if ( pexit->key < 0 )
flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:act_move.c:    if ( pexit->key < 0 )
flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:act_wiz.c:	    	pexit->key,
flags:act_wiz.c:	    	pexit->exit_flags,
flags:act_wiz.c:		pexit->difficulty,
flags:act_wiz.c:	    	pexit->keyword,
flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:db.c:		pexit->description	= fread_string( fp );
flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:db.c:		pexit->keyword		= fread_string( fp );
flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:db.c:		pexit->key		= fread_number( fp );
flags:db.c:		pexit->vnum		= fread_number( fp );
flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:db.c:		    if ( pexit->vnum <= 0 )
flags:db.c:			pexit->to_room = NULL;
flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:db.c:			    pexit->vnum = -1;
flags:db.c:			    if ( pexit->description[0] == '\0'
flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:fight.c:	&&   pexit->to_room != NULL
flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:fight.c:	    ch->in_room = pexit->to_room;
flags:fight.c:	||   pexit->to_room == NULL
flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n knocks on the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "You rap on the $d.",ch,NULL,NULL,pexit->keyword,NULL,TO_CHAR,SENSE_SIXTH);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if (  IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n opens the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_CLOSED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n closes the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	SET_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n locks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !has_key( ch, pexit->key) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	act( "$n unlocks the $d.", ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->key < 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_LOCKED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( IS_SET(pexit->exit_flags, EX_PICKPROOF) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if ( pexit->difficulty <= get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->difficulty > get_skill( ch, gsn_pick_lock ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pick->value[0] < pexit->difficulty )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      damage_item( pick, pexit->difficulty, TRUE, FALSE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    REMOVE_BIT(pexit->exit_flags, EX_LOCKED);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      ch, NULL, NULL, pexit->keyword, NULL, TO_ROOM, SENSE_SIGHT );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( ( to_room   = pexit->to_room               ) != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->to_room != NULL ? pexit->to_room->vnum : 0,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->key,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->exit_flags,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		pexit->difficulty,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:	    	pexit->description[0] != '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c:		    ? pexit->description : "(none).\n\r" ),
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_wiz.c://                pexit->cdescription[0] != '\0' ? pexit->cdescription : "(none).\n\r" );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:	    || !IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->description	= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                pexit->cdescription     = fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->keyword		= fread_string( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->exit_flags	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->key		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->vnum		= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		pexit->difficulty	= fread_number( fp );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		    if ( pexit->vnum <= 0 )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = NULL;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			pexit->to_room = get_room_index( pexit->vnum );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    pexit->vnum = -1;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    if ( pexit->description[0] == '\0'
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:			    && pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c://                            && pexit->cdescription[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		REMOVE_BIT( pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_CLOSED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:db.c:		SET_BIT(    pexit->exit_flags, EX_LOCKED );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	&&   pexit->to_room != was_in_room )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	    ch->in_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   pexit->to_room == NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:fight.c:	||   IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->keyword != NULL && !str_cmp( pexit->keyword, arg1 ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:/*    if ( IS_SET(pexit->exit_flags, EX_CLOSED) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:        if ( pexit->cdescription != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            send_to_char( pexit->cdescription, ch);
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( pexit->description != NULL && pexit->description[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	send_to_char( pexit->description, ch );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:    if ( IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( pexit->to_room == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_WALL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_ISDOOR ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:          if ( pexit->keyword    != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:            && pexit->keyword[0] != '\0' &&   pexit->keyword[0] != ' ' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	      pexit->keyword, NULL, TO_CHAR, SENSE_SIXTH );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	if ( IS_SET( pexit->exit_flags, EX_FENCE ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	look_room = pexit->to_room;
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   pexit->to_room != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&&   !(  // IS_SET( pexit->exit_flags, EX_CLOSED )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	        IS_SET( pexit->exit_flags, EX_SECRET ))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:	&& !IS_SET( pexit->exit_flags, EX_WALL ) ) 
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:              if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		if ( IS_SET( pexit->exit_flags, EX_CLOSED ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    if ( pexit->keyword != NULL && pexit->keyword[0] != '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			one_argument( (char *) pexit->keyword, dname );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:		    (room_is_dark( pexit->to_room, ch ) != VISION_NORMAL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_info.c:			: pexit->to_room->name
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  ||   ( to_room = pexit->to_room      ) == NULL )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_CLOSED)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      act( "The $d is closed.", ch, NULL, NULL, pexit->keyword,
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if ((IS_SET( pexit->exit_flags, EX_FENCE))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:  if (IS_SET(pexit->exit_flags, EX_WALL)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:      if (IS_SET( pexit->exit_flags, EX_CLIMB))
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   IS_SET(pexit->exit_flags, EX_ISDOOR)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_ISDOOR) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    && ( IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:		|| IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   pexit->keyword != NULL
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    &&   is_name( arg1, pexit->keyword ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    || ( pexit->to_room == NULL ) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( !IS_SET(pexit->exit_flags, EX_FENCE)
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    && !IS_SET(pexit->exit_flags, EX_WALL) )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    if ( pexit->keyword == NULL || pexit->keyword[0] == '\0' )
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	one_argument( pexit->keyword, fence );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    pain = pexit->difficulty - dice(1,get_curr_dex(ch));
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	    damage( ch, ch, dice(2,pexit->difficulty), gsn_falling, NULL, gn_wear_none );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    char_to_room( ch, pexit->to_room, TRUE );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:    WAIT_STATE( ch, pexit->to_room->move_delay );
flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:flags:act_move.c:	if ( !IS_SET(pexit->exit_flags, EX