[{"pk": 2, "model": "help.helpentry", "fields": {"db_entrytext": "\"\n\n  COMMAND: \"<message>\n\n  Says <message> out loud to everyone in your current location (usually a\n  room).\n\n  Example:\n    > \"Where is the movie theater?\n    You say, \"Where is the movie theater?\"\n\n  Note that the closing double quote is automatically added.\n\n  Related Topics: page, pose, say, :, \".\n\n", "db_key": "\"", "db_staff_only": false}}, {"pk": 3, "model": "help.helpentry", "fields": {"db_entrytext": "#\n\n  COMMAND: #<number> <command>\n\n  Forces the object whose database number is <number> to perform <command>.\n  Example: '#1033 move north' forces object #1033 to go north (assuming that\n  you control it).  The same restrictions that apply to @force also apply to\n  this command.\n\n  Related Topics: @force.\n\n", "db_key": "#", "db_staff_only": false}}, {"pk": 4, "model": "help.helpentry", "fields": {"db_entrytext": "$-COMMANDS\n\n  These commands are called arbitrary commands, user-defined commands, or\n  $-commands (for how they are defined).  See 'arbitrary commands' for the\n  full description.\n\n  Related Topics: arbitrary commands\n\n", "db_key": "$-COMMANDS", "db_staff_only": false}}, {"pk": 5, "model": "help.helpentry", "fields": {"db_entrytext": "\n  COMMAND: &<attribute> <object>[=<value>]\n  SYNONYM: @set <object> = <attribute>:[<value>]\n\n  Sets the attribute named <attribute> on <object> to <value>.  If\n  <attribute> is not a predefined attribute (like ofail or va), then it is\n  created.  Attributes so created are called user-named attributes.\n  Attribute names may only contain letters, numbers, and the characters\n  < -_.@#$^&*~?=+| >, and must start with a letter.  The names of user-named\n  attributes may not be abbreviated (an attempt to get the value of the\n  attribute will fail, and an attempt to set will create a new attribute).\n  The & command may be used to set predefined attributes (in this instance,\n  '&<attr> <object>=<value>' is equivalent to '@<attr> <object>=<value>').\n\n  Related Topics: @set.\n\n", "db_key": "&", "db_staff_only": false}}, {"pk": 6, "model": "help.helpentry", "fields": {"db_entrytext": ":\n\n  COMMAND: :<message>\n\n  Displays <message> to everyone in your current room, preceded by your name\n  and a space.  However, if <message> starts with a space, no space is\n  inserted between your name and the pose -- like the ';' command.\n\n  Example:\n    >:jumps for joy.\n    Player jumps for joy.\n    >: 's cat meows.\n    Player's cat meows.\n\n  Related Topics: page, pose, say, whisper, ;, \".\n\n", "db_key": ":", "db_staff_only": false}}, {"pk": 7, "model": "help.helpentry", "fields": {"db_entrytext": ";\n\n  COMMAND: ;<message>\n\n  This command is much like the ':' command, except that no space is inserted\n  between your name and the pose.  However, <message> can start with its own\n  space -- a result similar to using the ':' command.\n\n  Example:\n    > ;'s watch beeps.\n    Player's watch beeps.\n    > ; meows.\n    Player meows.\n\n  Warning: This command does not work in command lists run from an attribute\n  because the ';' is treated as the command separator.  Use pose/nospace\n  instead.\n\n  Related Topics: page, pose, say, whisper, :, \".\n\n", "db_key": ";", "db_staff_only": false}}, {"pk": 8, "model": "help.helpentry", "fields": {"db_entrytext": "@@\n\n  COMMAND: @@ <args>\n\n  This command and everything after it (excluding the command-separator\n  ';') is not evaluated by the parser. This is useful for adding comments\n  in softcode or, more commonly, writing comment headers for softcode\n  installers (such as /quotable text files).  Note that @@ must be\n  followed by a space or it will return an error message.\n\n  Always be doubly sure that ()'s and {}'s in the (otherwise ignored)\n  arguments are nested correctly, so that any semicolons used to separate it\n  from subsequent code in the line are recognized by the parser.\n\n  Example:\n     > @va me=$foobar *:@fo #1234=%0;@@ This controls my foobar puppet.\n     > foobar say Hello World!\n     foobar says \"Hello World!\"\n     > @@ --- Begin Code ---\n     > @emit Hello World!\n     > @@ --- End Code ---\n     Hello World!\n\n  Related Topics: think, @@(), null().\n\n", "db_key": "@@", "db_staff_only": false}}, {"pk": 9, "model": "help.helpentry", "fields": {"db_entrytext": "@AAHEAR\n\n  COMMAND:   @aahear <object> = <command-list>\n  ATTRIBUTE: Aahear\n\n  An Aahear on an object is activated whenever the listen pattern\n  matches anything done/said by anything else in the room, including\n  itself.  (The Ahear ignores itself, helpful for keeping machines from\n  triggering itself)\n\n  Example:\n    @aahear listener = \"I heard someone (maybe me?) say the word!\n\n  Related Topics: @ahear, @amhear, @listen.\n\n", "db_key": "@AAHEAR", "db_staff_only": false}}, {"pk": 10, "model": "help.helpentry", "fields": {"db_entrytext": "@ACLONE\n\n  COMMAND:   @aclone <object> = <command-list>\n  ATTRIBUTE: Aclone\n\n  Sets the actions to be taken by a new object that has just been created\n  as the result of a @clone command.  The contents of the Aclone attribute\n  are run by the new object and not by the old object.\n\n  This attribute is only meaningful for things, and will never be\n  automatically triggered on other object types.\n  It is also possible to check the zone object/objects in the zone parent\n  room for an @adisconnect. If one is found, it will be executed when a\n  player disconnects in that zone.\n\n  Example: @aclone Time bomb = @wait 600=@trig me/va;@wait 10=@trig me/vb\n           @va time bomb = :EXPLODES with a thundering roar;@destroy me\n           @vb time bomb = :ticks.; @wait 10=@trig me/vb\n\n  Related Topics: @clone.\n\n", "db_key": "@ACLONE", "db_staff_only": false}}, {"pk": 11, "model": "help.helpentry", "fields": {"db_entrytext": "@ACONNECT\n\n  COMMAND:   @aconnect <object> = <command-list>\n  ATTRIBUTE: Aconnect\n\n  Sets the actions to be taken by a player upon connecting to the MUX. The\n  following steps occur in the following order whenever a player connects to\n  the MUX. Parentage is observed.\n\n   - Execute the connecting player's @aconnect.\n   - Execute the master room's @aconnect.\n   - Execute any @aconnect found on any of the master room's contents.\n   - If the location that the player is connecting into belongs to a zone,\n     then\n\n     a) if the zone object is a thing, execute its @aconnect.\n     b) if the zone object is a room, execute any @aconnect found on any of\n        that room's contents.\n\n  Example:\n    > @aconnect me = check.my.mailbox\n\n  Related Topics: @adisconnect.\n\n", "db_key": "@ACONNECT", "db_staff_only": false}}, {"pk": 445, "model": "help.helpentry", "fields": {"db_entrytext": "@ACREATE\n\n  COMMAND: @acreate <object>=<commands>\n\n  Sets the @acreate attribute on <object>.  @acreate is only valid for objects\n  within the master room.  Upon creation of any object, the @acreate attribute\n  on all relevant objects in the master room is invoked.  Arguments passed are\n  %# as the dbref of the creator, %0 dbref of the object created, and %1 with\n  the type of the object created.\n\n  Related Topics: @adestroy\n\n", "db_key": "@ACREATE", "db_staff_only": false}}, {"pk": 443, "model": "help.helpentry", "fields": {"db_entrytext": "@ADDCOMMAND\n\n  COMMAND: @addcommand <name>=<thing>/<attribute>\n\n  This command has the capability of adding a softcoded command to the MUX's\n  built-in command table. If <name> already exists as a built-in command,\n  such as 'look' or 'WHO', it will actually replace the functionality of\n  that command, and all aliases that currently point to it. As in look's\n  case, the aliases 'l', 'lo', and 'loo', and the main command 'look' will\n  all point to these softcoded commands. The syntax of <thing>/<attribute> is\n  like any normal $command.\n\n  For example:\n\n  > &LOOK me=$look:say I looked here!\n  > &LOOK_WITH_ARG me=$look *:say I looked at %0!\n  > &LOOK_OUTSIDE me=$look/outside *:say I looked outside at %0!\n  > @addcommand look=me/look\n  > @addcommand look=me/look_with_arg\n  > @addcommand look=me/look_outside\n\n{ 'wizhelp @addcommand2' for more }\n\n", "db_key": "@ADDCOMMAND", "db_staff_only": false}}, {"pk": 444, "model": "help.helpentry", "fields": {"db_entrytext": "@ADDCOMMAND (continued)\n\n  Yes, you can specify more than one attribute to go with <name>. When you\n  type 'look' or 'look sofa', the game will execute all attributes that\n  match what you have typed in. Aliases like 'l' are expanded to 'look' so\n  you don't have to worry about those when you take command matching into\n  consideration. If none of the attributes attached match (the attribute\n  *must* begin with $<name> in order to match at all!), no output will\n  be generated.\n\n  Another use is to speed up use of a particular global command. Just use\n  @addcommand to add it to the built-in list, and it will be looked up\n  much faster.\n\n  Related Topics: @delcommand, @listcommands.\n\n", "db_key": "@ADDCOMMAND2", "db_staff_only": false}}, {"pk": 12, "model": "help.helpentry", "fields": {"db_entrytext": "@ADESCRIBE\n\n  COMMAND:   @adescribe <object> = <command-list>\n  ATTRIBUTE: Adescribe\n\n  Sets the actions to be taken when <object> is looked at.\n\n  Example: @adesc kitten = :rubs against %n's legs affectionately.\n\n  Related Topics: look, @desc, @idesc, @odesc, think\n\n", "db_key": "@ADESCRIBE", "db_staff_only": false}}, {"pk": 446, "model": "help.helpentry", "fields": {"db_entrytext": "@ADESTROY\n\n  COMMAND: @adestroy <object>=<commands>\n\n  Sets the @adestroy attribute on <object>.  @adestroy is only valid for\n  objects within the master room.  Upon destruction of any object, the\n  @adestroy attribute on all relevant objects in the master room is invoked.\n  Arguments passed are %# as the dbref of the destroying object, %0 dbref of\n  the object being destroyed, and %1 with the type of the object being\n  destroyed.\n\n  If the dbref of the destroyer and the destroyed are the same, the ADESTROY\n  attribute is not executed.\n\n  Note: The destroyed object may already be GARBAGE upon execution of the\n  ADESTROY.\n\n  Related Topics: @acreate\n\n", "db_key": "@ADESTROY", "db_staff_only": false}}, {"pk": 13, "model": "help.helpentry", "fields": {"db_entrytext": "@ADFAIL\n\n  COMMAND:   @adfail <object> = <command-list>\n  ATTRIBUTE: Adfail\n\n  Sets the action to be taken by an object when someone tries to drop it\n  but fails because they didn't pass the object's drop lock.\n\n  Example: @adfail sword = @name me=Cursed Sword;:laughs maniacally.\n\n  Related Topics: drop, @dfail, @odfail, @lock.\n\n", "db_key": "@ADFAIL", "db_staff_only": false}}, {"pk": 14, "model": "help.helpentry", "fields": {"db_entrytext": "@ADISCONNECT\n\n  COMMAND:   @adisconnect <object> = <command-list>\n  ATTRIBUTE: Adisconnect\n\n  Sets the actions to be taken by a player upon disconnecting from the MUX.\n  The following steps occur in the following order whenever a player connects\n  to the MUX. Parentage is observed.\n\n   - Execute the connecting player's @adisconnect.\n   - Execute the master room's @adisconnect.\n   - Execute any @adisconnect found on any of the master room's contents.\n   - If the location that the player is connecting into belongs to a zone,\n     then\n\n     a) if the zone object is a thing, execute its @adisconnect.\n     b) if the zone object is a room, execute any @adisconnect found on any of\n        that room's contents.\n\n  Example:\n    > @adisconnect me = home\n\n  Related Topics: @aconnect.\n\n", "db_key": "@ADISCONNECT", "db_staff_only": false}}, {"pk": 447, "model": "help.helpentry", "fields": {"db_entrytext": "@ADMIN\n\n  COMMAND: @admin <param>=<value>\n\n  Sets a TinyMUX configuration parameter to the indicated value. Type\n  'wizhelp config parameters' for a list of the config parameters that\n  may be set.\n\n  By default, only #1 can use @admin, but like most commands, this can be\n  configured with 'access'.  The wrinkle is that each <param> has its own\n  permissions which would prevent @admin from being useful to anyone but #1\n  without also changine the <param>'s permissions with 'config_access'.\n\n  Related Topics: access, config_access.\n\n", "db_key": "@ADMIN", "db_staff_only": false}}, {"pk": 15, "model": "help.helpentry", "fields": {"db_entrytext": "@ADROP\n\n  COMMAND:   @adrop <object> = <command-list>\n  ATTRIBUTE: Adrop\n\n  Sets the action to be taken by an object when it is dropped, or by an exit\n  when it is successfully used.\n\n  Example: @adrop plastique = kill %n=100; @destroy me\n\n  Related Topics: drop, @drop, @odrop, DROP-TO, EXITS.\n\n", "db_key": "@ADROP", "db_staff_only": false}}, {"pk": 16, "model": "help.helpentry", "fields": {"db_entrytext": "@AEFAIL\n\n  COMMAND:   @aefail <object> = <command-list>\n  ATTRIBUTE: Aefail\n\n  Sets the action to be taken by an object when someone tries to enter it\n  but fails because the object is not ENTER_OK or the player fails the\n  object's enter lock.\n\n  The enter lock only affects the 'enter' command and its aliases (set via\n  the @ealias command), it does not affect exits that lead to the object or\n  teleporting in.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically triggered on rooms or exits.\n\n  Example: @aefail car = @emit ;'s alarm starts wailing when %n tries\n                         to break in.\n  Related Topics: @aenter, @efail, @ealias, @enter, @oefail, @oenter, enter,\n      ENTER_OK.\n\n", "db_key": "@AEFAIL", "db_staff_only": false}}, {"pk": 17, "model": "help.helpentry", "fields": {"db_entrytext": "@AENTER\n\n  COMMAND:   @aenter <object> = <command-list>\n  ATTRIBUTE: Aenter\n\n  Sets the action to be taken by an object or room when someone enters it,\n  whether by using an exit, the enter or leave commands, or by teleporting.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @aenter car = :starts its engine, eagerly awaiting a road trip.;\n                         \"Beep Beep!\n\n  Related Topics: enter, @enter, @oenter, ENTER_OK.\n\n", "db_key": "@AENTER", "db_staff_only": false}}, {"pk": 18, "model": "help.helpentry", "fields": {"db_entrytext": "@AFAIL\n\n  COMMAND:   @afail <object> = <command-list>\n  ATTRIBUTE: Afail\n\n  Sets the commands to be performed by <object> when one of these events\n  occurs:\n\n    - For exits: Someone tries to traverse the exit but cannot because they\n      fail the exit's default lock or the exit is not linked.\n    - For players and things: Someone tries to pick up the object but cannot\n      because they fail the object's default lock.\n    - For rooms, players, and things: Someone looks around inside the room,\n      player, or thing and fails the object's default lock.\n\n  Example:\n    > @afail vase = :falls to the floor and smashes to pieces.;@destroy me\n\n  Related Topics: @fail, @ofail, FAILURE.\n\n", "db_key": "@AFAIL", "db_staff_only": false}}, {"pk": 19, "model": "help.helpentry", "fields": {"db_entrytext": "@AGFAIL\n\n  COMMAND:   @agfail <object> = <command-list>\n  ATTRIBUTE: Agfail\n\n  Sets the action to be taken by an object when someone tries to give it\n  away but fails because they didn't pass the object's give lock.\n\n  Example: @agfail sword = @name me=Cursed Sword;:laughs maniacally.\n\n  Related Topics: give, @gfail, @ogfail, @lock.\n\n", "db_key": "@AGFAIL", "db_staff_only": false}}, {"pk": 20, "model": "help.helpentry", "fields": {"db_entrytext": "@AHEAR\n\n  COMMAND:   @ahear <object> = <command-list>\n  ATTRIBUTE: Ahear\n\n  Sets the actions to be taken after the object hears a string that matches\n  the pattern in the Listen attribute which was not produced by the object\n  itself.  Messages that are produced by the object itself are ignored.\n\n  Example: @ahear clock = \"The time is now [time()].  >> BONNNNGGGGG <<\n\n  Related Topics: @aahear, @amhear, @listen.\n\n", "db_key": "@AHEAR", "db_staff_only": false}}, {"pk": 21, "model": "help.helpentry", "fields": {"db_entrytext": "@AKILL\n\n  COMMAND:   @akill <object> = <command-list>\n  ATTRIBUTE: Akill\n\n  Sets the actions to be taken by an object after it is killed and has\n  returned to its home.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @akill lion = south; :leaps onto %n, roaring loudly.;kill %n=100\n\n  Related Topics: kill, @kill and @okill, BEING KILLED, IMMORTAL, WIZARD.\n\n", "db_key": "@AKILL", "db_staff_only": false}}, {"pk": 22, "model": "help.helpentry", "fields": {"db_entrytext": "@ALEAD\n\n  COMMAND:   @alead <object> = <command list>\n  ATTRIBUTE: Alead\n\n  Sets the <command list> executed when object is lead.\n\n  This attribute is only available with --enable-firanmux.\n\n  Related Topics: @lead, @olead.\n\n", "db_key": "@ALEAD", "db_staff_only": false}}, {"pk": 23, "model": "help.helpentry", "fields": {"db_entrytext": "@ALEAVE\n\n  COMMAND:   @aleave <object> = <command-list>\n  ATTRIBUTE: Aleave\n\n  Sets the action to be taken by an object or room when someone leaves it,\n  whether by using an exit, the enter or leave commands, or by teleporting.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @aleave car = :stops to let %n out.;:revs its engine, hoping\n                         another brave soul would like a ride.\n\n  Related Topics: leave, @leave, @oleave.\n\n", "db_key": "@ALEAVE", "db_staff_only": false}}, {"pk": 24, "model": "help.helpentry", "fields": {"db_entrytext": "@ALFAIL\n\n  COMMAND:   @alfail <object> = <command-list>\n  ATTRIBUTE: Alfail\n\n  Sets the action to be taken by an object when someone tries to leave it\n  but fails because the player fails the object's leave lock.\n\n  The leave lock only affects the 'leave' command and its aliases (set via\n  the @ealias command), it does not affect going home, using an exit in the\n  location, or teleporting out.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically triggered on rooms or exits.\n\n  Example: @alfail box = :rattles around as %n tries to escape.\n\n  Related Topics: @aleave, @lalias, @leave, @lfail, @oleave, @olfail, leave.\n\n", "db_key": "@ALFAIL", "db_staff_only": false}}, {"pk": 25, "model": "help.helpentry", "fields": {"db_entrytext": "@ALIAS\n\n  COMMAND:   @alias <player> = <name>\n  ATTRIBUTE: Alias\n\n  Provides an alternate name by which the player is known.  The alternate\n  name is only used for players when referenced as '*<name>' or by commands\n  that only take playernames (such as page or @stats).  You may not set\n  an alias on any other object type.\n\n  When setting an alias, the alias is checked to see that it is both a legal\n  player name and not already in use.  Only if both checks succeed is the\n  alias set.\n\nRelated Topics: @name.\n\n", "db_key": "@ALIAS", "db_staff_only": false}}, {"pk": 448, "model": "help.helpentry", "fields": {"db_entrytext": "@ALLOWANCE\n\n  ATTRIBUTE: Allowance\n\n  COMMAND: @allowance <object>[=<amount>]\n\n  Sets the amount of money that the player receives each day he/she connects\n  to the MUX.  The Allowance attribute overrides the default allowance\n  specified by the paycheck config parameter.\n\n  This attribute is only visible and settable by wizards.  It is only\n  meaningful for players, and has no effect on other object types.\n\n", "db_key": "@ALLOWANCE", "db_staff_only": false}}, {"pk": 26, "model": "help.helpentry", "fields": {"db_entrytext": "@AMAIL\n\n  COMMAND:   @amail <player> = <command-list>\n  ATTRIBUTE: Amail\n\n  Sets the actions to be taken after a player receives @mail. This should\n  *never* @mail another player, as this could cause an infinite loop.\n\n  Example: @amail me=@mail/file [mail()]=2\n           This would place all incoming messages in folder #2.\n\n  Related Topics: @mailsucc, @signature, @mail.\n\n", "db_key": "@AMAIL", "db_staff_only": false}}, {"pk": 27, "model": "help.helpentry", "fields": {"db_entrytext": "@AMHEAR\n\n  COMMAND:   @amhear <object> = <command-list>\n  ATTRIBUTE: Amhear\n\n  Sets the actions to be taken after the object hears a string that matches\n  the pattern in the Listen attribute which was produced by the object\n  itself. Messages that are produced by anything other than the object itself\n  are ignored.\n\n  Example: @amhear listener = \"Wait a minute. I said the trigger word!\n\n  Related Topics: @aahear, @ahear, @listen.\n\n", "db_key": "@AMHEAR", "db_staff_only": false}}, {"pk": 28, "model": "help.helpentry", "fields": {"db_entrytext": "@AMOVE\n\n  COMMAND:   @amove <object> = <command-list>\n  ATTRIBUTE: Amove\n\n  Sets the action to be taken by an object whenever it moves from one\n  location to another, whether by using an exit, entering or leaving an\n  object, teleporting, or going home.\n\n  This attribute is meaningful for players, and things and will never be\n  automatically triggered on other object types.\n\n  Example: @amove car = @vz me=[extract(%vz,1,19)] [loc(me)]\n\n  Related Topics: @move, @omove.\n\n", "db_key": "@AMOVE", "db_staff_only": false}}, {"pk": 30, "model": "help.helpentry", "fields": {"db_entrytext": "@APARENT\n\n  COMMAND:   @aparent <object> = <command list>\n  Attribute: Aparent\n\n  Sets the actions to be taken when another object is parented to <object>.\n  The action list is executed with the permission of <object>.  Several\n  arguments are passed during evaluation:\n\n  %0 - dbref of the child being added or removed.\n  %1 - 0 or 1 indicating if the parent is being removed (1) or added (0).\n  %2 - dbref of the object issuing the @parent command.\n\n  The @aparent attribute is not inherited or copied during @clone.\n\n  Related Topics: @parent\n\n", "db_key": "@APARENT", "db_staff_only": false}}, {"pk": 29, "model": "help.helpentry", "fields": {"db_entrytext": "@APAY\n\n  COMMAND:   @apay <object> = <command-list>\n  ATTRIBUTE: Apay\n\n  Sets the actions to be taken after the object is given the number of coins\n  specified in its Cost attribute.  If the giver tries to give more than that\n  number of coins, the excess is refunded, and if less than the necessary\n  amount is given then it is all given back and a snide message is sent to\n  the giver.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @apay Coke machine = @clone Can of Coke; :drops a can on the\n                                floor.\n\n  Related Topics: give, @cost, @opay, @pay.\n\n", "db_key": "@APAY", "db_staff_only": false}}, {"pk": 449, "model": "help.helpentry", "fields": {"db_entrytext": "@APPLY_MARKED\n\n  COMMAND: @apply_marked <command>\n\n  Performs <command> once for each object in the database that has its MARK\n  flag set, substituting the characters ## for the object number of the\n  marked object.  The command is performed by the player invoking the\n  @apply_marked command, not by the marked object.  This command may only\n  be used when database cleaning is disabled (via @disable cleaning),\n  as cleaning uses the MARKED flag to check connectivity.\n\n  Related Topics: @mark, @mark_all, MARKED.\n\n", "db_key": "@APPLY_MARKED", "db_staff_only": false}}, {"pk": 31, "model": "help.helpentry", "fields": {"db_entrytext": "@ARFAIL\n\n  COMMAND:   @arfail <object> = <command-list>\n  ATTRIBUTE: Arfail\n\n  Sets the action to be taken by an object when someone tries to give it\n  something that fails its give lock.\n\n  Example: @arfail merchant = \"I don't buy such junk. Begone!;\n                              @tel %#=cheater_exit\n\n  Related Topics: give, @agfail, @gfail, @ogfail, @orfail, @rfail, @lock.\n\n", "db_key": "@ARFAIL", "db_staff_only": false}}, {"pk": 32, "model": "help.helpentry", "fields": {"db_entrytext": "@ASSERT\n\n  COMMAND: @assert <boolean>[=<action list>]\n\n  @assert stops the execution of further commands in the current action\n  list if its argument is a false value.  It doesn't affect new queue\n  entries made by previous commands in the action list.  Very useful to\n  people who don't like @switch.  If <action list> is given, they are\n  executed instead of the rest of the commands in the current action list.\n\n  Examples:\n    > @va obj=$testme *:@pemit %#=Before;@assert %0;@pemit %#=After\n    > testme 1\n    Before\n    After\n    > testme 0\n    Before\n\n    > @force me={@switch 1=1,think 3rd;think 1st;@assert 0;think 2nd}\n    1st\n    3rd\n\n  In the last example, the @switch is run, which queues 'think 3rd',\n  'think 1st' is run, displaying '1st', command execution is broken\n  (so we never 'think 2nd', and then the queued 'think 3rd' is run,\n  displaying '3rd'.\n\n  If you follow that, you have a very good understanding of the\n  TinyMUX queue.\n\n  Related Topics: @break, BOOLEAN VALUES\n\n", "db_key": "@ASSERT", "db_staff_only": false}}, {"pk": 33, "model": "help.helpentry", "fields": {"db_entrytext": "@ASUCCESS\n\n  COMMAND:   @asuccess <object> = <command-list>\n  ATTRIBUTE: Asucc\n\n  Sets the actions to be taken by an object when someone successfully picks\n  it up (because they passed the lock), by an exit when someone passes\n  through it, or when someone looks at a room and passes the room's lock.\n\n  Example: @asucc kitten = :climbs up your sleeve and nuzzles your face.\n\n  Related Topics: @osucc, @success, SUCCESS.\n\n", "db_key": "@ASUCCESS", "db_staff_only": false}}, {"pk": 34, "model": "help.helpentry", "fields": {"db_entrytext": "@ATFAIL\n\n  COMMAND:   @atfail <object> = <command-list>\n  ATTRIBUTE: Atfail\n\n  Sets the action to be taken by an object when someone tries to teleport\n  there but fails.\n\n  Example: @atfail here = @page [owner(me)]=%N tried to teleport here.\n\n  Related Topics: @teleport, @tfail, @otfail, @lock.\n\n", "db_key": "@ATFAIL", "db_staff_only": false}}, {"pk": 35, "model": "help.helpentry", "fields": {"db_entrytext": "@ATOFAIL\n\n  COMMAND:   @atofail <object> = <command-list>\n  ATTRIBUTE: Atofail\n\n  Sets the action to be taken by an object when someone tries to teleport\n  out but fails.\n\n  Example: @atofail here = @page [owner(me)]=%N tried to teleport out.\n\n  Related Topics: @teleport, @tofail, @otofail, @lock.\n\n", "db_key": "@ATOFAIL", "db_staff_only": false}}, {"pk": 36, "model": "help.helpentry", "fields": {"db_entrytext": "@ATPORT\n\n  COMMAND:   @atport <object> = <command-list>\n  ATTRIBUTE: Atport\n\n  Sets the actions to be performed by object whenever it teleports.\n  The actions are performed after the object moves to its new location.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @atport me = &TEL.COUNT me=add(v(TEL.COUNT),1)\n\n  Related Topics: @otport, @oxtport, @tport, @teleport.\n\n", "db_key": "@ATPORT", "db_staff_only": false}}, {"pk": 450, "model": "help.helpentry", "fields": {"db_entrytext": "@ATTRIBUTE\n\n  COMMAND: @attribute[/<switch>] <attrib>[=<value>]\n\n  Performs operations on user-named attributes depending on the switch used.\n  The following switches are available:\n\n     /access   - Changes the access to the named attribute.  <value> is a\n                 space-separated list of permissions to add or remove from\n                 the attribute's access permissions. For a list of possible\n                 values, see the related topic given below.\n\n     /delete   - Removes the named attribute from the attribute table.\n                 This switch does not remove instances of the attribute from\n                 objects, and any that remain will be renamed to the\n                 user-named attribute that re-uses the attribute number\n                 of the deleted attribute.\n\n     /rename   - Changes the name of the named attribute to <value>.\n\n  Note that changes to user-named attributes performed by this command\n  are permanent and do not need to be performed each time the MUX is\n  restarted. Further this also only affects user-named attributes.\n\n  Related Topics: attribute permissions, attr_access\n\n", "db_key": "@ATTRIBUTE", "db_staff_only": false}}, {"pk": 37, "model": "help.helpentry", "fields": {"db_entrytext": "@AUFAIL\n\n  COMMAND:   @aufail <object> = <command-list>\n  ATTRIBUTE: Aufail\n\n  Sets the list of commands to be run when someone 'use's the object but\n  fails the object's use lock.  Note that the other functions controlled\n  by the use lock (paying, listening, and $-commands) do not trigger\n  Aufail.\n\n  Example: @aufail robot = \"I _told_ you to leave me alone; kill %n=100\n\n  Related Topics: @oufail, @ufail, @use.\n\n", "db_key": "@AUFAIL", "db_staff_only": false}}, {"pk": 38, "model": "help.helpentry", "fields": {"db_entrytext": "@AUSE\n\n  COMMAND:   @ause <object> = <command-list>\n  ATTRIBUTE: Ause\n\n  Sets the actions to be taken when someone uses the object with the use\n  command.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @ause grenade = :EXPLODES with a thundering roar; kill %n=100;\n                           @destroy me\n  Related Topics: use, @ouse, @use.\n\n", "db_key": "@AUSE", "db_staff_only": false}}, {"pk": 39, "model": "help.helpentry", "fields": {"db_entrytext": "@AWAY\n\n  COMMAND:   @away <object> = <message>\n  ATTRIBUTE: Away\n\n  This attribute is sent as a message to anyone who tries to page you when\n  you are not connected.\n\n  This attribute is only meaningful for players, and will never be\n  automatically referenced on other object types.\n\n  Example: @away me = Hey, I'm not even connected.  So why are you paging me?\n\n  Related Topics: @idle, @idletimeout, @reject, page.\n\n", "db_key": "@AWAY", "db_staff_only": false}}, {"pk": 451, "model": "help.helpentry", "fields": {"db_entrytext": "@BACKUP\n\n  COMMAND: @backup\n\n  This command will dump a flatfile of the database to the data directory.\n  The flatfile will be named dump.<date>.tgz. IE, dump.0219-1613.tgz where\n  0219-1613 stands for February 19, 4:13pm.\n\n  This file is tarred and gziped. It includes the game flatfile, and the\n  mail and comsys databases. It does not include any of the text files, the\n  .conf files or the mux.config file. Those would need to be backed up\n  separately.\n\n  Related Topics:\n\n", "db_key": "@BACKUP", "db_staff_only": false}}, {"pk": 452, "model": "help.helpentry", "fields": {"db_entrytext": "@BOOT\n\n  COMMAND: @boot[/quiet] <player>\n           @boot/port <port#>\n\n  Severs the named player's connection to the game.  The player is given a\n  notice that they have been booted.  If the player is connected to the game\n  more than once, then all connections to that player are severed.\n\n  The following switches are available:\n\n    /quiet - Don't give the booted player any special notice.\n\n    /port  - Disconnects only a specific port.  In this case, <port#> must\n             be the port number obtained from the SESSION command.\n\n  Related Topics: @destroy, @toad, SESSION.\n\n", "db_key": "@BOOT", "db_staff_only": false}}, {"pk": 40, "model": "help.helpentry", "fields": {"db_entrytext": "@BREAK\n\n  COMMAND: @break <boolean>[=<action list>]\n\n  @break stops the execution of further commands in the current action\n  list if its argument is a true value.  It doesn't affect new queue\n  entries made by previous commands in the action list.  Very useful to\n  people who don't like @switch. If <action list> is given, they are\n  executed instead of the rest of the commands in the current action list.\n\n  Examples:\n    > @va obj=$testme *:@pemit %#=Before;@break %0;@pemit %#=After\n    > testme 0\n    Before\n    After\n    > testme 1\n    Before\n\n    > @force me={@switch 1=1,think 3rd;think 1st;@break 1;think 2nd}\n    1st\n    3rd\n\n  In the last example, the @switch is run, which queues 'think 3rd',\n  'think 1st' is run, displaying '1st', command execution is broken\n  (so we never 'think 2nd', and then the queued 'think 3rd' is run,\n  displaying '3rd'.\n\n  If you follow that, you have a very good understanding of the\n  TinyMUX queue.\n\n  Related Topics: @assert, BOOLEAN VALUES\n\n", "db_key": "@BREAK", "db_staff_only": false}}, {"pk": 41, "model": "help.helpentry", "fields": {"db_entrytext": "@CBOOT\n\n  COMMAND: @cboot[/quiet] <channel>=<object>\n\n  Only wizards or the owner of the channel can use this command. It\n  forcefully removes an object from that channel.\n\n  You may specify a player name as <object> if you prefix it with an '*'\n  (e.g., '*Player1'), otherwise <object> should be a dbref or if you are\n  in the same room, the name of an object or player.\n\n  Example:\n    > @cboot Public=Player1\n    [Public] Staff1 boots Player1 off the channel.\n    [Public] Player1 has left this channel.\n\n  Related Topics: comsys commands\n\n", "db_key": "@CBOOT", "db_staff_only": false}}, {"pk": 42, "model": "help.helpentry", "fields": {"db_entrytext": "@CCHARGE\n\n  COMMAND: @ccharge <channel>=<amount>\n\n  This command imposes a charge of <amount> coins on transmitting over a\n  channel. The default fee when a channel is created is 0. All proceeds\n  benefit the channel owner.\n\n  Example:\n    > @ccharge Public=1\n    Set.\n\n  Related Topics: comsys commands\n\n", "db_key": "@CCHARGE", "db_staff_only": false}}, {"pk": 43, "model": "help.helpentry", "fields": {"db_entrytext": "@CCHOWN\n\n  COMMAND: @cchown <channel>=<player>\n\n  Changes ownership of <channel> to <player>. If the player is not in the\n  same room, you will need to add a '*' before the name (e.g., '*player1').\n\n  Example:\n    >@cchown Public=Staff1\n    Set.\n\n  Related Topics: @clist, @cwho.\n\n", "db_key": "@CCHOWN", "db_staff_only": false}}, {"pk": 44, "model": "help.helpentry", "fields": {"db_entrytext": "@CCREATE\n\n  COMMAND: @ccreate <channel name>\n\n  Only Wizards can create new channels.\n\n  Creates a new channel with default settings. Once the channel is created,\n  it can be associated with a object with the @cset command. That object can\n  be used to set locks and descriptions on the channel.\n\n  Example:\n    > @ccreate Public\n    Channel Public created.\n\n  Related Topics: comsys, @cset, @cdestroy, @clist, @cchown.\n\n", "db_key": "@CCREATE", "db_staff_only": false}}, {"pk": 45, "model": "help.helpentry", "fields": {"db_entrytext": "@CDESTROY\n\n  COMMAND: @cdestroy <channel>\n\n  Deletes <channel> permanently from the comsystem database. It does not\n  destroy all aliases that exist for <channel> -- those are left to the\n  owners of those aliases. Players are notified both at login when they\n  own aliases for which a channel no longer exists and when they try to\n  use them. Even if a Channel is destroyed and then recreated, the alias\n  will still be non functioning. The alias must be removed with the\n  'delcom' command and added with the 'addcom' command.\n\n  Example:\n    > @cdestroy Staff\n    Channel Staff destroyed.\n\n  Related Topics: @clist, @ccreate, @cchown, addcom, delcom.\n\n", "db_key": "@CDESTROY", "db_staff_only": false}}, {"pk": 46, "model": "help.helpentry", "fields": {"db_entrytext": "@CEMIT\n\n  COMMAND: @cemit[/<switches>] <channel>=<message>\n\n  Sends <message> over <channel> prefixed by the channel's name. You must own\n  or control the channel to do this.\n\n  The following switches are available:\n\n    /noheader - Sends the message to everyone on <channel> without the\n                channel's name prefixed.\n\n  Example:\n    > @cemit Public=This is a test!\n    [Public] This is a test!\n\n    > @cemit/noheader Public=This is a test!\n    This is a test.\n\n  Related Topics: comsys commands, alias, addcom, cemit()\n\n", "db_key": "@CEMIT", "db_staff_only": false}}, {"pk": 47, "model": "help.helpentry", "fields": {"db_entrytext": "@CHARGES\n\n  COMMAND:   @charges <object> = <count>\n  ATTRIBUTE: Charges\n\n  This attribute allows you to limit the number of times an object can be\n  used.  If there is a charges attribute it is decremented each time an\n  action on the object is triggered.  Once it reaches zero, normal triggering\n  stops and the Runout attribute (if one is present) is run instead.\n\n  Example: @charges Fireball wand = 5\n\n  Related Topics: @runout.\n\n", "db_key": "@CHARGES", "db_staff_only": false}}, {"pk": 48, "model": "help.helpentry", "fields": {"db_entrytext": "@CHOWN\n\n  COMMAND: @chown[/nostrip] <object>[=<player>]\n           @chown           <object>/<attr>[=<player>]\n\n  The first form changes the ownership of <object> to <player>.  By default,\n  this is yourself.  Objects may be things, rooms or exits.  To @chown things,\n  you have to be carrying the thing.  For rooms or exits, you have to be in\n  the room.  Objects must have the CHOWN_OK flag set before they may be\n  @chowned.  In a room, the command used must be @chown here=<name>, and for\n  an object, you must be very specific.  Players can't be @chowned; they\n  always own themselves.\n\n  When an object is @chowned, all unlocked attributes on the object are\n  automatically @chowned as well.  Locked attributes remain owned by their\n  original owners.\n\n  Without the /nostrip switch, CHOWN_OK, all flags specified in the\n  stripped_flags configuration option, and all @powers are stripped.  Also,\n  HALT is set.  With /nostrip, ROYALTY and INHERIT are preserved (albeit with\n  warnings).  #1 can use /nostrip to further preserve WIZARD and @powers.\n\n  By default, stripped_flags includes: BLIND, CONNECTED, GAGGED, HEAD_FLAG,\n  IMMORTAL, INHERIT, ROYALTY, SLAVE, STAFF, SUSPECT, UNINSPECTED, and WIZARD.\n\n{ 'help @chown2' for more }\n\n", "db_key": "@CHOWN", "db_staff_only": false}}, {"pk": 49, "model": "help.helpentry", "fields": {"db_entrytext": "@CHOWN (continued)\n\n  The second form changes the ownership of the indicated attribute on <object>\n  to <player>.  The default is the owner of the object.  You may only @chown\n  unlocked attributes.  You may @chown unlocked attributes on objects that you\n  own to yourself, and you may also @chown attributes that you own on objects\n  owned by others to the owner of the object.\n\n  Related Topics: ATTRIBUTE OWNERSHIP, CHOWN_OK, @lock, stripped_flags, and\n                  @unlock.\n\n", "db_key": "@CHOWN2", "db_staff_only": false}}, {"pk": 453, "model": "help.helpentry", "fields": {"db_entrytext": "@CHOWNALL\n\n  COMMAND: @chownall[/nostrip] <victim>[=<recipient>]\n\n  Changes the ownership of all of the victim's objects, rooms, and exits to\n  the indicated recipient (or to the wizard performing the @chownall if\n  no recipient is specified).  All objects, rooms, and exits are set HALTED.\n\n  Without the /nostrip switch, CHOWN_OK, all flags specified in the\n  stripped_flags configuration option, and all @powers are stripped.  Also,\n  HALT is set.  With /nostrip, ROYALTY and INHERIT are preserved.  #1 can use\n  /nostrip to further preserve WIZARD and @powers.\n\n  By default, stripped_flags includes: BLIND, CONNECTED, GAGGED, HEAD_FLAG,\n  IMMORTAL, INHERIT, ROYALTY, SLAVE, STAFF, SUSPECT, UNINSPECTED, and WIZARD.\n\n  Related Topics: @chown.\n\n", "db_key": "@CHOWNALL", "db_staff_only": false}}, {"pk": 50, "model": "help.helpentry", "fields": {"db_entrytext": "@CHZONE\n\n  COMMAND: @chzone <object>=<zone object>.\n\n  Changes the zone of <object> to <zone object>.  If <zone object> is \"none\",\n  the zone is reset to NOTHING.\n\n  @chzone'ing a player does not automatically change the zone of their\n  objects.  Anyone may reset the zone of an object they own; <zone object>\n  must either be \"none\", or must be owned by them.  Only wizards may @chzone\n  an object to an arbitrary zone object.  Players may @chzone themselves to\n  an object they own; otherwise, only wizards may @chzone players.  For\n  non-player objects, @chzone'ing strips all flags in the stripped_flags.\n\n  By default, stripped_flags includes: BLIND, CONNECTED, GAGGED, HEAD_FLAG,\n  IMMORTAL, INHERIT, ROYALTY, SLAVE, STAFF, SUSPECT, UNINSPECTED, and WIZARD.\n\n  Related Topics: stripped_flags, ZONE OBJECTS\n\n", "db_key": "@CHZONE", "db_staff_only": false}}, {"pk": 51, "model": "help.helpentry", "fields": {"db_entrytext": "@CLIST\n\n  COMMAND: @clist[/<option>] [<pattern>]\n\n  Without any switches, it will display the list of public channels with\n  their owner and description. It will also display all channels you own.\n\n  <option>, if given, may be either of the following:\n\n    full    - @clist will display more detailed information including\n              the channel object's dbref.\n\n    headers - Shows the @clist report with the description column\n              replaced by the a column of the channel headers.\n\n  <pattern>, if given, is used to match and select a subset of channels.\n\n  { 'help @clist2' for more }\n\n", "db_key": "@CLIST", "db_staff_only": false}}, {"pk": 52, "model": "help.helpentry", "fields": {"db_entrytext": "@CLIST\n\n  Examples:\n    >@clist\n    *** Channel Owner Description\n    --- Public God No description.\n    --- Staff God No description.\n\n    >@clist S*\n    *** Channel Owner Description\n    --- Staff God No description.\n\n    >@clist/full\n    *** Channel      --Flags--  Obj   Own   Charge  Balance  Users   Messages\n    --- Public        JXR/jxr    -1    11        0        0     45        129\n    --- Staff         JXR/jxr    -1    11        0        0     10         65\n\n  Related Topics: @ccreate, @cdestroy, @cchown, @coflags, @cpflags.\n\n", "db_key": "@CLIST2", "db_staff_only": false}}, {"pk": 53, "model": "help.helpentry", "fields": {"db_entrytext": "@CLONE\n\n  COMMAND: @clone[/<switches>] <object>[=<newname/cost>]\n\n  Creates a almost exact duplicate of <object> that is owned by you and (for\n  things and exits) puts it in your current location.  You may have the\n  object put in your inventory (or your exitlist in the case of cloning\n  exits) by using the /inventory switch.\n\n  The modification and creation times will necessarily be different.  Also,\n  depending on the parent lock and permissions, the possibility exists that\n  the clone object will be left unparented.\n\n  You may clone your own objects, plus VISUAL objects owned by others.\n  Typically, INHERIT, WIZARD, and other flags in the stripped_flags\n  configuration option are not cloned.  Powers are never cloned.  If <newname>\n  is specified, it is used as the name instead of the original name.\n\n  By default, stripped_flags includes: BLIND, CONNECTED, GAGGED, HEAD_FLAG,\n  IMMORTAL, INHERIT, ROYALTY, SLAVE, STAFF, SUSPECT, UNINSPECTED, and WIZARD.\n\n  If you clone a linked exit, an attempt is made to link the clone to the\n  same location.  Except when using the /inventory switch, you can only clone\n  exits when you own your current location.\n\n{ 'help @clone2' for more }\n\n", "db_key": "@CLONE", "db_staff_only": false}}, {"pk": 54, "model": "help.helpentry", "fields": {"db_entrytext": "@CLONE (continued)\n\n  If you clone a room with a drop-to, an attempt is made to link the drop-to\n  to the same location.\n\n  If the original object was owned by you, then the ACLONE attribute is run\n  in the new attribute, otherwise the new object is set HALTED.  Exits and\n  contents of cloned objects are not cloned, and LOCKED attributes are not\n  copied.\n\n  The following switches are available:\n\n     /cost       - Treat the argument after the = as the cost of the new\n                   object, not the name.\n\n     /inherit    - Don't reset the INHERIT bit on the new object.\n\n     /inventory  - Create the new object in your inventory (or your exitlist,\n                   in the case of cloning exits).\n\n     /nostrip    - Flags in the stripped_flags set are not stripped except\n                   that only #1 is allowed to clone WIZARD.\n\n     /location   - Create the new object in your location (default).\n\n{ 'help @clone3' for more }\n\n", "db_key": "@CLONE2", "db_staff_only": false}}, {"pk": 55, "model": "help.helpentry", "fields": {"db_entrytext": "@CLONE (continued)\n\n     /parent     - Set the new object's parent to be the template object and\n                   don't copy the attributes.\n\n     /preserve   - Let the existing owner own the clone. Existing owner must\n                   be controllable.\n\n  Related Topics: @create, @decompile, @destroy, stripped_flags, VISUAL.\n\n", "db_key": "@CLONE3", "db_staff_only": false}}, {"pk": 56, "model": "help.helpentry", "fields": {"db_entrytext": "@COFLAGS\n\n  COMMAND: @coflags <channel>=[!]flag\n\n  Sets object flags for that channel. The flag can be one of: join, transmit\n  or receive.\n\n    transmit   Whether an object can broadcast (speak) over the channel.\n    join       Whether an object can join the channel.\n    receive    Whether an object can receive messages over the channel.\n\n  NOTE: Flags must be lower case.\n\n  If it is !flag, then that flag is reset. Channel flags ALWAYS override\n  locks on channel objects.\n\n  Example:\n    > @coflags Public=join\n    @coflags: Set.\n\n  Related Topics: @cpflags, @clist, CHANNEL OBJECT.\n\n", "db_key": "@COFLAGS", "db_staff_only": false}}, {"pk": 61, "model": "help.helpentry", "fields": {"db_entrytext": "@COLOR\n\n  COMMAND:   @color <object> = <color-code-list>\n  ATTRIBUTE: Color\n\n  Controls the colorization of an object's name.\n\n  Example:\n    @color me = hr\n\n  This attribute is only available with --enable-firanmux, and is expected to\n  be deprecated in favor of @moniker.\n\n  Related Topics: ansi(), ANSI CODES, @moniker, moniker().\n\n", "db_key": "@COLOR", "db_staff_only": false}}, {"pk": 57, "model": "help.helpentry", "fields": {"db_entrytext": "@COMJOIN\n\n  COMMAND:   @comjoin <object> = <message>\n  ATTRIBUTE: Comjoin\n\n  Sets the message that is shown to the player who joins the channel\n  corresponding to <object>.\n\n  Related Topics: addcom, CHANNEL OBJECT, @comleave, @comoff, @comon\n\n\n", "db_key": "@COMJOIN", "db_staff_only": false}}, {"pk": 58, "model": "help.helpentry", "fields": {"db_entrytext": "@COMLEAVE\n\n  COMMAND:   @comleave <object> = <message>\n  ATTRIBUTE: Comleave\n\n  Sets the message that is shown to the player who leaves the channel\n  corresponding to <object>.\n\n  Related Topics: CHANNEL OBJECT, @comjoin, @comoff, @comon, delcom.\n\n", "db_key": "@COMLEAVE", "db_staff_only": false}}, {"pk": 454, "model": "help.helpentry", "fields": {"db_entrytext": "@COMMENT\n\n  ATTRIBUTE: Comment\n\n  COMMAND: @comment <object>[=<text>]\n\n  Sets a wizard-visible comment on the indicated object. This attribute is\n  only visible and settable by wizards.\n\n", "db_key": "@COMMENT", "db_staff_only": false}}, {"pk": 59, "model": "help.helpentry", "fields": {"db_entrytext": "@COMOFF\n\n  COMMAND:   @comoff <object> = <message>\n  ATTRIBUTE: Comoff\n\n  Sets the message that is shown to the player who turns off the channel\n  corresponding to <object>.\n\n  Related Topics: alias, CHANNEL OBJECT, @comjoin, @comleave, @comon.\n\n", "db_key": "@COMOFF", "db_staff_only": false}}, {"pk": 60, "model": "help.helpentry", "fields": {"db_entrytext": "@COMON\n\n  COMMAND:   @comon <object> = <message>\n  ATTRIBUTE: Comon\n\n  Sets the message that is shown to the player who turns on the channel\n  corresponding to <object>.\n\n  Related Topics: alias, CHANNEL OBJECT, @comjoin, @comleave, @comoff.\n\n", "db_key": "@COMON", "db_staff_only": false}}, {"pk": 62, "model": "help.helpentry", "fields": {"db_entrytext": "@CONFORMAT\n\n  COMMAND: @conformat <object> [=<format>]\n\n  Replaces the usual \"Contents:\" or \"Carrying:\" format when an object\n  is looked at, by a player-specified contents format. This is evaluated\n  as if it were a description or other similar message on the room.\n  The objects that the looker would normally be able to see is passed\n  as a dbref list in %0; all contents can be acquired through 'lcon(me)'.\n  The contents name is passed in %1.\n\n  One could change the format to 'Contents: Object1 Object2 Object3'\n  through '@conformat here = %1 [iter(%0,name(##))]',\n  for example. More complex things are possible.\n\n  Related Topics: @exitformat, @nameformat\n\n", "db_key": "@CONFORMAT", "db_staff_only": false}}, {"pk": 63, "model": "help.helpentry", "fields": {"db_entrytext": "@COST\n\n  COMMAND:   @cost <object> = <amount>\n  ATTRIBUTE: Cost\n\n  Sets the number of coins that need to be given to an object to trigger the\n  Pay, Opay, and Apay attributes.  If the object is given more than this\n  amount, the excess is returned to the giver, while if less than this amount\n  is given the entire amount is returned, a snide message is sent to the\n  giver, and the Apay, Opay, and Pay attributes are not used.\n\n  This attribute is only meaningful for things, and will never be\n  automatically triggered on other object types.\n\n  Example: @cost Coke machine = 25\n\n  Related Topics: give, @apay, @opay, @pay.\n\n", "db_key": "@COST", "db_staff_only": false}}, {"pk": 64, "model": "help.helpentry", "fields": {"db_entrytext": "@CPATTR\r\n\r\n  @cpattr <obj>/<attr> = <obj1>/<attr1> [,<obj2>/<attr2>,<obj3>/<attr3>,...]\r\n  @cpattr <obj>/<attr> = <obj1> [,<obj2>,<obj3>,...]\r\n  @cpattr <attr> = <obj1>/<attr1> [,<obj2>/<attr2>,<obj3>/<attr3>,...]\r\n  @cpattr <attr> = <obj1>[,<obj2>,<obj3>,...]\r\n\r\n  The first form of this command is used to copy <attr> on <obj> to the\r\n  object-attribute pairs in a comma-separated list. For example:\r\n\r\n  @cpattr test/va = test/vb, cube/va, tribble/foo\r\n\r\n  would copy the VA attribute from object \"test\" to VB on \"test\",\r\n  VA on \"cube\", and FOO on \"tribble\".  <objN> is matched as if\r\n  you were performing a @set on it.\r\n\r\n  The second form copies <attr> to the list of objects, with the name\r\n  <attr>. The third form copies <attr> from the object that executes the\r\n  @cpattr, to the object-attribute pairs in the list. Finally, the fourth\r\n  form copies <attr> from the object that executes the @cpattr to the\r\n  objects in the list, with the name <attr>.\r\n\r\n", "db_key": "@CPATTR", "db_staff_only": false}}, {"pk": 65, "model": "help.helpentry", "fields": {"db_entrytext": "@CPFLAGS\n\n  COMMAND: @cpflags <channel>=[!]flag\n\n  Sets player flags for that channel. The flag can be one of: join, transmit\n  or receive.\n\n    transmit   Whether a player can broadcast (speak) over the channel.\n    join       Whether a player can join the channel.\n    receive    Whether a player can receive messages over the channel.\n\n  NOTE: Flags must be lower case.\n\n  If it is !flag, then that flag is reset. Channel flags ALWAYS override\n  locks on channel objects.\n\n  Example:\n    > @cpflags Public=join\n    @coflags: Set.\n\n  Related Topics: @coflags, @clist, CHANNEL OBJECT.\n\n", "db_key": "@CPFLAGS", "db_staff_only": false}}, {"pk": 66, "model": "help.helpentry", "fields": {"db_entrytext": "@CREATE\n\n  COMMAND: @create <name> [=<cost>]\n\n  Creates a thing with the specified name.  Creation costs either <cost>\n  or 10 coins, whichever is greater. The value of a thing is proportional\n  to its cost, specifically, value=(cost/5)-1.  The value may not be greater\n  than 100, values that would be greater than 100 are rounded down to 100.\n\n  Related Topics: @destroy, OBJECT TYPES\n\n", "db_key": "@CREATE", "db_staff_only": false}}, {"pk": 67, "model": "help.helpentry", "fields": {"db_entrytext": "@CSET\n\n  COMMAND: @cset/<option> <channel>[=<value>]\n\n  Changes the way a channel behaves. <option> can be one of the\n  following:\n\n    public  - channel is listed in everyone's @clist.\n    private - channel is hidden from the @clist.\n    loud    - channel announces player connects/disconnects.\n    mute    - shuts connects/disconnects off.\n    quiet   - same as mute.\n    spoof   - allows the comtitle to replace the player's name.\n    anon    - same as spoof.\n    nospoof - channel will append the player's name to the comtitle.\n    header  - Changes the prefix text used to announce a channel emit to\n              <value>. <value> may contain color.\n    object  - Sets the channel object to <value>. You must create an object\n              before associating a channel with it.\n    log     - Sets the maximum number of channel messages to log.\n              The channel must have an object.\n    timestamp_logs - [0/1] Indicates if log messages are prepended with a\n            - timestamp.   Channel must have an object and logging enabled.\n\n  You can set a description for the channel by changing the description\n  of the channel object. Also, the channel object's lock will be used\n  to check to see if people should be able to join the channel or not.\n\n  Examples:\n    > @cset/public Public\n    @cset: Channel Public placed on the public listings.\n    > @cset/object Public=#5\n    Channel Public is now using Garou Channel Object(#5) as channel object.\n\n  Related Topics: CHANNEL OBJECT, @ccreate, @create\n\n", "db_key": "@CSET", "db_staff_only": false}}, {"pk": 455, "model": "help.helpentry", "fields": {"db_entrytext": "@CUT\n\n  COMMAND: @cut <object/exit>\n\n  Cuts off the object or exit list for the current location at the indicated\n  object or exit by setting [next(thing)] to NOTHING.  Objects or exits that\n  follow in the chain are not moved or otherwise changed, and are only\n  accessible by object number.  This command is intended for performing\n  database repair, and should be used only with extreme caution.\n\n", "db_key": "@CUT", "db_staff_only": false}}, {"pk": 68, "model": "help.helpentry", "fields": {"db_entrytext": "@CWHO\n\n  COMMAND: @cwho <channel>[/all]\n\n  For channels that you own, identifies all connected players on the channel\n  and their stats for the channel. If switch is /all, then it also displays\n  unconnected players.\n\n  Example:\n    > @cwho Public/all\n    Name Status Player\n    Beowulf on yes\n    Ronan on yes\n\n  Related Topics: @clist.\n\n", "db_key": "@CWHO", "db_staff_only": false}}, {"pk": 69, "model": "help.helpentry", "fields": {"db_entrytext": "@DAILY\n\n  COMMAND:   @daily <object>=<command-list>\n  ATTRIBUTE: Daily\n\n  This attribute is automatically triggered once per day. No guarantees are\n  made as to what time it will execute.\n\n", "db_key": "@DAILY", "db_staff_only": false}}, {"pk": 456, "model": "help.helpentry", "fields": {"db_entrytext": "@DBCK\n\n  COMMAND: @dbck[/full]\n\n  Performs a scan of the database looking for inconsistencies in the object\n  chains, disconnected rooms, rooms waiting to be destroyed, and problems in\n  the object free list.  Problems that are found are reported to the log\n  file, disconnected rooms are reported to their owners, and players are\n  credited for rooms destroyed.  Database checks are automatically run\n  periodically, so there is usually no need to use this command.\n\n  With the /full switch, @dbck performs more thorough checking, but the\n  additional log messages will need more careful consideration and\n  interpretation.  Some of these messages can provide very useful insight\n  into the state of the database, but it doesn't make sense to run these\n  checks automatically.\n\n  Related Topics: @admin, @disable, @enable, @list.\n\n", "db_key": "@DBCK", "db_staff_only": false}}, {"pk": 457, "model": "help.helpentry", "fields": {"db_entrytext": "@DBCLEAN\n\n  COMMAND: @dbclean\n\n  This command searches the entire database and removes any stale\n  user-defined attributes.  It should be used sparingly, as it may take many\n  minutes to execute, depending upon database size and machine speed.  Only\n  God may execute this command.\n\n", "db_key": "@DBCLEAN", "db_staff_only": false}}, {"pk": 70, "model": "help.helpentry", "fields": {"db_entrytext": "@DECOMPILE\n\n  COMMAND: @decompile[/dbref] <thing>[/attr] [=<newname>]\n\n  Dumps the sequence of commands you would have to type to clone <thing>.\n  This is handy for saving your objects in a text file in case the MUX dies\n  a horrible death, or for moving your pride-and-joy creation from one MUX\n  to another.  @decompile works on all object types.\n  If you specify <newname>, then the commands emitted will set attributes,\n  locks, and flags on an object named <newname> and will omit the command\n  to create the object.\n  If you specify <thing>/<attr>, <attr> accepts wildcards.\n  If you specify the /dbref switch, you will get output using the dbref\n  number instead of the object name.\n\n  Related Topics: examine, look.\n\n", "db_key": "@DECOMPILE", "db_staff_only": false}}, {"pk": 458, "model": "help.helpentry", "fields": {"db_entrytext": "@DELCOMMAND\n\n  COMMAND: @delcommand <name>[=<thing>/<attribute>]\n\n  Deletes a command added by @addcommand.  With only <name> specified,\n  deletes all added commands under <name>.  When you specify <thing> and\n  <attribute>, it only deletes that specific entry.  If the command or\n  commands you are deleting had replaced a built-in command, the built-in\n  command and all aliases are restored to their normal names and actions.\n\n  Related Topics: @addcommand, @listcommands.\n\n", "db_key": "@DELCOMMAND", "db_staff_only": false}}, {"pk": 72, "model": "help.helpentry", "fields": {"db_entrytext": "@DESCFORMAT\n\n  COMMAND: @descformat <object> [=<format>]\n\n  Normally, the description of an object is controlled by the content and\n  formatting found in the DESCRIBE attribute.  With the WOD_REALMS package\n  enabled, DESCRIBE can be substituted in favor of other attributes.\n\n  However, in all cases, @descformat provides one final pass over the\n  appearance of an object.  The evaluated description text is passed as %0,\n  and the attribute name where this text can be found is passed as %1.  The\n  unevaluated description can be acquired using v(%1).\n\n  This is useful to achieve a consistent 'look' using room parents.\n\n  Related Topics: @conformat, @exitformat, @nameformat.\n\n", "db_key": "@DESCFORMAT", "db_staff_only": false}}, {"pk": 71, "model": "help.helpentry", "fields": {"db_entrytext": "@DESCRIBE\n\n  COMMAND:   @describe <object> = <description>\n  ATTRIBUTE: Desc\n\n  Sets the description for <object>, which others see when they look at the\n  object.  Giving all your objects, rooms, and exits good descriptions is\n  considered to be good building practice.\n\n  Function references and %-substitutions are allowed in descriptions, and\n  are evaluated when someone looks at the object.  In function references,\n  'me' refers to the object being looked at, while %-substitutions that refer\n  to the enactor (such as %n, %#, %p, etc) refer to the looker.\n\n  Examples:\n    <object> @desc vase = You see a delicate Ming vase.\n    <exit>   @desc elevator = There is an elevator to the east.\n\n  Related Topics: look, @adescribe, @odescribe.\n\n", "db_key": "@DESCRIBE", "db_staff_only": false}}, {"pk": 73, "model": "help.helpentry", "fields": {"db_entrytext": "@DESTROY\n\n  COMMAND: @destroy[/<switches>] <object>\n\n  This command destroys <object> and refunds its cost of creation to its\n  owner.  You must own <object> in order to @destroy it, unless its\n  DESTROY_OK flag is set, in which case anyone holding it may @destroy it.\n  Rooms, exits, and objects may be destroyed, although the actual\n  destruction of rooms is delayed for up to ten minutes and the GOING flag\n  is set on the victim room.  Clearing the GOING flag on the room spares it\n  from destruction.\n\n  If a thing OR its owner is set DESTROY_OK, the thing will be destroyed\n  with no delay. This can also be performed with the /instant switch.\n\n  The @destroy command will not destroy objects with the SAFE flag set unless\n  the /override switch is specified.  The DESTROY_OK flag overrides the\n  protection given by the SAFE flag.\n\n  The following switches are available:\n    /override  - Negate protection offered by the SAFE flag.\n    /instant   - Destroy with no delay.\n\n  Related Topics: DESTROY_OK, SAFE.\n\n", "db_key": "@DESTROY", "db_staff_only": false}}, {"pk": 74, "model": "help.helpentry", "fields": {"db_entrytext": "@DFAIL\n\n  COMMAND:   @dfail <object> = <message>\n  ATTRIBUTE: Dfail\n\n  Sets the message that a player sees when he tries to drop the object but\n  fails because he didn't pass the object's drop lock.\n\n  Function references and %-substitutions are allowed in drop failure\n  messages, and are evaluated when someone drops the object.  In function\n  references, 'me' refers to the object being dropped, while %-substitutions\n  that refer to the enactor (such as %n, %#, %p, etc) refer to the dropper.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @dfail sword = The sword has welded itself to your hand.\n\n  Related Topics: drop, @adfail, @odfail, @lock.\n\n", "db_key": "@DFAIL", "db_staff_only": false}}, {"pk": 75, "model": "help.helpentry", "fields": {"db_entrytext": "@DIG\n\n  COMMAND: @dig[/<switches>] <name> [= <exitlist> [, <exitlist>] ]\n\n  Creates a new room with the specified name and displays its number. This\n  command costs 10 coins. If the [= <exitlist>] option is used, an exit will\n  be opened from the current room to the new room automatically.  If the\n  second <exitlist> option (after the comma) is specified, an exit from the\n  new room back to the current room with the specified [Exits] name is\n  opened.  Either exit creation may fail if you do not have sufficient\n  rights to the current room to open or link the new exit.\n  Example: The command\n\n     @dig Kitchen = Kitchen;k;north;n,south;s\n\n  will dig a room called Kitchen, and open an exit called 'Kitchen' in your\n  current room.  The ; symbol means that you may enter the exit by typing\n  'k', 'north' or 'n' also.  This command also opens the exit 'south;s' from\n  'Kitchen' back to where you are.  Only the first Exit name is displayed in\n  the Obvious exits list.\n\n  If you specify the /teleport switch, then you are @teleported to the\n  room after it is created and any exits are opened.\n\n  Related Topics: @destroy, @link, @open, LINKING, OBJECT TYPES.\n\n", "db_key": "@DIG", "db_staff_only": false}}, {"pk": 459, "model": "help.helpentry", "fields": {"db_entrytext": "@DISABLE\n\n  COMMAND: @disable <option>\n\n  Turns off the indicated MUX runtime parameter.  The following parameters\n  may be turned off:\n\n    building      - Allows players to use the building commands.\n    checkpointing - Enables periodic database checkpoint dumping.\n    cleaning      - Enables periodic scanning of the database for rooms\n                    to be destroyed.\n    dequeueing    - Allows commands to be removed from the queue and\n                    executed.\n    idlechecking  - Enables periodic checking for and booting of idle\n                    players.\n    interpret     - Enables execution of commands that place commands\n                    on the queue.\n    logins        - Allows nonwizard players to connect to their characters.\n    eventchecking - Enables certain attribute events (@daily, etc) to occur.\n\n  These parameters are all enabled by default.\n\n  Related Topics: @enable, @list.\n\n", "db_key": "@DISABLE", "db_staff_only": false}}, {"pk": 76, "model": "help.helpentry", "fields": {"db_entrytext": "@DOING\n\n  COMMAND: @doing[/<switches>] [<message>]\n\n  Sets your DOING message, which appears after your name in the WHO\n  report.\n\n  The following switches are available:\n\n    /poll             - Displays the current poll message from the WHO report.\n    /header <message> - Sets a new poll message in the WHO report.\n    /unique           - Only set DOING message for the current connection.\n    /quiet            - Suppress 'Set.' notification message.\n\n  Related Topics: WHO, @poll.\n\n", "db_key": "@DOING", "db_staff_only": false}}, {"pk": 77, "model": "help.helpentry", "fields": {"db_entrytext": "@DOLIST\n\n  COMMAND: @dolist[/<switch>] [<delimiter>] <list>=<action>\n\n  <list> is a list of strings, which can be object numbers, attributes, or\n  arbitrary words.  <action> is a command to perform once for each item in\n  <list>, replacing the special symbol ## with the corresponding item from\n  <list>, and the symbol #@ with the position in the list, starting with\n  one. By default, @dolist considers each item in <list> to be separated\n  with spaces. If you specify the /delimit switch, then each item is\n  considered to be separated by <delimiter>. <delimiter> must be a single\n  character.\n\n  If present, <switch> can be any of:\n    /space   - (Default) List elements are separated by spaces.\n    /delimit - List elements are separated by <delimiter>.\n    /notify  - Queues a '@notify' after all commands in the list.\n\n  This command is particularly handy with lcon() and lexits(). A few examples:\n\n    @dolist [lcon(here)] = \"[name(##)](##)\n    @dolist [lcon(here)] = @switch [get(##/last)]=*1990*,\"[name(##)]\n    @va me = va vb vc\n    @dolist [get(me/va)] = @emit [get(me/##)]\n    @dolist Frodo Bilbo Gandalf = page ## = HELP!!!!  I've fallen into a pit.\n    @dolist/delimit , {Frodo, Bilbo Baggins, Gandalf} = page ## = HELP!!!!\n    @wait me=\"This is a semaphore.\n    @dolist/notify lnum(3)=say ##\n    > You say, \"This is a semaphore.\"\n    > You say, \"0\"\n    > You say, \"1\"\n    > You say, \"2\"\n\n  Related Topics: iter(), @notify, SEMAPHORES.\n\n", "db_key": "@DOLIST", "db_staff_only": false}}, {"pk": 78, "model": "help.helpentry", "fields": {"db_entrytext": "@DRAIN\n\n  COMMAND: @drain <object>\n\n  Discards all commands waiting on the semaphore <object> and resets the\n  semaphore to its initial state.\n\n  Related Topics: @notify, @ps, SEMAPHORES\n\n", "db_key": "@DRAIN", "db_staff_only": false}}, {"pk": 79, "model": "help.helpentry", "fields": {"db_entrytext": "@DROP\n\n  COMMAND:   @drop <object> = <message>\n  ATTRIBUTE: Drop\n\n  Sets the message that a player sees when he drops the object, or after he\n  goes through the exit.\n\n  Function references and %-substitutions are allowed in drop messages, and\n  are evaluated when someone drops the object.  In function references,\n  'me' refers to the object being dropped, while %-substitutions that refer\n  to the enactor (such as %n, %#, %p, etc) refer to the dropper.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Examples: <object> @drop vase = You gently put down the delicate vase.\n            <exit>   @drop elevator = The elevator doors close behind you.\n\n  Related Topics: drop, @adrop, @odrop, DROP-TO, EXITS.\n\n", "db_key": "@DROP", "db_staff_only": false}}, {"pk": 460, "model": "help.helpentry", "fields": {"db_entrytext": "@DUMP\n\n  COMMAND: @dump[/<switches>]\n\n  Writes a checkpoint dump of the database to disk.  Checkpoint dumps are\n  automatically performed periodically, so there is usually no need to use\n  this command.  Switches may be used to either dump just the structure\n  or text portions of the database to disk.  The default is to write out\n  both the text and structure portions.\n\n  All of the following switches may by used individually or together:\n\n     flatfile   - Dump an internally consistent flatfile which together\n                  with the mail and comsystem databases represent the\n                  entire database of game -- useful in a variety of ways\n                  including for a backup and for moving from one host to\n                  another.\n     structure  - Dump the structure portion of the database to a linear\n                  human-readable file.\n     text       - Ensure that all changes to the text portion of the\n                  database are written out to disk.\n\n  Note that the above structure and text options will cause your database and\n  certain caches to be out of sync. They should NOT be used in the course\n  of normal operation.\n\n  Related Topics: @admin, @disable, @enable, @list, @shutdown.\n\n", "db_key": "@DUMP", "db_staff_only": false}}, {"pk": 80, "model": "help.helpentry", "fields": {"db_entrytext": "@EALIAS\n\n  COMMAND:   @ealias <object> = <entrance-list>\n  ATTRIBUTE: Ealias\n\n  Sets up a set of alternate commands that may be used as synonyms for the\n  command 'enter <object>' when you are in the same location as the object.\n  The alternate commands are separated by semicolons just like in exit names.\n\n  Entry aliases are checked after exit names, built-in MUX commands, and leave\n  aliases for the current location, but before $-commands.  If more than one\n  object has an entry alias that matches a player's command, the one on the\n  object that occurs first in the location contents list is used.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically looked at on rooms or exits.\n\n  Example: @ealias car = get in car; car; climb in; go for a ride\n\n  Related Topics: @lalias, enter, leave.\n\n", "db_key": "@EALIAS", "db_staff_only": false}}, {"pk": 81, "model": "help.helpentry", "fields": {"db_entrytext": "@EDIT\n\n  COMMAND: @edit <object>/<wild-attr> = <search>,<replace>\n           @edit <object>/<wild-attr> = ^,<text>\n           @edit <object>/<wild-attr> = $,<text>\n\n  This command edits the contents of one or more attributes of an object,\n  eliminating the need to retype a long attribute in order to make a simple\n  change.  In the first form, all occurrences of <search> in the specified\n  attribute of the named object are replaced with <replace>.  Use curly\n  braces ({ and }) around <search> or <replace> if they contain commas.\n  The second and third form prepend and append <text> to the selected\n  attributes, respectively.\n\n  If <wild-attr> contains wildcard characters, then all attributes that\n  match are edited.\n\n", "db_key": "@EDIT", "db_staff_only": false}}, {"pk": 82, "model": "help.helpentry", "fields": {"db_entrytext": "@EFAIL\n\n  COMMAND:   @efail <object> = <command-list>\n  ATTRIBUTE: Efail\n\n  Sets the message that a player sees when he tries to enter the object but\n  fails because the object is not ENTER_OK or the player fails the\n  object's enter lock.\n\n  Function references and %-substitutions are allowed in efail messages, and\n  are evaluated when someone fails to enter the object.  In function\n  references, 'me' refers to the object that the enactor tried to enter, while\n  %-substitutions that refer to the enactor (such as %n, %#, %p, etc) refer to\n  the player who tried (and failed) to enter.\n\n  The enter lock only affects the 'enter' command and its aliases (set via\n  the @ealias command), it does not affect exits that lead to the object or\n  teleporting in.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically triggered on rooms or exits.\n\n  Example: @efail car = The car's door is locked.\n\n  Related Topics: @aefail, @aenter, @ealias, @enter, @oefail, @oenter, enter,\n      ENTER_OK.\n\n", "db_key": "@EFAIL", "db_staff_only": false}}, {"pk": 83, "model": "help.helpentry", "fields": {"db_entrytext": "@EMAIL\n\n  COMMAND: @email <address>[/<subject>]=<body>\n\n  Sends an E-mail to <address> containing given <body>.  The default subject\n  is controller by the mail_subject configuration option, but <subject>, if\n  given, overrides the default.\n\n  This command will not work unless configured properly.  See configuration\n  options in wizhelp.\n\n  Related Topics: mail_server, mail_ehlo, mail_sendaddr, mail_sendname,\n                  mail_subject\n\n", "db_key": "@EMAIL", "db_staff_only": false}}, {"pk": 84, "model": "help.helpentry", "fields": {"db_entrytext": "@EMIT\n\n  COMMAND: @emit[/<switches>] <message>\n\n  Sends <message> to everyone in your current location without prefixing it by\n  your character name.  You can also send the message to everyone in the room\n  that contains the object you are inside with the /room switch.\n\n  The following switches are available:\n\n     /here  - Sends the message to everyone in the same location as you.\n     /html  - Sends the message to HTML-flags players.\n     /room  - Sends the message to everyone in the room that contains the\n             object you are in.  Starting from your location, this switch\n             'leaves' objects until it reaches a room, and @emits the message\n             there.\n\n  If both switches are specified, the message is sent to both places.  If\n  neither is specified, /here is assumed.\n\n  Some MUXes may restrict the use of this command.\n\n  Related Topics: @femit, @oemit, @pemit, @npemit, @remit, SPOOFING.\n\n", "db_key": "@EMIT", "db_staff_only": false}}, {"pk": 461, "model": "help.helpentry", "fields": {"db_entrytext": "@ENABLE\n\n  COMMAND: @enable <option>\n\n  Turns on the indicated MUX runtime parameter.  The following parameters\n  may be turned on:\n\n    building      - Allows players to use the building commands.\n    checkpointing - Enables periodic database checkpoint dumping.\n    cleaning      - Enables periodic scanning of the database for rooms\n                    to be destroyed.\n    dequeueing    - Allows commands to be removed from the queue and\n                    executed.\n    idlechecking  - Enables periodic checking for and booting of idle\n                    players.\n    interpret     - Enables execution of commands that place commands\n                    on the queue.\n    logins        - Allows nonwizard players to connect to their characters.\n    eventchecking - Enables certain attribute events (@daily, etc) to occur.\n\n  These parameters are all enabled by default.\n\n  Related Topics: @disable, @list.\n\n", "db_key": "@ENABLE", "db_staff_only": false}}, {"pk": 85, "model": "help.helpentry", "fields": {"db_entrytext": "@ENTER\n\n  COMMAND:   @enter <object> = <message>\n  ATTRIBUTE: Enter\n\n  Sets the message that a player sees when entering an object or room,\n  whether by using an exit, the enter or leave commands, or by teleporting.\n\n  Function references and %-substitutions are allowed in enter messages, and\n  are evaluated when someone enters the object.  In function references,\n  'me' refers to the object being entered, while %-substitutions that refer\n  to the enactor (such as %n, %#, %p, etc) refer to the player entering the\n  object.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @enter car = You climb into the car and buckle your seat belt.\n\n  Related Topics: enter, @aenter, @oenter, ENTER_OK.\n\n", "db_key": "@ENTER", "db_staff_only": false}}, {"pk": 86, "model": "help.helpentry", "fields": {"db_entrytext": "@ENTRANCES\n\n  COMMAND: @entrances [[<object>][,<low>[,<high>]]]\n\n  Lists links from elsewhere to the specified object (default: your current\n  room).  For rooms, exits and drop-to's, leading to the room and players\n  and objects whose home is in the room are listed.  For players and objects,\n  lists exits leading to them.  Because this command is computationally\n  expensive, it costs 100 coins.  <low> and <high> can be used to indicate\n  where to start and stop the search, respectively.\n\n  Examples:\n    > @entrances             <- all links to here\n    > @entrances object      <- all links to object\n    > @entrances ,100,200    <- all links to here from #100 to #200\n    > @entrances me,1000     <- all links to me from #1000 and above.\n\n  Related Topics: @link, @unlink.\n\n", "db_key": "@ENTRANCES", "db_staff_only": false}}, {"pk": 87, "model": "help.helpentry", "fields": {"db_entrytext": "@EVAL\n\n  COMMAND: @eval <arg>\n\n  This command does nothing other than evaluate <arg> which makes it useful\n  for side-effects functions.  It is unlike think in that the result is not\n  treated as a message and ^-listens are not matched on the result.\n\n  Related Topics: @@, think.\n\n", "db_key": "@EVAL", "db_staff_only": false}}, {"pk": 88, "model": "help.helpentry", "fields": {"db_entrytext": "@EXITFORMAT\n\n  COMMAND: @exitformat <object> [=<format>]\n\n  Replaces the usual \"Obvious Exits:\" format when an object is looked\n  at, by a player-specified exits format. This is evaluated as if it\n  were a description or similar message on the room.  The objects that\n  the looker would normally be able to see is passed as a dbref list\n  in %0; all exits can be acquired through 'lexits(me)'.\n\n  One could change the format to 'Exits: Exit1 Exit2 Exit3' through\n  '@exitformat here = Exits: [iter(%0,name(##))]', for example.\n\n  Related Topics: @conformat, @nameformat\n\n", "db_key": "@EXITFORMAT", "db_staff_only": false}}, {"pk": 89, "model": "help.helpentry", "fields": {"db_entrytext": "@EXITTO\n\n  COMMAND:   @exitto <object> = <dbref function>\n  ATTRIBUTE: Exitto\n\n  This attribute is used to create variable exits.  If an @exitto is present\n  on an exit, and the <dbref function> returns a number or a dbref, the exit\n  behaves as if the returned dbref is the exit's destination.\n\n  Because this can be used to go anywhere, @exitto is a wizard-only\n  attribute.\n\n  Even though @exitto take precedence over the static destination of an exit,\n  don't forget to @link all exits anyway.  Anyone can @link an unlinked exit\n  and therefore 'own' and @destroy it.\n\n  Example:\n    > @open FooExit\n    Opened.\n    > @exitto FooExit=#123\n    Set.\n    > FooExit\n    Room123(#123)\n\n  Related Topics: EXITS.\n\n", "db_key": "@EXITTO", "db_staff_only": false}}, {"pk": 90, "model": "help.helpentry", "fields": {"db_entrytext": "@FAIL\n\n  COMMAND:   @fail <object> = <message>\n  ATTRIBUTE: Fail\n\n  Sets the failure message for <object>.  This message is seen by the actor\n  when one of these events occurs:\n\n    - For exits: Someone tries to traverse the exit but cannot because they\n      fail the exit's default lock or the exit is not linked.\n    - For players and things: Someone tries to pick up the object but cannot\n      because they fail the object's default lock.\n    - For rooms, players, and things: Someone looks around inside the room,\n      player, or thing and fails the object's default lock.\n\n  Substitution and evaluation is performed on the message before it is shown.\n\n  Example:\n    > @fail table = It's too heavy to lift!                            <thing>\n    > @fail doorway = The doorknob does not turn.                       <exit>\n\n  Related Topics: get, @afail, @ofail, FAILURE.\n\n", "db_key": "@FAIL", "db_staff_only": false}}, {"pk": 91, "model": "help.helpentry", "fields": {"db_entrytext": "@FEMIT\n\n  COMMAND: @femit[/<switches>] <object>=<message>\n\n  Forces <object> to emit <message>.  This command is similar to the command\n  '@force <object> = @emit <message>', except that it will work so long as\n  you own the object, whereas @force may fail if the object has its INHERIT\n  flag set and the object performing the @force does not.\n\n  The following switches are available:\n     /here  - Sends the message to everyone in the same location as <object>.\n     /room  - Sends the message to everyone in the room that contains the\n              object that <object> is in.  Starting from your location, this\n              switch 'leaves' objects until it reaches a room, and @emits the\n              message there.\n\n  If both switches are specified, the message is sent to both places.  If\n  neither is specified, /here is assumed.\n\n  Some MUXes may restrict the use of this command.\n\n  Related Topics: @remit, @emit, @fpose, @fsay, INHERIT, SPOOFING.\n\n", "db_key": "@FEMIT", "db_staff_only": false}}, {"pk": 92, "model": "help.helpentry", "fields": {"db_entrytext": "@FILTER\n\n  COMMAND:   @filter <object> = <pattern>[, <pattern>...]\n  ATTRIBUTE: Filter\n\n  This attribute specifies a series of patterns to be used to suppress\n  text normally forwarded by the AUDIBLE flag.  If the desired pattern\n  contains a comma, the pattern may be enclosed in curly braces {}.\n\n  Example:\n    > @fo test=out\n    > @set #378=puppet\n    test> test grows ears and can now hear.\n    > @filter out = {* has arrived.},{* has left.}\n    Set.\n    > :has not arrived.\n    Wizard has not arrived.\n    test> From a distance, Wizard has not arrived.\n    > :has arrived.\n    Wizard has arrived.\n\n  Related Topics:  AUDIBLE, @forwardlist, @infilter, @inprefix, @prefix.\n\n", "db_key": "@FILTER", "db_staff_only": false}}, {"pk": 93, "model": "help.helpentry", "fields": {"db_entrytext": "@FIND\n\n  COMMAND: @find <name>[,<low>[,<high>]]\n\n  Displays the name and number of every room, thing, or player that you\n  control whose name matches <name>. Because the command is computationally\n  expensive, it costs 100 coins.\n\n  <low> and <high> may be used to restrict the range of objects that are\n  searched, if they are given then the search starts at object #<low> and ends\n  at object #<high>.\n\n  Examples:\n    > @find Lost Room\n    > @find Secret Device,12000,14000\n\n  Related Topics: @search.\n\n", "db_key": "@FIND", "db_staff_only": false}}, {"pk": 462, "model": "help.helpentry", "fields": {"db_entrytext": "@FIXDB\n\n  COMMAND: @fixdb[/<switch>] <object>=<value>\n\n  This command directly edits the database structure according to the\n  switch specified.  As such, it is possible to produce database\n  inconsistencies that can hang or crash the server.  This command should\n  be used with extreme caution.\n\n  The following switches are available:\n\n     contents     - Sets the contents pointer of <object> to <value>\n     exits        - Sets the exits pointer of <object> to <value>\n     location     - Sets the location pointer of <object> to <value>\n     next         - Sets the next pointer of <object> to <value>\n     owner        - Sets the owner of <object> to <value>\n     pennies      - Sets the value or wealth of <object> to <value>\n     rename       - Renames <object> to <value>\n\n", "db_key": "@FIXDB", "db_staff_only": false}}, {"pk": 463, "model": "help.helpentry", "fields": {"db_entrytext": "@FLAG\n\n  Command: @flag[/<switch>] <oldflag>[=<newflag>]\n\n  This command either removes aliases of existing flags, or renames the flag.\n  For example, if you rename CONNECTED to BOBTHEWIZ, then whenever you\n  reference the previous 'CONNECTED' flag, it will be seen as 'BOBTHEWIZ'\n  instead.  This does not affect the character of 'c' for the flag, only the\n  name of it.  This takes effect until the server is shutdown or rebooted.\n  To make a permanent addition, you need to use the 'flag_name' config\n  parameter in the conf file.  The flag name must be between 1 and 63\n  characters, inclusively, and can not be a previously existing flag name.\n  If such a condition exists, it will return an error.\n\n  Switches:\n     /remove - used to remove a flag's alias.\n\n  Examples:\n    @flag/remove con (removes alias 'con' for 'connected')\n    @flag connect=bobthewiz (renames 'connected' to 'bobthewiz')\n\n  Note: The previous naming conventions are referenced automatically as\n  aliases for the flag unless specifically removed.\n\n  Related Topics: flag_name.\n\n", "db_key": "@FLAG", "db_staff_only": false}}, {"pk": 94, "model": "help.helpentry", "fields": {"db_entrytext": "@FOLDER\n\n  COMMAND:  @folder[/<switch>] [arg1]=[arg2]\n\n  @folder operates on @mail folders to view, set, and read mail messages\n  within folders.  The available switches are /file, /list, /read, and /set.\n\n  Usage:\n\n  @folder                         - Lists mail stats for all @mail folders.\n  @folder <folder>                - Sets the active folder to <folder>.\n  @folder <folder>=<message list> - Reads the <message list> in folder.\n  @folder/file <folder>=<msgs>    - Files <msgs> in <folder> like @mail/file.\n  @folder/list <folder>[=<msgs>]  - Lists <msgs> if provided from <folder> or\n                                    all messages in <folder>.\n  @folder/read <folder>=<mgs>     - Display <msgs> in <folder>\n  @folder/set  <folder>[=<name>]  - Set the active folder number if no name is\n                                    given, or give <folder> <name>.\n\n  Other than @folder/set or @folder <folder>, the @folder command does not\n  change the active folder for @mail.\n\n  Related Topics:  @mail, mail-folders\n\n", "db_key": "@FOLDER", "db_staff_only": false}}, {"pk": 95, "model": "help.helpentry", "fields": {"db_entrytext": "@FORCE\n\n  COMMAND: @force <player/object>=<command>\n\n  Forces the game to act as though <player/object> had entered <command>.\n  You may only force objects that you control.  Objects may not force players\n  unless either the object or the player has their INHERIT flag set, and\n  objects that do not have their INHERIT flag set may not force objects that\n  do.  If the victim is specified by number, you may use an alternate form\n  of the command, '#<number> <command>'.\n\n  Related Topics: puppets.\n\n", "db_key": "@FORCE", "db_staff_only": false}}, {"pk": 96, "model": "help.helpentry", "fields": {"db_entrytext": "@FORWARDLIST\n\n  COMMAND:   @forwardlist <object> = <dbref-list>\n  ATTRIBUTE: Forwardlist\n\n  Specifies a list of locations (specified by their db numbers) that are to\n  receive messages heard by <object> (filtered by the @filter attribute and\n  prefixed by the @prefix attribute).  The messages are only forwarded if\n  <object> has its AUDIBLE flag set.\n\n  Related Topics: @filter, @prefix, AUDIBLE.\n\n", "db_key": "@FORWARDLIST", "db_staff_only": false}}, {"pk": 97, "model": "help.helpentry", "fields": {"db_entrytext": "@FPOSE\n\n  COMMAND: @fpose[/<switches>] <object>=<message>\n\n  Forces <object> to pose <message>.  This command is similar to the command\n  '@force <object> = :<message>', except that it will work so long as you\n  own the object, whereas @force may fail if the object has its INHERIT flag\n  set and the object performing the @force does not.\n\n  The following switches are available:\n     /default - (default) Put a space between the name of the object and\n                the message (ie, send '<name> <message>').\n     /nospace - Don't put a space between the name of the object and the\n                message (ie, send '<name><message>').\n\n  Related Topics: @femit, @fsay, pose, :, ;, INHERIT.\n\n", "db_key": "@FPOSE", "db_staff_only": false}}, {"pk": 98, "model": "help.helpentry", "fields": {"db_entrytext": "@FSAY\n\n  COMMAND: @fsay <object>=<message>\n\n  Forces <object> to say <message>.  This command is similar to the command\n  '@force <object> = say <message>', except that it will work so long as you\n  own the object, whereas @force may fail if the object has its INHERIT flag\n  set and the object performing the @force does not.\n\n  Related Topics: @femit, @fpose, INHERIT, say.\n\n", "db_key": "@FSAY", "db_staff_only": false}}, {"pk": 464, "model": "help.helpentry", "fields": {"db_entrytext": "@FUNCTION\n\n  COMMAND: @function[/<switches>] [<function>[=<object>/<attr>]]\n\n  This command displays a list of currently-defined global functions or\n  adds a new global function named <function>.  When invoked, the\n  arguments to the function are loaded into %0-%9, the <attr> attribute\n  from <object> is fetched, and substitution is performed on the\n  resulting text.  The result of that substitution is returned as the\n  function result.\n\n  If no arguments are given, or if the /list switch is given, the command\n  displays a list of the currently-defined global functions. /privileged\n  functions are indicated with a 'W' and /preserve functions are indicated\n  with a 'p'.\n\n  If the /privileged switch is given, then the new global function is\n  evaluated as if the evaluation were being performed by the object on\n  which it is stored, instead of as if it were being performed by the\n  invoker of the function.  This may be used to allow access to\n  information normally available only to wizards.\n\n  The /preserve switch causes r-registers to be preserved across the\n  defined function, so you can feel free to use registers in the code\n  without worrying about them overwriting previous definitions.\n\n  The /delete switch removes an existing user-defined function.\n\n  The function definitions created by @function are not stored in the\n  database, so they need to be re-created each time the MUX is started.\n  It is recommended that the Startup attribute for player #1 include\n  code to set up all global functions.\n\n  This command may normally only be invoked by player #1.\n\n", "db_key": "@FUNCTION", "db_staff_only": false}}, {"pk": 99, "model": "help.helpentry", "fields": {"db_entrytext": "@GFAIL\n\n  COMMAND:   @gfail <object> = <message>\n  ATTRIBUTE: Gfail\n\n  Sets the message that a player sees when he tries to give away the object\n  but fails because he didn't pass the object's give lock.\n\n  Function references and %-substitutions are allowed in give failure\n  messages, and are evaluated when someone tries to give away the object.\n  In function references, 'me' refers to the object being given away, while\n  %-substitutions that refer to the enactor (such as %n, %#, %p, etc) refer\n  to the (attempted) giver.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @gfail sword = You can't give away a cursed sword!\n\n  Related Topics: give, @agfail, @ogfail, @lock.\n\n", "db_key": "@GFAIL", "db_staff_only": false}}, {"pk": 100, "model": "help.helpentry", "fields": {"db_entrytext": "@HALT\n\n  COMMAND: @halt [<object>]\n\n  Halts all commands being run by <object>, or by the object running the\n  command if no <object> is given.  If the object to be halted is a player,\n  then all commands being run by objects owned by that player are halted.\n  Use this command to stop runaway objects and infinite loops.\n  The process of halting an object involves removing all commands waiting\n  to be run by the object from the queue and refunding the queue deposit.\n  Halting an object does not affect commands waiting on it as a semaphore.\n\n  Related Topics: @drain, @notify, kill, HALTED, SEMAPHORES.\n\n", "db_key": "@HALT", "db_staff_only": false}}, {"pk": 465, "model": "help.helpentry", "fields": {"db_entrytext": "@HOOK\n\n  Command: @hook[/<switch(s)>] [<command/attribute>]\n\n  This command will set up 'hooks' to be applied to various commands or\n  attributes.  You may specify multiple hooks on items.  The HOOK_OBJ is\n  an @admin param that specifies the hook object.  The following hooks exist:\n\n         /before    - Set up a BEFORE hook which will execute before the\n                      corresponding built-in command/attribute is executed.\n                      The HOOK_OBJ attribute is b_<command>.\n\n         /after     - Set up an AFTER hook on a command which will execute\n                      after the corresponding built-in command/attribute is\n                      executed.  The HOOK_OBJ attribute is a_<command>.\n\n         /permit    - Affects command permission.  Return BOOLEAN TRUE to\n                      permit. Return FALSE to notify the enactor with\n                      'Permission denied.'.  The HOOK_OBJ attribute is\n                      p_<command>.\n\n         /ignore    - Return BOOLEAN FALSE to ignore the corresponding\n                      built-in command.  Any matching softcoded commands\n                      continue to be handled.  The HOOK_OBJ attribute is\n                      i_<command>.\n\n         /igswitch  - Specifies that any non-matching /switch to the command\n                      falls through and is handled by softcode.  This allows\n                      you to softcode switches to built-in commands.\n\n{ 'wizhelp @hook2' for more }\n\n", "db_key": "@HOOK", "db_staff_only": false}}, {"pk": 466, "model": "help.helpentry", "fields": {"db_entrytext": "@HOOK (continued)\n\n         /fail      - Set up a FAIL hook which executes if the command is\n                      somehow block by a @hook/permit or @icmd/disable.\n                      The HOOK_OBJ attribute is af_<command>.\n\n         /args      - Set up a ARGS hook which will execute once per\n                      argument passed to a built-in command. %0 is the first\n                      argument, %1 is the second argument, %2 is the\n                      argument in a list, %3 is which argument (starting\n                      at 0 with list arguments starting at 2), and %4 is the\n                      list of switches passed verbatim.\n\n         /clear     - When used in junction with any of the above switches,\n                      will clear the hook from being applied.\n\n         /list      - This lists the current commands/attributes with hooks.\n\n{ 'wizhelp @hook3' for examples}\n\n", "db_key": "@HOOK2", "db_staff_only": false}}, {"pk": 467, "model": "help.helpentry", "fields": {"db_entrytext": "@HOOK (continued)\n\n  Examples of @hook are as follows:\n\n    > @hook/before look\n    @hook: new mask for 'look' -> before\n    > @hook/after look\n    @hook: new mask for 'look' -> before after\n    > @hook/igswitch look\n    @hook: new mask for 'look' -> before after igswitch\n    > @hook/igswitch/clear look\n    @hook: new mask for 'look' -> before after\n    > @hook/list (or just @hook will work)\n    ---------------------------------+---------------------------------------\n    Built-in Command                 | Hook Mask Values\n    ---------------------------------+---------------------------------------\n    look                             | before after\n    ---------------------------------+---------------------------------------\n    Built-in Attribute               | Hook Mask Values\n    ---------------------------------+---------------------------------------\n                               -- No @hooks defined --\n    ---------------------------------+---------------------------------------\n\n  Related Topics: hook_obj, hook_cmd, HOOK SETUP.\n\n", "db_key": "@HOOK3", "db_staff_only": false}}, {"pk": 101, "model": "help.helpentry", "fields": {"db_entrytext": "@HTDESC\n\n  COMMAND: @htdesc <object> = <message>\n  ATTRIBUTE: HTDesc\n\n  Sets the HTML description for <object> to be shown when a player with the\n  HTML flag looks at the object. If there is no HTDesc set, then the player\n  is shown the regular description from Desc.\n\n  You may place regular, raw HTML in the @htdesc, however if you do so you\n  should set the HTML flag on the object. Without the flag any '<' characters\n  are translated to '&lt;' and any '>' are translated to '&gt;'. If this\n  occurs, the browser will display the '<' and '>' characters instead of\n  handling them as HTML tags.\n\n  Functions and %-substitutions are evaluated in this attribute.\n\n  Example:\n    > @htdesc me=<IMG SRC=\"http://www.fakeserver.com/image.png\">\n    > @set me/htdesc = html\n\n  See also: PUEBLO, @set, HTML\n\n", "db_key": "@HTDESC", "db_staff_only": false}}, {"pk": 468, "model": "help.helpentry", "fields": {"db_entrytext": "@ICMD\n\n  Command: @icmd</switch> <player [= arguments]>\n\n  This command sets personal command permissions on a player.\n  It only is useful for removing commands and not granting them.\n  This command is available only to #1.\n  Possible switches are:\n    /ON       - Turn on personal command parsing so that it checks\n                against invalid commands for the player. (Default)\n    /OFF      - Turn off personal command parsing so that commands\n                by player parses normally.\n    /DISABLE  - Disables the given command so it returns a\n                Permission Denied. (Default)\n    /IGNORE   - This command actually removes from existence the\n                specified commands from the user's standpoint so\n                that it is skipped upon command execution checks.\n    /CHECK    - Displays a list of the specified players current\n                disabled commands and at what level.\n                1=disabled   2=ignored\n    /CLEAR    - Removes all icmd information from player.\n\n{ Type 'wizhelp @icmd2' for more switches }\n\n", "db_key": "@ICMD", "db_staff_only": false}}, {"pk": 469, "model": "help.helpentry", "fields": {"db_entrytext": "@ICMD (continued)\n\n  Command: @icmd</switch> <player [= arguments]>\n  Continued Switches:\n\n    /IROOM    - This sets commands ignored on the location.\n                This is a NON-PLAYER.\n    /DROOM    - This sets commands disabled on the location.\n                This is a NON-PLAYER.\n    /CROOM    - Clears disabled/ignored commands on target location.\n                This is a NON-PLAYER.\n    /LROOM    - List disabled/ignored commands on target location.\n                This is a NON-PLAYER.\n    /LALLROOM - List all disabled/ignored commands at location\n                and zones from location.  Listings that start with\n                'z' are zonemasters.\n\n{ Type 'wizhelp @icmd3' for examples and syntax }\n\n", "db_key": "@ICMD2", "db_staff_only": false}}, {"pk": 470, "model": "help.helpentry", "fields": {"db_entrytext": "@ICMD (continued)\n\n  Command: @icmd</switch> <player [= arguments]>\n\n  The commands can be specified on the player in the form of:\n  COMMAND, !COMMAND, COMMAND, ..., etc\n\n  To remove the command from the player, a ! must be specified.\n  To change the level from DISABLE to IGNORE or visa versa, it\n  must first be REMOVED then ADDED.  For example:\n\n    @icmd/disable TinyJerk=page, whisper, @emit, @pemit\n    @icmd/ignore TinyJerk=!@pemit, !@emit, @pemit, @emit\n\n  The above would first set all four to disable.  The second\n  would remove @emit and @pemit and then re-add it as ignored.\n  The /disable switch is the default and assumed if no switches\n  are specified.  All aliases are taken into effect automatically.\n  For rooms you could do the following:\n\n    @icmd/droom here=page, whisper, @emit, @pemit\n    @icmd/iroom here=!@pemit, !@emit, @pemit, @emit\n\n  Example:  @icmd/ignore majortwit=page,\",:,say,pose,@emit,@pemit,whisper,;\n            @icmd/ignore dimwit=page,!say,!\",pose,:\n\n  Related Topics: access\n\n", "db_key": "@ICMD3", "db_staff_only": false}}, {"pk": 102, "model": "help.helpentry", "fields": {"db_entrytext": "@IDESC\n\n  COMMAND:   @idesc <object> = <message>\n  ATTRIBUTE: Idesc\n\n  Sets the internal description for <object>.  The internal description of an\n  object will be shown to any player entering it.  If not set, the regular\n  description in the Desc attribute is shown instead.\n\n  Function references and %-substitutions are allowed in inside descriptions,\n  and are evaluated when someone fails to get or look at the object.  In\n  function references, 'me' refers to the object being looked at, while\n  %-substitutions that refer to the enactor (such as %n, %#, %p, etc)\n  refer to the player doing the looking.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @idesc car = You are sitting in the driver's seat of a Volkswagen\n                        Beetle.\n\n  Related Topics: enter, @describe, ENTER_OK.\n\n", "db_key": "@IDESC", "db_staff_only": false}}, {"pk": 103, "model": "help.helpentry", "fields": {"db_entrytext": "@IDLE\n\n  COMMAND:   @idle <object> = <message>\n  ATTRIBUTE: Idle\n\n  This attribute is sent as a message to anyone who successfully pages you.\n  It can be used to tell someone who pages you when you will return\n  (if you are going to be away for a while).\n\n  This attribute is only meaningful for players, and will never be\n  automatically referenced on other object types.\n\n  If an @idletimeout is set on the person being paged, you will only see\n  the @idle message if that person is more idle than the specified amount\n  of time.\n\n  Example: @idle me = At dinner.  Back about 7PM.\n\n  Related Topics: @away, @idletimeout, @reject, page.\n\n", "db_key": "@IDLE", "db_staff_only": false}}, {"pk": 104, "model": "help.helpentry", "fields": {"db_entrytext": "@IDLETIMEOUT\n\n  COMMAND:   @idletimeout <object> = <seconds>\n  ATTRIBUTE: IdleTimeout\n\n  This attribute is used to determine if your @idle message is sent to\n  a player who successfully pages you.\n  If you're online and working at the same time, you can set the minimum\n  idle time to allow your message to show. so whilst you're not idle your\n  @idle message will not show without you having to delete it to hide it.\n\n  This attribute is only meaningful for players, and will never be\n  automatically referenced on other object types.\n\n  Example: @idle me = Working IRL. Monitoring this window from time to time.\n           @idletimeout me = 60\n\n  Related Topics: @away, @idle, @reject, page.\n\n", "db_key": "@IDLETIMEOUT", "db_staff_only": false}}, {"pk": 105, "model": "help.helpentry", "fields": {"db_entrytext": "@IF\n\n  COMMAND: @if <string>=<true>[,<false>]\n\n  Checks if <string> evaluates to a true value. If so, the command <true>\n  is performed. If not, <false> is (if present).\n  This command can also be called as @ifelse.\n\n  Examples:\n    > think money(me)\n    150\n    > @if [gte(money(me),1)]=say I have money., say I'm broke!\n    You say, \"I have money.\"\n\n  Related topics: @switch, ifelse(), switch().\n\n", "db_key": "@IFELSE", "db_staff_only": false}}, {"pk": 106, "model": "help.helpentry", "fields": {"db_entrytext": "@INFILTER\n\n  COMMAND:   @infilter <object> = <pattern>[, <pattern>...]\n  ATTRIBUTE: Infilter\n\n  This attribute specifies a series of patterns to be used to suppress\n  text normally sent to the contents of <object> by @listen.  If the desired\n  pattern contains a comma, the pattern may be enclosed in curly braces {}.\n\n  Example:\n    > @listen sports car=*\n    > @fo test=enter sports car\n    test has left.\n    test> Sports Car(#383Q)\n    > :waves.\n    test> Wizard waves.\n    Wizard waves.\n    > @infilter sports = *waves*\n    > :waves.\n    Wizard waves.\n    > :knocks on the window.\n    test> Wizard knocks on the window.\n    Wizard knocks on the window.\n\n  Related Topics: @filter, @inprefix, @listen, @prefix.\n\n", "db_key": "@INFILTER", "db_staff_only": false}}, {"pk": 107, "model": "help.helpentry", "fields": {"db_entrytext": "@INPREFIX\n\n  COMMAND:   @inprefix <object> = <prefix text>\n  ATTRIBUTE: Inprefix\n\n  This attribute, when set, will prefix all text that is sent to the contents\n  of <object> by @listen.  The default is to have no prefix, the text is\n  forwarded unadorned.\n\n  Example:\n    > @listen sports car=*\n    > @fo test=enter sports car\n    test has left.\n    test> Sports Car(#383Q)\n    > :waves.\n    test> Wizard waves.\n    Wizard waves.\n    > @inprefix sports car = In the mundane world outside,\n    test> In the mundane world outside, Wizard waves some more.\n    Wizard waves some more.\n\n  Related Topics: @filter, @infilter, @listen, @prefix.\n\n", "db_key": "@INPREFIX", "db_staff_only": false}}, {"pk": 471, "model": "help.helpentry", "fields": {"db_entrytext": "@KICK\n\n  COMMAND: @kick <count>\n\n  Immediately executes the first <count> commands from the top of the queue.\n\n  Related Topics: @disable, @enable, @timewarp.\n\n", "db_key": "@KICK", "db_staff_only": false}}, {"pk": 108, "model": "help.helpentry", "fields": {"db_entrytext": "@KILL\n\n  COMMAND:   @kill <object> = <message>\n  ATTRIBUTE: Kill\n\n  This command sets the message that is shown to anyone who kills <object>.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Function references and %-substitutions are allowed in kill messages, and\n  are evaluated when someone kills the object.  In function references, 'me'\n  refers to the object that was killed, while %-substitutions that refer to\n  the enactor (such as %n, %#, %p, etc) refer to the player doing the killing.\n\n  Example: @kill guard = The guard says \"I'll get.. you... for... this... %n\"\n                         as he falls down and dies.\n\n  Related Topics: kill, @akill, @okill, BEING KILLED, IMMORTAL, WIZARD.\n\n", "db_key": "@KILL", "db_staff_only": false}}, {"pk": 109, "model": "help.helpentry", "fields": {"db_entrytext": "@LALIAS\n\n  COMMAND:   @lalias <object> = <entrance-list>\n  ATTRIBUTE: Lalias\n\n  Sets up a set of alternate commands that may be used as synonyms for the\n  command 'leave' when you are inside a player or a thing.  The alternate\n  commands are separated by semicolons just like in exit names.\n\n  Leave aliases are checked after exit names and built-in MUX commands but\n  before enter aliases and $-commands.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically looked at on rooms or exits.\n\n  Example: @lalias car = get out;climb out;out;open door;outside\n\n  Related Topics: @ealias, enter, leave.\n\n", "db_key": "@LALIAS", "db_staff_only": false}}, {"pk": 110, "model": "help.helpentry", "fields": {"db_entrytext": "@LAST\n\n  COMMAND: @last <player>\n\n  This command displays a short 'connection history' for <player>, showing\n  recent successful and failed connection attempts, as well as the total\n  number of successful and failed connections.\n  You can only display information about yourself.\n\n", "db_key": "@LAST", "db_staff_only": false}}, {"pk": 111, "model": "help.helpentry", "fields": {"db_entrytext": "@LEAD\n\n  COMMAND:   @lead <object> = <message>\n  ATTRIBUTE: Lead\n\n  Sets the <message> seen by the object when it is lead.\n\n  This attribute is only available with --enable-firanmux.\n\n  Related Topics: @alead, @olead.\n\n", "db_key": "@LEAD", "db_staff_only": false}}, {"pk": 112, "model": "help.helpentry", "fields": {"db_entrytext": "@LEAVE\n\n  COMMAND:   @leave <object> = <message>\n  ATTRIBUTE: Leave\n\n  Sets the message that a player sees when leaving an object or room, whether\n  by using an exit, the enter or leave commands, or by teleporting.\n\n  Function references and %-substitutions are allowed in leave messages, and\n  are evaluated when someone leaves the object.  In function references,\n  'me' refers to the object being left, while %-substitutions that refer\n  to the enactor (such as %n, %#, %p, etc) refer to the player leaving the\n  object.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @leave car = You unbuckle your seat belt and climb out of the car.\n\n  Related Topics: leave, @aleave, @oleave.\n\n", "db_key": "@LEAVE", "db_staff_only": false}}, {"pk": 113, "model": "help.helpentry", "fields": {"db_entrytext": "@LFAIL\n\n  COMMAND:   @lfail <object> = <command-list>\n  ATTRIBUTE: Lfail\n\n  Sets the message that a player sees when he tries to leave it but fails\n  because the player fails the object's leave lock.\n\n  The leave lock only affects the 'leave' command and its aliases (set via\n  the @ealias command), it does not affect going home, using an exit in the\n  location, or teleporting out.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically triggered on rooms or exits.\n\n  Example: @lfail plane = You don't have a parachute!\n\n  Related Topics: @aleave, @alfail, @lalias, @leave, @oleave, @olfail, leave.\n\n", "db_key": "@LFAIL", "db_staff_only": false}}, {"pk": 114, "model": "help.helpentry", "fields": {"db_entrytext": "@LINK\n\n  COMMAND: @link <object>=#<number>/here/home\n\n  When used on a player or a thing, this command sets the object's home\n  to the indicated location.  The destination must be owned by you or be an\n  ABODE room, and you must pass the destination's LinkLock.\n\n  When used on a room, this command sets the room's drop-to, where objects\n  dropped in the room go.  The destination must be a room that is either owned\n  by you or is LINK_OK, and you must pass the destination's LinkLock.\n\n  For exits, this command sets the destination if the exit is currently\n  unlinked, you control the destination or it is set LINK_OK, and you pass the\n  destination's LinkLock.  You can @link an unlinked exit regardless of who\n  owns it or the lock set on it, you are made the owner if you successfully\n  link to the destination.  Linking an exit costs 1 coin, and if the exit was\n  owned by someone else, you also reimburse the former owner 1 coin\n  (making the total cost to you 2 coins).\n\n{ 'help @link2' for more }\n\n", "db_key": "@LINK", "db_staff_only": false}}, {"pk": 115, "model": "help.helpentry", "fields": {"db_entrytext": "@LINK (continued)\n\n  Note that in all the above cases that it is the player performing the @link\n  command that must pass the LinkLock, not the object being linked.\n  Therefore, you should use the '$' lock qualifier if you want to prevent\n  specific players from linking to your LINK_OK locations, as simply locking\n  against '*<playername>' does not lock out their puppets.\n\n  Related Topics: @dig, @open, @unlink, DROP-TOS, HOMES, LINKING, OBJECT TYPES.\n\n", "db_key": "@LINK2", "db_staff_only": false}}, {"pk": 116, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST\n\n  COMMAND: @list [<option>]\n\n  Lists information from internal databases.  Information is available\n  about the following options:\n    attributes      - Valid object attributes.\n    commands        - Commands that you may use (excluding the\n                      attribute-setting commands as well as any exits, and\n                      $-commands available).\n    costs           - Lists the costs associated with many commands and\n                      actions.\n    default_flags   - Lists the flags that new objects receive by default\n                      when created.\n    flags           - Lists the name and letter of all the flags.\n    functions       - Lists all the available functions.\n    options         - Lists several global options and limits.\n    powers          - Lists all powers.\n    switches        - Lists what commands support switches and the switches\n                      that they do support.\n  The information provided by the @list command is definitive, as it reads\n  the internal tables to produce the information it displays.  Specifying\n  @list with no argument lists the options you may use.\n\n", "db_key": "@LIST", "db_staff_only": false}}, {"pk": 472, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST ALLOCATIONS\n\n  COMMAND: @list allocations\n\n  This command lists the usage statistics for the internal buffer pools.\n  For each buffer pool, the following information is listed:\n\n    Size   - The size of a buffer, in characters.\n    InUse  - The number of buffers presently allocated from the pool.\n    Total  - The total number of buffers currently in the pool.\n    Allocs - The total number of buffers ever allocated from the pool.\n    Lost   - The number of buffers lost due to buffer header corruption.\n\n  Information is reported for the following pools:\n\n    Lbufs    - Large buffers, used when handling data input by the user,\n               object attributes, the results of interpreting commands, and\n               many other places.\n    Mbufs    - Medium-sized buffers, for when an sbuf is too small but an lbuf\n               is too large.\n    Sbufs    - Small buffers, for when you need only a little space.\n    Bools    - Boolean expressions, used when evaluating locks.\n    Descs    - Network descriptors, one is used for each connected player.\n    Qentries - Queue entries, one is used for each command placed on the\n               queue. (@wait, @trigger, @switch, @dolist, etc).\n    Lbufrefs - Reference counting structures for the lbufs that hold global\n               r-register contents.\n    Regrefs  - Reference counting structures for global r-registers.\n\n  Related Topics: @list buffers.\n\n", "db_key": "@LIST ALLOCATIONS", "db_staff_only": false}}, {"pk": 473, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST ATTRIBUTES\n\n  COMMAND: @list attributes\n\n  Lists the attributes that are visible or settable by you.\n\n  Related Topics: @list attr_access, @list permissions.\n\n", "db_key": "@LIST ATTRIBUTES", "db_staff_only": false}}, {"pk": 474, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST ATTR_PERMISSIONS\n\n  COMMAND: @list attr_permissions\n\n  Lists the attributes and the access restrictions that have been placed on\n  them. The attributes are listed one per line.  Refer to the attr_access\n  config parameter for the meanings of the restrictions.\n\n  Note that being allowed to write to an attribute does not imply the right\n  to use the @<attr-name> shorthand command to set it, just the @set command.\n\n  Related Topics: @list permissions, attr_access.\n\n", "db_key": "@LIST ATTR_PERMISSIONS", "db_staff_only": false}}, {"pk": 475, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST BAD_NAMES\n\n  COMMAND: @list bad_names\n\n  This command lists the player names that are not allowed to be created.\n  Any create request (whether via the login screen or @pcreate) that matches\n  (after wildcard expansion) one of the names in the list will be rejected.\n\n", "db_key": "@LIST BAD_NAMES", "db_staff_only": false}}, {"pk": 476, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST BUFFERS\n\n  COMMAND: @list buffers\n\n  For each buffer in a buffer pool that is currently allocated, lists where\n  within TinyMUX the buffer was allocated.\n\n", "db_key": "@LIST BUFFERS", "db_staff_only": false}}, {"pk": 477, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST COMMANDS\n\n  COMMAND: @list commands\n\n  Lists the internal commands that you may execute.  This command does not\n  list the attribute-setting commands that you may use (like @va or @ahear),\n  and does not list exits in your current room or $-commands on objects.\n\n  Related Topics: @list attr_access, @list attributes, @list permissions.\n\n", "db_key": "@LIST COMMANDS", "db_staff_only": false}}, {"pk": 478, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST COSTS\n\n  COMMAND: @list costs\n\n  Lists the costs that are associated with some commands, particularly those\n  that expand the database.\n\n", "db_key": "@LIST COSTS", "db_staff_only": false}}, {"pk": 479, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST DB_STATS\n\n  COMMAND: @list db_stats\n\n  Lists statistics for the database cache. If compression is enabled,\n  displays compression statistics as well.\n\n", "db_key": "@LIST DB_STATS", "db_staff_only": false}}, {"pk": 480, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST DEFAULT_FLAGS\n\n  COMMAND: @list default_flags\n\n  Lists the flags that are automatically given to players, things, rooms,\n  exits, and robots when they are created.\n\n  Related Topics: player_flags, thing_flags, room_flags, exit_flags,\n                  robot_flags.\n\n", "db_key": "@LIST DEFAULT_FLAGS", "db_staff_only": false}}, {"pk": 481, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST FLAGS\n\n  COMMAND: @list flags\n\n  For each object type, lists the name and key letter for all flags that may\n  be set on that object type that are visible to you.\n\n", "db_key": "@LIST FLAGS", "db_staff_only": false}}, {"pk": 482, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST FUNCTIONS\n\n  COMMAND: @list functions\n\n  Lists the functions that may be used to obtain information when evaluating\n  command lines.\n\n", "db_key": "@LIST FUNCTIONS", "db_staff_only": false}}, {"pk": 483, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST GLOBALS\n\n  COMMAND: @list globals\n\n  Lists the global parameters that may be set or cleared by the @enable and\n  @disable commands.  The following parameters are displayed.\n\n    building      - Indicates whether or not commands that alter the\n                    structure of the database are allowed.\n    checkpointing - Indicates whether or not the database is to be\n                    periodically written to disk.\n    cleaning      - Indicates whether or not the database is to be\n                    periodically checked for deleted or disconnected rooms,\n                    and other connectivity problems.\n    dequeueing    - Indicates whether or not commands on the queue may be\n                    automatically executed.\n    idlechecking  - Indicates whether or not the inactivity limits are\n                    enforced.\n    interpret     - Indicates whether or not new commands may be added to\n                    the queue.\n\n{ 'wizhelp @list globals2' for more }\n\n", "db_key": "@LIST GLOBALS", "db_staff_only": false}}, {"pk": 484, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST GLOBALS (continued)\n\n    logins        - Indicates whether or not nonwizard players are allowed\n                    to connect.\n\n  Related Topics: @dbck, @disable, @enable, @kick, @list permissions,\n                  @timewarp, checkpoint, conn_timeout, dump_interval,\n                  dump_offset, idle_interval, idle_timeout.\n\n", "db_key": "@LIST GLOBALS2", "db_staff_only": false}}, {"pk": 485, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST GUESTS\n\n  COMMAND: @list guests\n\n  Lists all the guests currently on the MUX, the name and dbref, if they are\n  connected or not, and the lastsite of the guest. A * before the entry\n  denotes that the guest will NOT be destroyed on an @dbck.\n\n", "db_key": "@LIST GUESTS", "db_staff_only": false}}, {"pk": 486, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST HASHSTATS\n\n  COMMAND: @list hashstats\n\n  Lists the hashing statistics for each of the internal hash tables.\n  For each hash table, the following information is displayed:\n\n    Size    - The number of hash buckets in the hash table.\n    Entries - The number of entries currently in the hash table.\n    Deleted - The number of entries that have been deleted from the hash\n              table.\n    Empty   - The number of hash buckets with no entries.\n    Lookups - The number of times the hash table has been searched.\n    Hits    - The number of times that an item that was searched for was\n              found.\n    Checks  - The total number of comparisons made against hash table entries\n              to see if they were the desired entry.\n    Longest - The maximum number of entries in one hash bucket.\n\n{ 'wizhelp @list hashstats2' for more }\n\n", "db_key": "@LIST HASHSTATS", "db_staff_only": false}}, {"pk": 487, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST HASHSTATS (continued)\n\n  Information is displayed for the following hash tables:\n\n    Commands            - Internal MUX commands\n    Logged-out commands - Commands valid whether or not you are connected\n                          (such as WHO and QUIT).\n    Functions           - MUX functions, such as rand() and lexits().\n    Flags               - Names of flags.\n    Powers              - Names of powers.\n    Attribute names     - Object attribute names.\n    Attribute numbers   - Object attribute numbers (only used internally).\n    Player names        - Names of all players.\n    Net descriptors     - Mapping of player DB numbers to net descriptors.\n    News topics         - Topics for the news command.\n    Help topics         - Topics for the help command.\n    Wizhelp topics      - Topics for the wizhelp command.\n\n  Related Topics: alias, attr_alias, flag_alias.\n\n", "db_key": "@LIST HASHSTATS2", "db_staff_only": false}}, {"pk": 488, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST LOGGING\n\n  COMMAND: @list logging\n\n  Lists the type of information that is written to the log file and how it is\n  displayed.  The following types of information may be logged:\n\n    accounting     - Usage information on player disconnect.\n    all_commands   - All commands executed by anyone or anything.\n    bad_commands   - Commands that resulted in a 'Huh?' message.\n    buffer_alloc   - Allocates and frees of buffers in the buffer pools.\n    bugs           - Things that should never happen, but did.\n    checkpoints    - Writes of the database to disk.\n    config_changes - Changes in the configuration parameters.\n    create         - The creation of new players.\n    killing        - Use of the kill command, successful and unsuccessful.\n    logins         - Players connecting and disconnecting.\n    network        - New and dropped network connections.\n    problems       - Database inconsistencies that are found.\n    security       - Connect attempts with the wrong password, etc.\n    shouts         - Messages sent to all players or all wizards.\n    startup        - Events while starting up.\n    wizard         - Use of powerful wizard commands, like @toad.\n\n{ 'wizhelp @list logging2' for more }\n\n", "db_key": "@LIST LOGGING", "db_staff_only": false}}, {"pk": 489, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST LOGGING (continued)\n\n  The following formatting information is listed:\n\n    flags          - Include flags for players/objects/rooms listed.\n    location       - Include location if player/object when requested.\n    owner          - Include owner of objects/rooms listed.\n    timestamp      - Prefix log entries by a timestamp.\n\n  Related Topics: log, log_options.\n\n", "db_key": "@LIST LOGGING2", "db_staff_only": false}}, {"pk": 490, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST MODULES\n\n  COMMAND: @list modules\n\n  Lists all modules known to the server along with their loaded state and\n  whether they were loaded by the server itself or loaded by a slave process\n  at the server's request.\n\n  Related Topics: @admin.\n\n", "db_key": "@LIST MODULES", "db_staff_only": false}}, {"pk": 491, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST OPTIONS\n\n  COMMAND: @list options\n\n  Lists the value of many of the configuration parameters.\n\n  Related Topics: @admin.\n\n", "db_key": "@LIST OPTIONS", "db_staff_only": false}}, {"pk": 492, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST PERMISSIONS\n\n  COMMAND: @list permissions\n\n  For each command that you are allowed to use, lists the permissions that are\n  needed to execute it.\n\n  Related Topics: access, attr_cmd_access.\n\n", "db_key": "@LIST PERMISSIONS", "db_staff_only": false}}, {"pk": 493, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST POWERS\n\n  COMMAND: @list powers\n\n  Lists the various powers.\n\n", "db_key": "@LIST POWERS", "db_staff_only": false}}, {"pk": 494, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST PROCESS\n\n  COMMAND: @list process\n\n  Lists information about the running MUX process and its resource usage.\n  The following information is returned:\n\n     Process number.\n     Pagesize of the system running the MUX, in bytes.\n     CPU time used, both user and system.\n     Maximum resident size, in both pages and bytes.\n     Integral resident size of the shared, private, and stack segments.\n        This number is not terribly useful.\n     Page faults, counting separately those that cause I/O and those that do\n        not.\n     Number of times the process has been swapped out.\n     Number of real disk reads and writes done (possibly via NFS).\n     Number of network packets read and written.\n     Context switches, counting separately voluntary switches (as the result\n        of calling a blocking I/O routine) and involuntarily switches (as the\n        result of a timeslice end or a higher-priority process becoming\n        runnable).\n     Signals received.\n     How many file descriptors are available to the MUX.\n\n", "db_key": "@LIST PROCESS", "db_staff_only": false}}, {"pk": 495, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST SITE_INFORMATION\n\n  Command: @LIST SITE_INFORMATION\n\n  Lists the contents of the site access and suspect lists.\n\n    Address - The address to which this entry applies.\n    Mask    - The mask that is ANDed to both the input address and the address\n              in the entry when checking to see if this entry is to be used.\n    Status  - Indicates what type of access or restriction is to be applied.\n              The following statuses may occur in the site access list:\n\n                Forbidden    - Connections from this site are rejected.\n                Registration - Connections from this site are accepted,\n                               new characters may not be created with the\n                               'create' command, players wanting a character\n                               must get a wizard to create one for them.\n                Unrestricted - Connections from this site are accepted,\n                               new characters may be created with the 'create'\n                               command.\n\n{ 'wizhelp @list site_information2' for more }\n\n", "db_key": "@LIST SITE_INFORMATION", "db_staff_only": false}}, {"pk": 496, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST SITE_INFORMATION (continued)\n\n              The following statuses may occur in the site suspect list:\n\n                Suspected    - Notify logged-in wizards of any connects or\n                               disconnects from this site.\n                Trusted      - Don't notify wizards of connects or disconnects\n                               from this site.\n\n  Related Topics: forbid_site, permit_site, register_site, suspect_site,\n                  trust_site, nositemon_site, guest_site.\n\n", "db_key": "@LIST SITE_INFORMATION2", "db_staff_only": false}}, {"pk": 497, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST SWITCHES\n\n  COMMAND: @list switches\n\n  Lists the commands that support switches as well as the switches that may\n  be used.\n\n", "db_key": "@LIST SWITCHES", "db_staff_only": false}}, {"pk": 498, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST USER_ATTRIBUTES\n\n  COMMAND: @list user_attributes [<pattern>]\n\n  Lists the defined user-named attributes, along with their internal\n  attribute numbers and access restrictions.\n\n  If <pattern> is given, only the user-named attributes which match\n  the <pattern> are reported.\n\n", "db_key": "@LIST USER_ATTRIBUTES", "db_staff_only": false}}, {"pk": 499, "model": "help.helpentry", "fields": {"db_entrytext": "@LISTCOMMANDS\n\n  COMMAND: @listcommands [<name>]\n\n  Lists commands added by @addcommand. With <name> specified, lists all\n  commands added under that particular command name. Without it, lists all\n  added commands.\n\n  Related Topics: @addcommand, @listcommands.\n\n", "db_key": "@LISTCOMMANDS", "db_staff_only": false}}, {"pk": 117, "model": "help.helpentry", "fields": {"db_entrytext": "@LISTEN\n\n  COMMAND:   @listen <object> = <string>\n  ATTRIBUTE: Listen\n\n  This attribute contains a wildcard pattern that the object listens for.\n  Anything spoken, posed, emitted, or whispered in the room that <object> is\n  in, as well as messages resulting from using objects (such as Opay and Succ\n  messages) are checked against the Listen attribute.  When the object hears\n  something that matches the pattern, it triggers the Ahear attribute, as\n  well as either the Amhear or Aahear attributes, as appropriate,\n  substituting %0 the string that matched the first wildcard character in the\n  Listen, %1 for the second. etc.  If the pattern in the Listen attribute is\n  matched, objects in <object>'s inventory will also hear the message and\n  have a chance to match it.  Objects whose Listen attribute is set to\n  anything will be listed when a @sweep command is run by someone in the\n  same room.\n\n  If the @listen pattern is matched, then the object's contents will\n  hear the message also, prefixed by the text in @inprefix if it is set.  Any\n  text that matches any pattern specified in @infilter will not be sent to\n  the contents.\n\n  Example: @listen camera = * has arrived.\n           @ahear camera = @va me = %va %0\n\n  Related Topics: @aahear, @ahear, @amhear, @sweep, @inprefix, @infilter.\n\n", "db_key": "@LISTEN", "db_staff_only": false}}, {"pk": 118, "model": "help.helpentry", "fields": {"db_entrytext": "@LISTMOTD\n\n  COMMAND: @listmotd\n\n  Displays the current message-of-the-day.  Note that it is displayed when\n  you connect to your character. This will also display the \"motd.txt\" file.\n\n", "db_key": "@LISTMOTD", "db_staff_only": false}}, {"pk": 500, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST_FILE\n\n  COMMAND: @list_file <file>\n\n  Lists the contents of one of the message files that are shown during the\n  connect/create/disconnect process as conditions warrant.  The following\n  files may be listed:\n\n     badsite_connect - shown when a connection is opened from a forbidden\n                       site.\n     connect          - shown when a connection is opened from a site for\n                        which registration is not enforced.\n     create_register  - shown when the 'create' command is used from a site\n                        for which registration is enforced.\n     down             - shown when a non-wizard attempts to connect to or\n                        create a character when logins are disabled.\n     full             - shown when a non-wizard attempts to connect to or\n                        create a character when the maximum number of connected\n                        players are connected.  Note that this is different\n                        from what happens when someone tries to connect but\n                        there are no free descriptors, which is\n                        machine-dependent (usually the connect attempt hangs\n                        or is rejected).\n     guest_motd       - shown to guest characters immediately after they\n                        connect.\n\n{ 'wizhelp @list_file2' for more }\n\n", "db_key": "@LIST_FILE", "db_staff_only": false}}, {"pk": 501, "model": "help.helpentry", "fields": {"db_entrytext": "@LIST_FILE (continued)\n\n     motd             - shown to all players immediately after they connect.\n                        (except guests and players connecting for the first\n                        time)\n     newuser          - shown to players the first time they connect in place\n                        of the motd file.\n     quit             - shown to players when they disconnect from the game.\n     register_connect - shown when a connection is opened from a site for\n                        which registration is enforced.\n     wizard_motd      - shown to wizards when they connect in addition to\n                        the motd file.\n\n  Related Topics: @readcache, badsite_file, connect_file, connect_reg_file,\n                  down_file, guest_file, motd_file, newuser_file, quit_file,\n                  register_create_file, wizard_motd_file.\n\n", "db_key": "@LIST_FILE2", "db_staff_only": false}}, {"pk": 119, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK\n\n  COMMAND: @lock[/<whichlock>] <object>=<key>\n           @lock <object>/<attrib>\n\n  The first form locks <object> to a specific key(s).  Type 'help @lock keys'\n  for a list of the keys you may use.\n\n  <whichlock> indicates which lock you want to set on the object.  If you\n  don't specify one, you set the Default lock. Type 'help @lock locks' for\n  a list of the locks you may set and what they are used for.\n\n  The second form locks the indicated attribute of the named object, so that\n  when the object is @chowned, the attribute will remain owned by you.\n  It may also be used when you own an attribute on an object that you do not\n  own, in this case it prevents the object's owner from @chowning the\n  attribute to himself, and prevents anyone from modifying or removing the\n  attribute.\n\n  Related Topics: @chown, @unlock, @lock keys, @lock locks\n\n", "db_key": "@LOCK", "db_staff_only": false}}, {"pk": 120, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK ATTRIBUTE\n\n  ATTRIBUTE LOCKS:\n\n  Key: <attribute>:<pattern>\n       +<attribute>:<wildcard-pattern>\n       =<attribute>:<wildcard-pattern>\n\n  You may lock on whether a specific attribute on the player attempting to\n  pass the lock matches a pattern.  Example: '@lock thing=sex:m*' will lock\n  thing to anyone whose sex starts with an M. Wild cards, greater than and\n  less than may be used, for example: '@lock a-f=name:<g' will lock the exit\n  a-f against any one whose name is higher than f.\n\n  Both the player testing the lock and every object in his inventory is\n  checked, the player passes the lock if any of those objects passes the lock.\n  If the attribute name is prefixed by a = then only the player is checked.\n  Similarly, if the attribute name is prefixed by a + then only objects in\n  the player's inventory are tested.\n\n{ 'help @lock attribute2' for more }\n\n", "db_key": "@LOCK ATTRIBUTE", "db_staff_only": false}}, {"pk": 121, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK ATTRIBUTE (continued)\n\n  Note: you may lock against any attribute, but the locked object must be\n  able to read the attribute from the player attempting to pass the lock or\n  the lock will fail.\n\n  Examples:\n    > @lock men's room=sex:m*\n    > @lock a-f=name:<g\n    > @lock post office=email:*@*\n\n  Related Topics: ATTRIBUTE OWNERSHIP, @lock evaluation.\n\n", "db_key": "@LOCK ATTRIBUTE2", "db_staff_only": false}}, {"pk": 122, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK CARRY\n\n  CARRY LOCKS:\n\n  Key: +<object>\n\n  You pass a carry lock if you are carrying the named object.\n\n  Example:\n    > @lock secret passage = +magic bus\n    You can only traverse the secret passage if you are carrying the\n    magic bus.  The bus cannot enter the passage on its own (perhaps\n    when you are driving it).\n\n  Related Topics: @lock is, @lock normal.\n\n", "db_key": "@LOCK CARRY", "db_staff_only": false}}, {"pk": 123, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK COMPOUND\n\n  COMPOUND LOCKS:\n\n  Key: <key> & <key>\n       <key> | <key>\n       !<key>\n       ( <key> )\n\n  You can make complex locks by combining keys with the logical AND and OR\n  operators (& and ! respectively), or by using the NOT operator.  You\n  may also group complex locks with parentheses.\n\n  Examples:\n    > @lock exit = me & !me\n    An impossible lock, nothing can be both you and not you.\n\n    > @lock message = me | *recipient\n    Both you and the player recipient may get the message.\n\n", "db_key": "@LOCK COMPOUND", "db_staff_only": false}}, {"pk": 124, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK EVALUATION\n\n  EVALUATION LOCKS:\n\n  Key: <attribute>/<value>\n\n  Evaluation locks let you evaluate one of your attributes and compare the\n  result against a value stored in the lock.  The result must be an exact\n  match (no wildcard-ing allowed, but upper-case and lower-case are considered\n  to be the same).  When evaluating the attribute the enactor substitutions\n  (%#/%n/etc) are replaced with information about the player trying to pass\n  the lock, and 'me' and %! refer to the locked object or exit.\n\n  If you call an indirect lock and the indirect lock is an evaluation lock\n  (or is a compound lock that includes an evaluation lock), then the original\n  lock object is checked for the attribute first, followed by the object that\n  has the actual evaluation lock.  If there are multiple levels of indirection\n  the intermediate locks are not checked.\n\n{ 'help @lock evaluation2' for more }\n\n", "db_key": "@LOCK EVALUATION", "db_staff_only": false}}, {"pk": 125, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK EVALUATION (continued)\n\n  Examples:\n    > @lock bank=checkmoney/1\n    > &checkmoney bank=[gt(money(%#),5000)]\n    Only people and objects with more than 5000 pennies may pass.\n    Note: this lock requires wizard privileges to read the worth of other\n    players.\n\n    > @lock divisible_by_five_club = checkdiv/0\n    > &checkdiv divisible_by_five_club = [mod(mid(%#,2,20),5)]\n    Only objects whose db-number is divisible by 5 may pass.\n\n  Related Topics: @lock attribute.\n\n", "db_key": "@LOCK EVALUATION2", "db_staff_only": false}}, {"pk": 126, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK INDIRECT\n\n  INDIRECT LOCKS:\n\n  Key: @<object>\n\n  You may reference the lock on another object and use the result of\n  evaluating that other object's lock.    You pass an indirect lock if you\n  pass the default lock on <object>.  This is especially useful if you\n  have a large number of objects or exits that want to have the same lock,\n  and you want to be able to update one object and have all the other\n  locks change at the same time.\n\n  <object> is searched for when you enter the @lock command and its\n  database number is stored in the lock, so something like\n  '@Lock north=@master.lock' is safe even if you are going to move master.lock\n  to another location.\n\n  Examples:\n    > @lock master.lock = me\n    > @lock north = @master.lock\n    > @lock south = @master.lock\n    North and south all reference the lock on master.lock, so you may change\n    the lock on all three exits by changing master.lock.\n\n  Related Topics: @lock normal.\n\n", "db_key": "@LOCK INDIRECT", "db_staff_only": false}}, {"pk": 127, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK IS\n\n  IS LOCKS:\n\n  Key: =<object>\n\n  You pass an is lock only if you are the named object.\n\n  Example:\n    > @lock mystical highway = =magic bus\n    Only the magic bus may travel down the mystical highway.  You cannot\n    travel the highway if you are carrying the bus.\n\n  Related Topics: @lock carry, @lock normal.\n\n", "db_key": "@LOCK IS", "db_staff_only": false}}, {"pk": 128, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK KEYS\n\n  You may use the following keys when setting locks.  For information about\n  a particular type of key, type 'help @lock <keytype>'.\n\n  Key Type    Form in @Lock Command\n  ----------  ------------------------------\n  Normal      <object>\n  Is          =<object>\n  Carry       +<object>\n  Ownership   $<object>\n  Indirect    @<object>\n  Attribute   <attribute>:<wildcard-pattern>\n              +<attribute>:<wildcard-pattern>\n              =<attribute>:<wildcard-pattern>\n  Evaluation  <attribute>/<value>\n  Compound    <key> & <key>\n              <key> | <key>\n              !<key>\n              ( <key> )\n\n", "db_key": "@LOCK KEYS", "db_staff_only": false}}, {"pk": 129, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK LOCKS\n\n  You can set the following locks:\n\n     DefaultLock:  Exits:          controls who may traverse the exit to\n                                   its destination.\n                   Rooms:          controls whether the player sees the SUCC\n                                   or FAIL message for the room following the\n                                   room description when looking at the room.\n                   Players/Things: controls who may GET the object.\n     EnterLock:    Players/Things: controls who may ENTER the object if the\n                                   object is ENTER_OK. Also, the enter lock\n                                   of an object being used as a Zone Master\n                                   Object determines control of that zone.\n     GetFromLock:  All but Exits:  controls who may gets things from a given\n                                   location.\n     GiveLock:     Players/Things: controls who may give the object.\n     LeaveLock:    Players/Things: controls who may LEAVE the object.\n     LinkLock:     All but Exits:  controls who may link to the location if the\n                                   location is LINK_OK (for linking exits or\n                                   setting drop-tos) or ABODE (for setting\n                                   homes)\n     MailLock:     Players:        controls who may @mail the player.\n     OpenLock:     All but Exits:  controls who may open an exit.\n     PageLock:     Players:        controls who may page the player.\n     ParentLock:   All:            controls who may make @parent links to the\n                                   object.\n     ReceiveLock:  Players/Things: controls who may give things to the object.\n\n{ 'help @lock locks2' for more }\n\n", "db_key": "@LOCK LOCKS", "db_staff_only": false}}, {"pk": 130, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK LOCKS (continued)\n\n     SpeechLock:   All but Exits:  controls who may speak in that location\n                                   (only checked if AUDITORIUM flag is set\n                                   on that location)\n     TeloutLock:   All but Exits:  controls who may teleport out of the\n                                   location.\n     TportLock:    Rooms/Things:   controls who may teleport there if the\n                                   location is JUMP_OK.\n     UseLock:      All but Exits:  controls who may USE the object, GIVE the\n                                   object money and have the PAY attributes\n                                   run, have their messages heard and possibly\n                                   acted on by LISTEN and AxHEAR, and invoke\n                                   $-commands stored on the object.\n     DropLock:     All but rooms:  controls who may drop that object.\n     UserLock:     All:            Not used by MUX, is intended to be used\n                                   in MUX programming where a user-defined\n                                   lock is needed.\n     VisibleLock:  All:            Controls object visibility when the object\n                                   is not dark and the looker passes the lock.\n                                   In DARK locations, the object must also be\n                                   set LIGHT and the viewer must pass the\n                                   VisibleLock.\n\n Note: If a player fails the UseLock on a parent of an object being searched\n for $-commands, then the search for attributes stops and the parent chain is\n not searched further for matches.\n\n", "db_key": "@LOCK LOCKS2", "db_staff_only": false}}, {"pk": 131, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK NORMAL\n\n  NORMAL LOCKS:\n\n  Key: <object>\n\n  You pass a normal lock if you either are the named object or if you carry\n  the named object.  <object> may be the name or #number of a thing,  a\n  playername prefixed by an asterisk (*<playername>), 'me', or 'here'.\n\n  Examples:\n    > @lock treasure room = secret key\n    > @lock private area = me\n\n  Related Topics: @lock is, @lock carry.\n\n", "db_key": "@LOCK NORMAL", "db_staff_only": false}}, {"pk": 132, "model": "help.helpentry", "fields": {"db_entrytext": "@LOCK OWNERSHIP\n\n  OWNERSHIP LOCKS:\n\n  Key: $<object>\n\n  You pass an ownership lock if you have the same owner as <object>.\n\n  Examples:\n    > @lock mystuff=$me\n    Only objects you own may use the mystuff exit.\n\n    > @lock/page me = !$*TinyJerk\n    Neither TinyJerk nor any of his objects may page you.\n\n  Related Topics: @lock normal.\n\n", "db_key": "@LOCK OWNERSHIP", "db_staff_only": false}}, {"pk": 502, "model": "help.helpentry", "fields": {"db_entrytext": "@LOG\n\n  COMMAND: @log <file>=<message>\n\n  This logs the message (without timestamp) to the named file. Pathnames\n  are stripped, and the file resides in 'game/logs' under the name\n  'M-<file>.log'.\n\n  The file must already exist for the @log request to succeed, and can only\n  be created at the MUX account shell.\n\n", "db_key": "@LOG", "db_staff_only": false}}, {"pk": 133, "model": "help.helpentry", "fields": {"db_entrytext": "@MAIL\n\n  @mail[/<switches>] <player-list> = <subject>\n  @mail[/<switches>] [<msg-list> [= <target>]]\n\n  @mail invokes the built-in MUX mailer, which allows players to send\n  and receive mail. Pronoun/function substitution is performed on\n  any messages you may try to send.\n\n  A <player-list> is a space-separated list of recipients, which may be:\n        Player names (names with spaces in them should be put in double\n                      quotes, ex: \"Foo Bar\")\n        Player dbref #'s\n        Message numbers to be replied to.\n        A mix of the above, and mail aliases (see @malias)\n\n  A <msg-list> is one of the following:\n        A single msg # (ex: 3)\n        A message range (ex: 2-5, -7, 3-)\n        A sender (ex: *Hunger)\n        An age of mail in days (ex: ~3 (exactly 3), <2, >1)\n           \"days\" here means 24-hour periods from the current time.\n        One of the following: \"read\", \"unread\", \"cleared\", \"tagged\", \"urgent\"\n        For certain commands, \"all\".\n\n  Related Topics:\n    mail-sending    mail-reading     mail-folders      mail-other\n    mail-admin      @malias          mail-reviewing    mail-examples\n    @folder\n\n", "db_key": "@MAIL", "db_staff_only": false}}, {"pk": 134, "model": "help.helpentry", "fields": {"db_entrytext": "@MAILSUCC\n\n  COMMAND:   @mailsucc <player> = <message>\n  ATTRIBUTE: Mailsucc\n\n  Sets a message to be displayed to the sender whenever <player> receives\n  mail.\n\n  Example:\n    @mailsucc me=Thanks for the mail.\n\n  Related Topics: @amail, @signature, @mail.\n\n", "db_key": "@MAILSUCC", "db_staff_only": false}}, {"pk": 135, "model": "help.helpentry", "fields": {"db_entrytext": "@MALIAS\n\n  COMMAND: @malias\n\n  This allows you to generate and maintain mailing lists with the mail\n  system. All mail aliases start with '*', and are case-sensitive. (*dir is\n  different than *Dir).  There are two kinds of mail aliases, Personal\n  and Global. Global mailing lists are owned and maintained by the god (#1)\n  char and are available for anyone to use.  Generally there will be\n  *Wizards, *Admin, *Roleplay, and things of that nature.  Personal mailing\n  aliases are mailing lists that you have defined with the @malias command.\n  Currently there is no limit to the number of people you can have on a\n  mailing alias.\n\n  To begin sending mail to a mailing list, use @mail *<alias>=subject.\n\n  Usage:\n\n  @malias                   Displays a list of all mail aliases.\n  @malias *<alias>          Displays a list of people on that alias.\n  @malias *<alias>=<list>   Creates that mailing list, using <list>.\n\n{ 'help @malias2' for more }\n\n", "db_key": "@MALIAS", "db_staff_only": false}}, {"pk": 136, "model": "help.helpentry", "fields": {"db_entrytext": "@MALIAS (continued)\n\n  You can add, remove, rename, chown, redescribe, and delete mailing lists\n  with a switch.\n\n  @malias/remove *<alias>=<player>     Removes <player> from *<alias>.\n  @malias/desc *<alias>=<description>  Changes the description for *<alias>.\n  @malias/add *<alias>=<player>        Adds <player> to *<alias>.\n  @malias/rename *<alias>=<name>       Renames that alias. Names must always\n                                       begin with '*'.\n  @malias/delete *<alias>              Deletes <alias>.\n  @malias/chown *<alias>=<player>      Changes the owner of <alias> to\n                                       <player>.\n\n  Wizards can use all of the malias commands on any mail alias. Instead of\n  trying to figure out different mailing lists with the same name, wizards\n  may use #<MALIAS NUMBER> instead of *alias in regards to the command.\n  Remember that the alias commands will only recognize aliases owned by #1,\n  owned by you, or by number.\n\n  @malias/list                         When invoked by a wizard, it will\n                                       list all mailing aliases currently\n                                       defined by their number.\n\n", "db_key": "@MALIAS2", "db_staff_only": false}}, {"pk": 503, "model": "help.helpentry", "fields": {"db_entrytext": "@MARK\n\n  COMMAND: @mark[/<switches>] [<player>] [<class>=<restriction>]\n\n  Sets or clears the MARKED flags for objects that match the search criteria.\n  This command may only be used when database cleaning is disabled (via\n  @disable cleaning), as cleaning uses the MARKED flag to check\n  connectivity.\n\n  The following switches are available:\n\n     /set    - (default) Set the MARKED flag on the selected objects.\n     /clear  - Clear the MARKED flag on the selected objects.\n\n  Related Topics: @apply_marked, @mark_all, MARKED, SEARCH CRITERIA.\n\n", "db_key": "@MARK", "db_staff_only": false}}, {"pk": 504, "model": "help.helpentry", "fields": {"db_entrytext": "@MARK_ALL\n\n  COMMAND: @mark_all[/<switches>]\n\n  Sets or clears the MARKED flag for all objects in the database.  This\n  command may only be used when database cleaning is disabled (via @disable\n  cleaning), as cleaning uses the MARKED flag to check connectivity.\n\n  The following switches are available:\n\n     /set    - (default) Set the MARKED flag on all objects.\n     /clear  - Clear the MARKED flag on all objects.\n\n  Related Topics: @apply_marked, @mark_all, MARKED.\n\n", "db_key": "@MARK_ALL", "db_staff_only": false}}, {"pk": 137, "model": "help.helpentry", "fields": {"db_entrytext": "@MFAIL\n\n  COMMAND:   @mfail <object> = <message>\n  ATTRIBUTE: Mfail\n\n  This attribute is sent as a message to anyone who tries to @mail you but you\n  have prevented them via your @mail lock (@lock/mail).\n\n  Example: @mfail me = I _told_ you not to @mail me anymore...\n\n  Related Topics: @lock, @mail, @reject.\n\n", "db_key": "@MFAIL", "db_staff_only": false}}, {"pk": 138, "model": "help.helpentry", "fields": {"db_entrytext": "@MONIKER\n\n  Command: @moniker <object> = <string>\n  Attribute: Moniker\n\n  The @moniker command allows you to set accented, multi-color names for\n  an item.  This affects contents, inventories, the normal 'look', and\n  many other cases.\n\n  The name in @moniker MUST match the name returned by name() minus ANSI\n  codes and accent marks or the moniker is ignored in favor of name().\n\n  Examples:\n    > @name object=99 Red Balloons\n    Name set.\n    > @moniker object=99 [ansi(hr,Red)] Baboons\n    String entered must match name of target, '99 Red Balloons'.\n    > @moniker object=99 [ansi(hr,Red)] Balloons\n    Ansi string entered for 99 Red Balloons of '99 Red Balloons'.\n\n  Related Topics: accent(), ansi(), chr(), moniker(), @name, ASCII, ord(),\n                  stripaccents(), and stripansi().\n\n", "db_key": "@MONIKER", "db_staff_only": false}}, {"pk": 505, "model": "help.helpentry", "fields": {"db_entrytext": "@MOTD\n\n  COMMAND: @motd[/<switches>] <message>\n\n  This command sets or lists short messages that are displayed to players\n  after they successfully log in to the game (or after they fail because\n  logins are not allowed).  These messages are displayed in addition to\n  the contents of the motd.txt and wizmotd.txt files.\n\n  The following switches are available:\n\n     (No switches)   - Sets the message that all players see when they\n                       connect.\n     /wizard         - Sets the message that wizards see when they connect.\n     /down           - Sets the message the players see when they try to\n                       connect, but fail because logins are disabled.\n     /full           - Sets the message that players see when they try to\n                       connect, but fail because there are too many players\n                       already connected.\n     /list           - Lists the current messages.\n\n  Related Topics: @listmotd.\n\n", "db_key": "@MOTD", "db_staff_only": false}}, {"pk": 139, "model": "help.helpentry", "fields": {"db_entrytext": "@MOVE\n\n  COMMAND:   @move <object> = <message>\n  ATTRIBUTE: Move\n\n  Sets the <message> that an object sees after it moves from one location to\n  another, whether by using an exit, entering or leaving an object,\n  teleporting, or going home.\n\n  This attribute is meaningful for players, and things and will never be\n  automatically triggered on other object types.\n\n  Example: @move bopper = OK.  You're there now.\n\n  Related Topics: @amove, @omove.\n\n", "db_key": "@MOVE", "db_staff_only": false}}, {"pk": 140, "model": "help.helpentry", "fields": {"db_entrytext": "@MVATTR\n\n  COMMAND: @mvattr <object>=<old>,<new>[,<copy1>]...\n\n  This command moves attributes around on an object.  The attribute <old> is\n  renamed <new> (and is copied to <copy1>, <copy2> and so on if specified).\n  If you cannot modify the <old> attribute (for instance if you are trying to\n  move the Last attribute, or if it were owned by another player), then a new\n  copy is made and the original is not removed.\n\n  Related Topics: @set.\n\n", "db_key": "@MVATTR", "db_staff_only": false}}, {"pk": 141, "model": "help.helpentry", "fields": {"db_entrytext": "@NAME\n\n  COMMAND: @name <object> = <new name>\n\n  Changes the name of <object>.  <object> can be a thing, player, exit, or\n  room, specified as <name> or #<dbref> or 'me' or 'here'.\n\n  See '@list options' as to whether or not a player name may contain\n  spaces.\n\n  Related Topics: setname().\n\n", "db_key": "@NAME", "db_staff_only": false}}, {"pk": 142, "model": "help.helpentry", "fields": {"db_entrytext": "@NAMEFORMAT\n\n  COMMAND: @nameformat <object> [=<format>]\n\n  By default, when an object is looked at, the object's name is shown.  And,\n  if you can link to the object, its flag letters and dbref are also shown.\n\n  With @nameformat, you can control exactly what is shown to people who\n  use 'look' while inside.  @nameformat is not used when people outside the\n  object look at it.\n\n  Related Topics: @conformat, @descformat, @exitformat\n\n", "db_key": "@NAMEFORMAT", "db_staff_only": false}}, {"pk": 143, "model": "help.helpentry", "fields": {"db_entrytext": "@NEMIT\n\n  COMMAND: @nemit[/<switches>] <message>\n\n  Sends <message> to everyone in your current location without prefixing it by\n  your character name and without evaluating it.  You can also send the\n  message to everyone in the room that contains the object you are inside with\n  the /room switch.\n\n  The following switches are available:\n\n     /here  - Sends the message to everyone in the same location as you.\n     /html  - Sends the message to HTML-flags players.\n     /room  - Sends the message to everyone in the room that contains the\n             object you are in.  Starting from your location, this switch\n             'leaves' objects until it reaches a room, and @emits the message\n             there.\n\n  If both switches are specified, the message is sent to both places.  If\n  neither is specified, /here is assumed.\n\n  Some MUXes may restrict the use of this command.\n\n  Related Topics: @emit, @femit, @oemit, @pemit, @npemit, @remit, SPOOFING.\n\n", "db_key": "@NEMIT", "db_staff_only": false}}, {"pk": 506, "model": "help.helpentry", "fields": {"db_entrytext": "@NEWPASSWORD\n\n  COMMAND: @newpassword <player>[=<newpassword>]\n\n  Gives <player> the new password <newpassword>.  If <newpassword> is not\n  specified, the player is given a null password.  If logged in, the player\n  is notified that his password has been changed.\n\n  Related Topics: @password.\n\n", "db_key": "@NEWPASSWORD", "db_staff_only": false}}, {"pk": 144, "model": "help.helpentry", "fields": {"db_entrytext": "@NOTIFY\n\n  COMMAND: @notify[/<switches>] <object>[/<attribute>][=<count>]\n\n  Notifies the semaphore <object>, running the first command that waited on\n  <object> using the '@wait <object>=<command>' or '\n  @wait <object>/<time>=<command>' forms of the @wait command.  If <count> is\n  specified, it indicates the number of times the semaphore is notified.\n  If there are no commands (or less than <count> commands) pending for\n  <object>, then subsequent @waits will not block until the semaphore count\n  reaches zero again. @notify may also take an argument of the form\n  <object>/<attribute>, which notifies commands that are being blocked on\n  an attribute other than the default 'Semaphore'. This allows blocking of\n  multiple sets of commands on a single object, using different attributes.\n\n  The following switches are available:\n     /first - (default) Notify the first command waiting on the indicated\n              semaphore (or the first <count> commands).\n     /all   - Notify all commands waiting on the semaphore and reset the\n              semaphore count to zero.  <count> is ignored.\n     /quiet - Suppress the 'Notified.' message associated with the command.\n\n  Related Topics: @drain, @ps, @wait, SEMAPHORES\n\n", "db_key": "@NOTIFY", "db_staff_only": false}}, {"pk": 145, "model": "help.helpentry", "fields": {"db_entrytext": "@NPEMIT\n\n  COMMAND: @npemit[/switches] <what>=<message>\n\n  Almost exactly like @pemit and it takes the same switches. However,\n  it does not evaluate <message> at all. So, @npemit differs from\n  @npemit/noeval in that no space compression is done.\n\n  Related Topics: @pemit\n\n", "db_key": "@NPEMIT", "db_staff_only": false}}, {"pk": 146, "model": "help.helpentry", "fields": {"db_entrytext": "@ODESCRIBE\n\n  COMMAND:   @odescribe <object> = <message>\n  ATTRIBUTE: Odesc\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the room when someone looks at <object>.\n\n  Example: @odesc vase = carefully inspects the vase.\n\n  Related Topics: look, @adescribe, @describe, @idesc.\n\n", "db_key": "@ODESCRIBE", "db_staff_only": false}}, {"pk": 147, "model": "help.helpentry", "fields": {"db_entrytext": "@ODFAIL\n\n  COMMAND:   @odfail <object> = <message>\n  ATTRIBUTE: Odfail\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the same room when someone tries to drop <object> but fails because they\n  didn't pass the object's drop lock.\n\n  Function references and %-substitutions are allowed in drop failure\n  messages, and are evaluated when someone drops the object.  In function\n  references, 'me' refers to the object being dropped, while %-substitutions\n  that refer to the enactor (such as %n, %#, %p, etc) refer to the dropper.\n\n  Example: @odfail sword = tries to put down the sword but it leaps back\n                                       into %p hand.\n\n  Related Topics: drop, @adfail, @dfail, @lock.\n\n", "db_key": "@ODFAIL", "db_staff_only": false}}, {"pk": 148, "model": "help.helpentry", "fields": {"db_entrytext": "@ODROP\n\n  COMMAND:   @odrop <object> = <message>\n  ATTRIBUTE: Odrop\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the room when someone drops <object>, or to others in the room that the\n  player arrives in after taking an exit.\n\n  Example: <object> @odrop loadstone = puts down the loadstone and then\n                                       wipes sweat from %p brow.\n           <exit>   @odrop elevator = enters the elevator from the lobby.\n\n  Related Topics: drop, @adrop, @drop, DROP-TO, EXITS.\n\n", "db_key": "@ODROP", "db_staff_only": false}}, {"pk": 149, "model": "help.helpentry", "fields": {"db_entrytext": "@OEFAIL\n\n  COMMAND:   @oefail <object> = <command-list>\n  ATTRIBUTE: Oefail\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the same room as the player when he tries to enter the object but fails\n  because the object is not ENTER_OK or the player fails the\n  object's enter lock.\n\n  The enter lock only affects the 'enter' command and its aliases (set via\n  the @ealias command), it does not affect exits that lead to the object or\n  teleporting in.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically triggered on rooms or exits.\n\n  Example: @oefail car = tries to open the car's door, but it is locked.\n\n  Related Topics: @aefail, @aenter, @ealias, @efail, @enter, @oenter, enter,\n      ENTER_OK.\n\n", "db_key": "@OEFAIL", "db_staff_only": false}}, {"pk": 150, "model": "help.helpentry", "fields": {"db_entrytext": "@OEMIT\n\n  COMMAND: @oemit <player>=<message>\n\n  Emits <message> to everyone in the current location of <player> except\n  <player>.\n\n  Related Topics: @remit, @emit, @pemit, @npemit, SPOOFING.\n\n", "db_key": "@OEMIT", "db_staff_only": false}}, {"pk": 151, "model": "help.helpentry", "fields": {"db_entrytext": "@OENTER\n\n  COMMAND:   @oenter <object> = <message>\n  ATTRIBUTE: Oenter\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the location being entered when someone enters <object>.  Note that the\n  message is shown to those inside the object, not those outside.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @oenter wormhole = enters the wormhole from normal space.\n\n  Related Topics: enter, @aenter, @enter, @oxenter.\n\n", "db_key": "@OENTER", "db_staff_only": false}}, {"pk": 152, "model": "help.helpentry", "fields": {"db_entrytext": "@OFAIL\n\n  COMMAND:   @ofail <object> = <message>\n  ATTRIBUTE: Ofail\n\n  Sets the others failure message for <object>.  This message is seen others\n  in the same location as the actor when one of these events occurs:\n\n    - For exits: Someone tries to traverse the exit but cannot because they\n      fail the exit's default lock or the exit is not linked.\n    - For players and things: Someone tries to pick up the object but cannot\n      because they fail the object's default lock.\n    - For rooms, players, and things: Someone looks around inside the room,\n      player, or thing and fails the object's default lock.\n\n  Substitution and evaluation is performed on the message before it is shown.\n\n  Examples:\n    > @ofail table = tries to pick up the table, but it is too heavy.  <thing>\n    > @ofail doorway = tries the knob on the door, to no avail.         <exit>\n\n  Related Topics: get, look, @afail, @fail, FAILURE.\n\n", "db_key": "@OFAIL", "db_staff_only": false}}, {"pk": 153, "model": "help.helpentry", "fields": {"db_entrytext": "@OGFAIL\n\n  COMMAND:   @ogfail <object> = <message>\n  ATTRIBUTE: Ogfail\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the same room when someone tries to give away <object> but fails because\n  they didn't pass the object's give lock.\n\n  Function references and %-substitutions are allowed in give failure\n  messages, and are evaluated when someone tries to give away the object.\n  In function references, 'me' refers to the object being given away, while\n  %-substitutions that refer to the enactor (such as %n, %#, %p, etc) refer\n  to the (attempted) giver.\n\n  Example: @ogfail blob = tries to give away a sticky blob of goo.\n\n  Related Topics: give, @agfail, @gfail, @lock.\n\n", "db_key": "@OGFAIL", "db_staff_only": false}}, {"pk": 154, "model": "help.helpentry", "fields": {"db_entrytext": "@OKILL\n\n  COMMAND:   @okill <object> = <message>\n  ATTRIBUTE: Okill\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the room when someone kills <object>.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @okill guard = bashes in the guard's skull, killing him.\n\n  Related Topics: kill, @akill, @kill, BEING KILLED, IMMORTAL, WIZARD.\n\n", "db_key": "@OKILL", "db_staff_only": false}}, {"pk": 155, "model": "help.helpentry", "fields": {"db_entrytext": "@OLEAD\n\n  COMMAND:   @olead <object> = <message>\n  ATTRIBUTE: Olead\n\n  Sets the <message> seen by others when <object> is lead.\n\n  This attribute is only available with --enable-firanmux.\n\n  Related Topics: @lead, @alead.\n\n", "db_key": "@OLEAD", "db_staff_only": false}}, {"pk": 156, "model": "help.helpentry", "fields": {"db_entrytext": "@OLEAVE\n\n  COMMAND:   @oleave <object> = <message>\n  ATTRIBUTE: Oleave\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the location being left when someone leaves <object>.  Note that the\n  message is shown to those inside the object, not those outside.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @oleave wormhole = departs the wormhole to return to normal space.\n\n  Related Topics: leave, @aleave, @leave, @oxleave.\n\n", "db_key": "@OLEAVE", "db_staff_only": false}}, {"pk": 157, "model": "help.helpentry", "fields": {"db_entrytext": "@OLFAIL\n\n  COMMAND:   @olfail <object> = <command-list>\n  ATTRIBUTE: Olfail\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the same room as the player when he tries to leave it but fails because the\n  player fails the object's leave lock.\n\n  The leave lock only affects the 'leave' command and its aliases (set via\n  the @ealias command), it does not affect going home, using an exit in the\n  location, or teleporting out.\n\n  This attribute is meaningful for players and things, and will never be\n  automatically triggered on rooms or exits.\n\n  Example: @olfail plane = thinks about jumping out of the plane without a\n                           parachute, but wisely reconsiders.\n\n  Related Topics: @aleave, @alfail, @lalias, @leave, @lfail, @oleave, leave.\n\n", "db_key": "@OLFAIL", "db_staff_only": false}}, {"pk": 158, "model": "help.helpentry", "fields": {"db_entrytext": "@OMOVE\n\n  COMMAND:   @omove <object> = <message>\n  ATTRIBUTE: Move\n\n  Sets the <message> that others in the same location see after the object has\n  moved to that location from somewhere else, whether by using an exit,\n  entering or leaving an object, teleporting, or going home.\n\n  This attribute is meaningful for players, and things and will never be\n  automatically triggered on other object types.\n\n  Example: @omove car = coasts to a stop.\n\n  Related Topics: @amove, @move.\n\n", "db_key": "@OMOVE", "db_staff_only": false}}, {"pk": 159, "model": "help.helpentry", "fields": {"db_entrytext": "@OPAY\n\n  COMMAND:   @opay <object> = <message>\n  ATTRIBUTE: Opay\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the room when someone pays <object> enough to satisfy its Cost attribute.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @opay Coke machine = slips some change into the coin slot on the\n                                Coke machine.  You hear some rumbling from\n                                inside the machine and a can of Coke appears\n                                in the tray at the bottom of the machine.\n\n  Related Topics: give, @cost, @apay, @pay.\n\n", "db_key": "@OPAY", "db_staff_only": false}}, {"pk": 160, "model": "help.helpentry", "fields": {"db_entrytext": "@OPEN\n\n  COMMAND: @open[/<switches>] <direction list> [=<number>[,<direction list>]]\n\n  Creates an exit in the specified direction(s). If <number> is specified,\n  it is linked to that room. Otherwise, it is created unlinked. You or anyone\n  else may use the '@link' command to specify where the unlinked exit leads.\n  Opening an exit costs 1 coin. If you specify <number>, linking costs 1 more\n  coin.  You can specify a second direction list (after the comma), which is\n  automatically opened in the room that the new exit goes TO and which is\n  linked back to where you are.  I.e.  @open north;n=#1234,south;s\n  would open exit 'north;n' from here to #1234, and an exit 'south;s'\n  from #1234 to here, assuming you have rights to open exits and link to\n  the rooms in question.\n\n  The following switches are available:\n     /location  - Create the exit in your location (default).\n     /inventory - Create the exit on yourself.\n\n  Related Topics: @dig, @link, LINKING, OBJECT TYPES.\n\n", "db_key": "@OPEN", "db_staff_only": false}}, {"pk": 161, "model": "help.helpentry", "fields": {"db_entrytext": "@ORFAIL\n\n  COMMAND:   @orfail <object> = <message>\n  ATTRIBUTE: Orfail\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the same room when someone tries to give <object> a thing that does not\n  pass <object>'s receive lock.\n\n  Function references and %-substitutions are allowed in receive failure\n  messages, and are evaluated when someone tries to give away the object.\n  In function references, 'me' refers to the intended recipient of the object,\n  while %-substitutions that refer to the enactor (such as %n, %#, %p, etc)\n  refer to the (attempted) giver.\n\n  Example: @orfail merchant = tries to unload some worthless trash on Astinous.\n\n  Related Topics: give, @agfail, @arfail, @gfail, @ogfail, @rfail, @lock.\n\n", "db_key": "@ORFAIL", "db_staff_only": false}}, {"pk": 162, "model": "help.helpentry", "fields": {"db_entrytext": "@OSUCCESS\n\n  COMMAND:   @osuccess <object> = <message>]\n  ATTRIBUTE: Osucc\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the room when someone picks up the named player or thing, goes through the\n  named exit, or looks at the room and passes the room's lock.\n\n  Setting Osuccess messages on all takeable objects and usable exits is\n  considered good building practice.\n\n  Examples: <object> @osucc vase = carefully picks up the vase.\n            <exit>   @osucc doorway = opens the door and leaves the room.\n                                      The door closes behind %o with a click.\n\n  Related Topics: get, look, @asuccess, @success, SUCCESS.\n\n", "db_key": "@OSUCCESS", "db_staff_only": false}}, {"pk": 163, "model": "help.helpentry", "fields": {"db_entrytext": "@OTFAIL\n\n  COMMAND:   @otfail <object> = <message>\n  ATTRIBUTE: Otfail\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the same room when someone tries to teleport to somewhere he does not have\n  permission.  You do not see this message if they couldn't teleport out of\n  their present location.\n\n  Function references and %-substitutions are allowed in teleport failure\n  messages, and are evaluated when someone attempts to teleport to the\n  specified destination.  In function references, 'me' refers to the teleport\n  destination, while %-substitutions that refer to the enactor (such as %n,\n  %#, %p, etc) refer to the player attempting the teleport.\n\n  When a player teleports another object (@tel <object>=<destination>), the\n  lock is checked against the player, not the object.\n\n  Example: @otfail here = thinks about teleporting to the Magic Room, but\n                          decides against it at the last moment.\n\n  Related Topics: @teleport, @atfail, @tfail, @lock.\n\n", "db_key": "@OTFAIL", "db_staff_only": false}}, {"pk": 164, "model": "help.helpentry", "fields": {"db_entrytext": "@OTOFAIL\n\n  COMMAND:   @otofail <object> = <message>\n  ATTRIBUTE: Otofail\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the same room when someone tries to teleport out of somewhere they do not\n  have permission.\n\n  Function references and %-substitutions are allowed in teleport failure\n  messages, and are evaluated when someone attempts to teleport from their\n  location.  In function references, 'me' refers to the player's location,\n  while %-substitutions that refer to the enactor (such as %n,\n  %#, %p, etc) refer to the player attempting the teleport.\n\n  Example: @otofail here = thinks about teleporting from the Magic Room, but\n                          decides against it at the last moment.\n\n  Related Topics: @teleport, @atofail, @tofail, @lock.\n\n", "db_key": "@OTOFAIL", "db_staff_only": false}}, {"pk": 165, "model": "help.helpentry", "fields": {"db_entrytext": "@OTPORT\n\n  COMMAND:   @otport <object> = <message>\n  ATTRIBUTE: Otport\n\n  Sets the message (prefixed by your name) that others in the room to which\n  the object goes see when the object teleports there.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @otport me = appears in a flash of non-wizardly brilliance.\n\n  Related Topics: @atport, @oxtport, @tport, @teleport.\n\n", "db_key": "@OTPORT", "db_staff_only": false}}, {"pk": 166, "model": "help.helpentry", "fields": {"db_entrytext": "@OUFAIL\n\n  COMMAND:   @oufail <object> = <message>\n  ATTRIBUTE: Oufail\n\n  Sets the message that others in the same room see when someone tries to\n  use object but fails the object's use lock.  Note that the other functions\n  controlled by the use lock (paying, listening, and $-commands) do not\n  trigger Oufail.\n\n  Example: @oufail robot = tries to activate the robot, but to no avail.\n\n  Related Topics: @aufail, @ufail, @use.\n\n", "db_key": "@OUFAIL", "db_staff_only": false}}, {"pk": 167, "model": "help.helpentry", "fields": {"db_entrytext": "@OUSE\n\n  COMMAND:   @ouse <object> = <message>\n  ATTRIBUTE: Ouse\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the room when someone uses <object>.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @ouse camera = takes a picture with the camera.\n\n  Related Topics: use, @ause, @use.\n\n", "db_key": "@OUSE", "db_staff_only": false}}, {"pk": 168, "model": "help.helpentry", "fields": {"db_entrytext": "@OXENTER\n\n  COMMAND:   @oxenter <object> = <message>\n  ATTRIBUTE: Oxenter\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the location being left when someone enters <object>.  Note that the\n  message is shown to those outside the object, not those inside.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @oxenter wormhole = climbs into the wormhole and vanishes.\n\n  Related Topics: enter, @aenter, @enter, @oenter.\n\n", "db_key": "@OXENTER", "db_staff_only": false}}, {"pk": 169, "model": "help.helpentry", "fields": {"db_entrytext": "@OXLEAVE\n\n  COMMAND:   @oxleave <object> = <message>\n  ATTRIBUTE: Oxleave\n\n  Sets the message (prefixed by the player's name) that is shown to others in\n  the location being entered when someone leaves <object>.  Note that the\n  message is shown to those outside the object, not those inside.\n\n  This attribute is meaningful for players, things, and rooms, and will never\n  be automatically triggered on exits.\n\n  Example: @oxleave wormhole = steps out of a hyper-spatial wormhole.\n\n  Related Topics: leave, @aleave, @leave, @oleave.\n\n", "db_key": "@OXLEAVE", "db_staff_only": false}}, {"pk": 170, "model": "help.helpentry", "fields": {"db_entrytext": "@OXTPORT\n\n  COMMAND:   @oxtport <object> = <message>\n  ATTRIBUTE: Oxtport\n\n  Sets the message (prefixed by your name) that others in the room from which\n  the object comes see when the object teleports out.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @oxtport me = disappears in a flash of non-wizardly brilliance.\n\n  Related Topics: @atport, @otport, @tport, @teleport.\n\n", "db_key": "@OXTPORT", "db_staff_only": false}}, {"pk": 171, "model": "help.helpentry", "fields": {"db_entrytext": "@PARENT\n\n  COMMAND: @parent <object> [=<parent>]\n\n  This command sets the parent of <object> to <parent> (or clears the parent\n  if <parent> is omitted.  You must control <object> and must either own\n  <parent> or pass the ParentLock on a parent that is set PARENT_OK.\n\n  Related Topics PARENT OBJECTS, setparent().\n\n", "db_key": "@PARENT", "db_staff_only": false}}, {"pk": 172, "model": "help.helpentry", "fields": {"db_entrytext": "@PASSWORD\n\n  COMMAND: @password <old password> = <new password>\n\n  This command changes your password.\n\n", "db_key": "@PASSWORD", "db_staff_only": false}}, {"pk": 173, "model": "help.helpentry", "fields": {"db_entrytext": "@PAY\n\n  COMMAND:   @pay <object> = <message>\n  ATTRIBUTE: Pay\n\n  Sets the message that is shown to the player who gives <object> enough\n  money to satisfy its Cost attribute.\n\n  This attribute is only meaningful for things, and will never be\n  automatically triggered on other object types.\n\n  Example: @pay Coke machine = You slip some change into the slot.\n\n  Related Topics: give, @apay, @cost, @opay.\n\n", "db_key": "@PAY", "db_staff_only": false}}, {"pk": 507, "model": "help.helpentry", "fields": {"db_entrytext": "@PCREATE\n\n  COMMAND: @pcreate <player>=<password>\n\n  Creates a new player with the indicated password.  This command is\n  equivalent to typing 'create <player> <password>' from the connection\n  screen, and is normally only used when registration is enabled.\n\n  Related Topics: REGISTRATION.\n\n", "db_key": "@PCREATE", "db_staff_only": false}}, {"pk": 174, "model": "help.helpentry", "fields": {"db_entrytext": "@PEMIT\n\n  COMMAND: @pemit[/switches] <what>=<message>\n\n  Emits <message> only to <what>, or to <what>'s contents of the /contents\n  switch is given.  <what> must be either in the same location as you or\n  be something you own.  You can also @pemit to distant players if\n  pagelocks allow you to page them, and this costs as much as a page\n  <This feature is not present in all MUXes>.  You cannot @pemit to the\n  contents of something you don't own.\n\n  The /list switch to this command allows you to @pemit a message to\n  a list:  @pemit/list <object 1> [<object 2> <object N>] = <message>\n  There can be any number of objects in the list. The objects must be\n  specified by dbref number. This can be combined with other switches.\n\n  The following switches are also available:\n\n    /contents - Send the message to the contents of the named object.\n    /html     - Send the message in HTML format (Pueblo).\n    /noeval   - Do not parse the message.\n    /object   - Send the message to the named object.\n\n  Related Topics: page, @remit, @emit, @oemit, SPOOFING.\n\n", "db_key": "@PEMIT", "db_staff_only": false}}, {"pk": 175, "model": "help.helpentry", "fields": {"db_entrytext": "@POLL\n\n  COMMAND: @poll [<message>]\n\n  Sets a new poll message in the WHO report. The command is an\n  alias for @doing/header.\n\n  Related Topics: who, @doing\n\n", "db_key": "@POLL", "db_staff_only": false}}, {"pk": 508, "model": "help.helpentry", "fields": {"db_entrytext": "@POOR\n\n  COMMAND: @poor <amount>\n\n  Sets the wealth of all players to <amount>.\n\n", "db_key": "@POOR", "db_staff_only": false}}, {"pk": 176, "model": "help.helpentry", "fields": {"db_entrytext": "@POWER\n\n  COMMAND: @power <object>=[!]<power> [[!]<power> [...]]\n\n  This command allows the granting of special powers to objects of any type.\n\n  Related Topics: powers list\n\n", "db_key": "@POWER", "db_staff_only": false}}, {"pk": 177, "model": "help.helpentry", "fields": {"db_entrytext": "@PREFIX\n\n  COMMAND:   @prefix <object> = <prefix text>\n  ATTRIBUTE: Prefix\n\n  This attribute, when set, will be used as a prefix for all text forwarded\n  by the 'audible' flag on an object or exit.  The default if this attribute\n  is not set is 'From <object name>,' for objects, and 'From a distance,'\n  for exits.\n\n  Example:\n    > @fo test=out\n    > @set #378=puppet\n    test> test grows ears and can now hear.\n    > :does something silly.\n    Wizard does something silly.\n    test> From a distance, Wizard does something silly.\n    > @prefix out=From some strange place\n    Set.\n    > :does something even sillier.\n    Wizard does something even sillier.\n    test> From some strange place Wizard does something even sillier.\n\n  Related Topics: AUDIBLE, @filter, @forwardlist, @infilter, @inprefix.\n\n", "db_key": "@PREFIX", "db_staff_only": false}}, {"pk": 178, "model": "help.helpentry", "fields": {"db_entrytext": "@PROGRAM\n\n  COMMAND: @program <player>=<obj/attr>[:<prefix>]\n\n  This command allows for small 'programs' within MUX. To understand this\n  command, you must first understand the fact that it completely bypasses any\n  commands, built-in or otherwise, and allows you to send user-input directly\n  into your code.\n\n  A simple example:\n\n  @va me=$start:@prog %#=me/vb:Please enter a word:\n  @vb me=@emit You entered %0!;@prog %#=me/vc:Please enter another word:\n  @vc me=@emit This time, you entered %0. You're done!\n\n  > start\n  Please enter a word:\n  > foobar       (Note that @program literally gives you a '>' prompt.)\n  You entered foobar!\n  Please enter another word:\n  > hoopla\n  This time you entered hoopla. You're done!\n\n{ 'help @program2' for more }\n\n", "db_key": "@PROGRAM", "db_staff_only": false}}, {"pk": 179, "model": "help.helpentry", "fields": {"db_entrytext": "@PROGRAM (continued)\n\n  As you can see, this command basically takes what a user types at the\n  prompt, stuffs it into %0 in the code in <obj/attr>, and then triggers\n  that attribute. Note that when @program triggers an attribute, the enactor\n  of that triggered attribute is <player>, and is inserted into %#.\n  r-registers are preserved when @program triggers an attribute.\n\n  An optional message, <prefix>, may be specified and will be output before\n  the @program prompt. This is useful for telling the user what information\n  they need to supply.\n\n  A player caught in @program may send a command through to the normal\n  command processor at the @program prompt by prefixing it with the '|'\n  character, for example, '|WHO'.\n\n  Related Topics: @quitprogram.\n\n", "db_key": "@PROGRAM2", "db_staff_only": false}}, {"pk": 180, "model": "help.helpentry", "fields": {"db_entrytext": "@PS\n\n  COMMAND: @ps[/<switches>] [<object>]\n\n  Lists information about the commands you have on each of the queues.\n  Unless the /summary switch is used, this command lists all the commands you\n  have on the queues, optionally along with their enactor and arguments.\n  Commands scheduled to be executed at a later time (by the @wait command)\n  also show the number of seconds until they will be executed and/or the\n  semaphore on which they are waiting.  If <object> is specified, only\n  commands run by <object> are listed, otherwise all commands run by any of\n  your objects is listed.  A summary of the number of commands listed and the\n  total number of commands in the queues is also displayed.  This command is\n  useful for identifying infinite loops in programs.\n\n  The following switches are available:\n     /brief   - (default) Display a brief summary that shows the semaphore\n                number, time-to-wait, object running the command, and the\n                command to be run.\n     /long    - In addition to the information in the /brief report, display\n                the name and number of the object that caused the command\n                to be run (the enactor) and the arguments to the command.\n     /summary - Display just the queue counts.\n\n  Related Topics: @notify, @wait.\n\n", "db_key": "@PS", "db_staff_only": false}}, {"pk": 182, "model": "help.helpentry", "fields": {"db_entrytext": "@QUERY\n\n  COMMAND: @query[/<method>] <dbref>/<attribute>=[<dbname>]/<query>\n\n  Performs an asynchronous query of external (possibly remote) data.  When the\n  query completes, <attribute> on <dbref> is @triggered with the result.  For\n  this to work, the server must be compiled with --enable-stubslave.\n\n  Methods include:\n\n    sql - Use SQL.\n\n  Related Topics: rserror(), rsnext(), rsprev(), rsrelease(), rsrec(),\n                  rsrecnext(), rsrecprev(), rsrows(), sql().\n\n", "db_key": "@QUERY", "db_staff_only": false}}, {"pk": 181, "model": "help.helpentry", "fields": {"db_entrytext": "@QUEQUEMAX\n\n  COMMAND:   @quequemax <object> = <number>\n  ATTRIBUTE: QueueMax\n\n  This attribute sets an upper limit on the number, <number>, of\n  outstanding commands in the queue for this <object>.  This attribute\n  is only settable by a Wizard.\n\n  In fact, the server has three overlapping constraints for developing\n  an upper limit per player on the number of outstanding commands in the\n  queue.  This attribute is part of just one of these constraints.  The\n  rules (in priority order) are:\n\n  1) @queuemax <number> described here.\n  2) Current size of database (only applies if executor is Wizard).\n  3) game-wide limit controlled by the player_queue_limit configuration option.\n\n  That is, if @quequemax is set, it overrides the next two rules.  If\n  <object> is a Wizard, the maximum number of outstanding queue entries\n  is player_queue_limit or the size of the database (whichever is\n  larger).  All other cases are covered by player_queue_limit.\n\n  Related Topics: config(), player_queue_limit in wizhelp, @wait.\n\n", "db_key": "@QUEUEMAX", "db_staff_only": false}}, {"pk": 183, "model": "help.helpentry", "fields": {"db_entrytext": "@QUITPROGRAM\n\n  COMMAND: @quitprogram <player>\n\n  Terminates the @program for player. If <player> is not specified, then it\n  works upon the enactor (a player may quit a program while they are in it\n  by piping out @quitprogram, see 'help @program').\n\n  Related Topics: @program.\n\n", "db_key": "@QUITPROGRAM", "db_staff_only": false}}, {"pk": 184, "model": "help.helpentry", "fields": {"db_entrytext": "@QUOTA\n\n  COMMAND: @quota\n\n  Lists your total building quota and the amount you have remaining.\n  Creating objects, digging rooms, and opening exits all consume quota.\n\n  Related Topics: @create, @dig, @open.\n\n", "db_key": "@QUOTA", "db_staff_only": false}}, {"pk": 509, "model": "help.helpentry", "fields": {"db_entrytext": "@READCACHE\n\n  COMMAND: @readcache\n\n  Reads the commonly-used text files and re-indexes the help files into an\n  internal cache.  Use this command whenever you change one of the game's\n  text files.\n\n", "db_key": "@READCACHE", "db_staff_only": false}}, {"pk": 186, "model": "help.helpentry", "fields": {"db_entrytext": "@REFERENCE\n\n  COMMAND: @reference <reference_name> = [<target>]\n           @reference/list [<player>]\n\n  A name reference (nref) is a mapping between a unique name and a dbref.\n  Two types of nref's are possible - global and personal.  Global references\n  always start with an underscore '_' character and can be used by any object\n  on the game.  Personal nrefs can only be used by the player who added the\n  reference.\n\n  A reference is defined by '@reference <name>=<object>'.  If <name> begins\n  with an underscore, it is globally defined.  Only Wizards can add global\n  nrefs.  Furthermore, you may only define references for objects you can\n  examine.\n\n  Name references can be used nearly anywhere a dbref can be specified.  For\n  example, if you have defined a personal nref called 'myobj', which maps to\n  #200, via '@reference myobj=#200', you can use '#_myobj' in place of the\n  dbref.  To examine the object, you can use 'examine #_myobj' rather than\n  'examine #200'.  Note: global references start with the underscore.  A\n  global reference of '_OOC' can be looked up via '#__OOC'.\n\n{ 'help @reference2' for more }\n\n", "db_key": "@REFERENCE", "db_staff_only": false}}, {"pk": 187, "model": "help.helpentry", "fields": {"db_entrytext": "@REFERENCE2\n\n  There is no limit to the number of name references an object may have.\n  Resolving name references is less efficient than resolving a dbref.  The\n  length of names for references is currently limited to 64 characters.\n\n  References are not persistent between restarts.  Therefore, any references\n  that you wish to be permanently defined should be placed in a @startup.\n\n  Global references can be listed using '@reference/list'.  You can list your\n  own references using '@reference/list me'.  Furthermore, you can list the\n  references of any player you control by using '@reference/list <player>'.\n\n  Example:\n    > @create Data\n    Data created as object #58\n    > @va Data = Test\n    Set.\n    > @reference myobj = Data\n    Referenced.\n    > say [get(#_myobj/VA)]\n    You say, \"Test\"\n\n", "db_key": "@REFERENCE2", "db_staff_only": false}}, {"pk": 185, "model": "help.helpentry", "fields": {"db_entrytext": "@REJECT\n\n  COMMAND:   @reject <object> = <message>\n  ATTRIBUTE: Reject\n\n  This attribute is sent as a message to anyone who tries to page you but\n  you have prevented them from paging you via your page lock (@lock/page).\n\n  This attribute is only meaningful for players, and will never be\n  automatically referenced on other object types.\n\n  Example: @reject me = I _told_ you not to page me anymore...\n\n  Related Topics: @away, @idle, page.\n\n", "db_key": "@REJECT", "db_staff_only": false}}, {"pk": 188, "model": "help.helpentry", "fields": {"db_entrytext": "@REMIT\n\n  COMMAND: @remit <room dbref#> = <message>\n\n  Sends <message> to the contents of <room>.\n\n  Related Topics: @femit, @oemit, @pemit, @npemit, @emit, SPOOFING.\n\n", "db_key": "@REMIT", "db_staff_only": false}}, {"pk": 510, "model": "help.helpentry", "fields": {"db_entrytext": "@RESTART\n\n  COMMAND: @restart\n\n  This command literally restarts the game. To the players, it appears as\n  merely a short pause in the action. There are many reasons to @restart,\n  including updating the source code, freeing built-up memory, etc.\n  @restart dumps and reloads the database, so you cannot use it to change the\n  database. You may recompile and use @restart to implement the changes\n  without having to @shutdown.\n\n  @restart maintains all connections, any relevant information about them\n  across restarts. Nothing should be adversely affected by an @restart.\n  However, it should be used sparingly due to the tedious nature of dumping\n  and loading the database.\n\n  NOTE: If you update the MUX binary with an outside binary, you should\n  never overwrite the old one. Instead, you should delete or move it, and\n  place the new binary in its place, for reasons beyond the scope of this\n  document. This warning does not apply if you remake the binary in your\n  game's source directory.\n\n  Sending the MUX process a SIGUSR1 from the shell account will also cause a\n  @restart.\n\n", "db_key": "@RESTART", "db_staff_only": false}}, {"pk": 189, "model": "help.helpentry", "fields": {"db_entrytext": "@RFAIL\n\n  COMMAND:   @rfail <object> = <message>\n  ATTRIBUTE: Rfail\n\n  Sets the message that a player sees when he tries to give an object to\n  someone else, but the receiver refuses to accept the object because\n  the object didn't pass its receive lock.\n\n  Function references and %-substitutions are allowed in receive failure\n  messages, and are evaluated when someone tries to give away the object.\n  In function references, 'me' refers to the intended recipient of the object,\n  while %-substitutions that refer to the enactor (such as %n, %#, %p, etc)\n  refer to the (attempted) giver.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @gfail merchant = The merchant doesn't want your worthless trash.\n\n  Related Topics: give, @agfail, @arfail, @gfail, @ogfail, @orfail, @lock.\n\n", "db_key": "@RFAIL", "db_staff_only": false}}, {"pk": 190, "model": "help.helpentry", "fields": {"db_entrytext": "@ROBOT\n\n  COMMAND: @robot <name>=<password>\n\n  Creates a robot player owned by you.  The robot has its ROBOT flag set, so\n  it may use the outputprefix and outputsuffix commands that some publicly\n  available robot programs require.  This command costs 1000 coins.\n  Note that some sites do not restrict outputprefix and outputsuffix to\n  robots.\n\n  Related Topics: outputprefix, outputsuffix, ROBOT, OBJECT TYPES.\n\n", "db_key": "@ROBOT", "db_staff_only": false}}, {"pk": 191, "model": "help.helpentry", "fields": {"db_entrytext": "@RUNOUT\n\n  COMMAND:   @runout <object> = <command list>\n  ATTRIBUTE: Runout\n\n  Sets the actions to be taken by <object> when another of its attributes is\n  triggered (either automatically or via the @trigger command) and its\n  Charges attribute is zero.  When this occurs, the Runout attribute is run\n  INSTEAD OF the attribute that would have run normally.\n\n  Example: @runout magic wand = :fizzles and turns to dust.; @destroy me\n\n  Related Topics: @charges.\n\n", "db_key": "@RUNOUT", "db_staff_only": false}}, {"pk": 511, "model": "help.helpentry", "fields": {"db_entrytext": "@RXLEVEL\n\n  COMMAND: @rxlevel <target>=<list>\n\n  Sets or clears the Rx levels for the target. If a level name in list is\n  prefixed with !, then the level is cleared.\n\n  NOTE: This command is not available unless reality levels was enabled at\n  compile-time.\n\n  Example: @rxlevel *Joe=!Real Umbra\n\n", "db_key": "@RXLEVEL", "db_staff_only": false}}, {"pk": 192, "model": "help.helpentry", "fields": {"db_entrytext": "@SAYSTRING\n\n  Command: @saystring <object> = <string>\n\n  Sets the substitute string that is used instead of the default 'says,'\n  when you talk in a location or on the comsys. The message is passed\n  as %0 and the command (say, @fsay, or channel) as %1.\n\n  Example:\n    > @saystring me=barks\n    > \"Hello.\n    Player barks \"Hello.\"\n    > @saystring me=case(right(%0,1),!,exclaims\\,,?,asks\\,,says\\,)\n    > \"Hello!\n    Player exclaims, \"Hello!\"\n\n  Related Topics: say, \", @speechmod.\n\n", "db_key": "@SAYSTRING", "db_staff_only": false}}, {"pk": 193, "model": "help.helpentry", "fields": {"db_entrytext": "@SEARCH\r\n\r\n  COMMAND: @search [<player>] [<class>=<restriction>[,<low>[,<high>]]]\r\n\r\n  Displays information about objects that meet the search criteria.\r\n  Because this command is computationally expensive, it costs 100 coins.\r\n  <player> restricts the search to the named player, while <class>\r\n  and <restriction> control the objects listed.  Type 'help search classes'\r\n  for a list of the classes you may use.\r\n\r\n  Except when getting lists of players ('@search type=player' or\r\n  '@search flags=P'), you may only search for objects that you own.\r\n  You may limit the range of the search with <low> and <high>, which specify\r\n  the objects to start and stop the search at, respectively.  The default for\r\n  <low> is #0 and the default for <high> is the last object in the database.\r\n\r\n  Examples:\r\n    @search flags=DARK SAFE              <-- search for anything that is DARK and SAFE.\r\n    @search type=room              <-- list all rooms owned by me.\r\n    @search type=room,100,300      <-- Rooms between #100 and #300, inclusive\r\n    @search object=Test,5000       <-- Things starting with Test from object\r\n                                       #5000 to the end of the database.\r\n  Related Topics: @find.\r\n\r\n", "db_key": "@SEARCH", "db_staff_only": false}}, {"pk": 194, "model": "help.helpentry", "fields": {"db_entrytext": "@SET\n\n  COMMAND: @set[/<switch>] <object>=[!]<flag1> [[!][<flag2> [...]]\n           @set[/<switch>] <object>=<attribute>:<value>\n           @set[/<switch>] <object>=<attribute>:_<fromobj>/<fromattr>\n           @set[/<switch>] <object>/<attr>=[!]<attrflag>\n\n  The first form sets (or clears) the indicated flag or flags on <object>,\n  the second form sets the <attribute> attribute on <object> to <value>,\n  creating a new user-named attribute if there is no attribute named\n  <attribute>.  The third form copies an attribute from another object, and\n  the fourth form sets (or clears) an attribute flag on the <attr> attribute\n  of <object>.\n\n  When setting attributes on an object, you may also use the command\n  '@<attribute> <object> = <value>' if the attribute is a predefined\n  attribute.  You may also use the command '&<attribute> <object> = <value>'\n  to set either predefined attributes or user-named attributes.  Either of\n  these is equivalent to the second form of the @set command.\n\n{ 'help @set2' for more }\n\n", "db_key": "@SET", "db_staff_only": false}}, {"pk": 195, "model": "help.helpentry", "fields": {"db_entrytext": "@SET (continued)\n\n  The following flags may be set using the fourth form of the @set command:\n\n     case       - $-command matching will not be case-sensitive.\n                  Non-functional unless the 'R' flag is also set.\n     hidden     - The attribute is only visible to wizards.\n     html       - Emits from attr, oattr, aattr are not HTML-escaped.\n     no_command - Prevent $-commands and ^-patterns defined in the attribute\n                  from being performed.\n     no_inherit - Prevents children of the object from obtaining the\n                  attribute.  From their perspective, the attribute does not\n                  exist.\n     no_name    - If set on an @o-attr, don't prepend the name of the\n                  enactor.  This also affects @verb behavior.\n     regexp     - When $-commands are matched, treat the pattern as a\n                  regular expression rather than a wildcard glob pattern.\n     trace      - The attribute will generate trace output.\n     visual     - Anyone may see the attribute when they examine you, and\n                  may get the attribute with get().\n     wizard     - The attribute may only be changed by wizards.\n\n  The @set command takes the following switch:\n\n     quiet      - Inhibit 'Set.' acknowledgement messages.\n\n  Related Topics: ATTRIBUTE FLAGS, @lock, @lock, examine, FLAGS, &.\n\n", "db_key": "@SET2", "db_staff_only": false}}, {"pk": 196, "model": "help.helpentry", "fields": {"db_entrytext": "@SEX\n\n  COMMAND:   @sex <object> = <gender>\n  ATTRIBUTE: Sex\n\n  Sets the gender for <object>, which is used to determine which pronouns to\n  use when replacing %p, %o, %s, and %a parameters in messages that apply to\n  <object>.  Genders that start with M or m are considered male, those\n  starting with F, f, W, or w are considered female, those starting with\n  P or p are considered plural, and anything else is considered neuter.\n\n  Example: @sex me = female\n           @sex me = No thank you (Silly, but possible.  Treated as neuter)\n\n  Related Topics: GENDER.\n\n", "db_key": "@SEX", "db_staff_only": false}}, {"pk": 512, "model": "help.helpentry", "fields": {"db_entrytext": "@SHUTDOWN\n\n  COMMAND: @shutdown <text>\n\n  Disconnects all connected players, saves the database to disk, and shuts\n  down the game.  The game is unavailable until it is restarted.  If an\n  argument is specified, it is written to the file named by the status_file\n  config directive.\n\n  Related Topics: status_file\n\n", "db_key": "@SHUTDOWN", "db_staff_only": false}}, {"pk": 197, "model": "help.helpentry", "fields": {"db_entrytext": "@SIGNATURE\n\n  COMMAND:   @signature <player> = <message>\n  ATTRIBUTE: Signature\n\n  Sets a message to be appended to every @mail message you send. It is\n  appended directly at the end of the message, so if you wish to start the\n  signature on a new line you should begin it with a %r.\n\n  Example: @signature me=%rThis is a mail signature. (Note: You might want\n  to include the %r at the front of the signature, other wise it will be\n  combined with the @mail message.)\n\n  Related Topics: @mailsucc, @amail, @mail.\n\n", "db_key": "@SIGNATURE", "db_staff_only": false}}, {"pk": 198, "model": "help.helpentry", "fields": {"db_entrytext": "@SPEECHMOD\n\n  Command: @speechmod <object> = <string>\n  Attribute: SpeechMod\n\n  Sets a filter to be applied to all of <object>'s speech. <string> is\n  evaluated with the original speech as %0 and the command as %1. It is\n  then displayed in place of the original speech. You can use this to\n  colorize each word of what you say, say things backwards, etc.\n\n  @speechmod affects: \"  \\\\  ;  :  page  pose  say  whisper  @fpose\n     @fsay  @wall  on-channel speech\n\n  %1 may be one of: channel  channel/pose  page  pose  say  whisper\n    @emit (for \\\\)  @fpose  @fpemit  @fsay  @wall\n\n  Example:\n    > @speechmod me=ucstr(%0)\n    > \"Hello.\n    Player says \"HELLO.\"\n\n  Related Topics: say, \", @saystring.\n\n", "db_key": "@SPEECHMOD", "db_staff_only": false}}, {"pk": 513, "model": "help.helpentry", "fields": {"db_entrytext": "@STARTSLAVE\n\n  COMMAND: @startslave\n\n  This command restarts the slave process that does user and hostname\n  lookups. It should only be used it the slave process has locked up or died\n  for some reason.\n\n", "db_key": "@STARTSLAVE", "db_staff_only": false}}, {"pk": 199, "model": "help.helpentry", "fields": {"db_entrytext": "@STARTUP\n\n  COMMAND:   @startup <object> = <command list>\n  ATTRIBUTE: Startup\n\n  Sets a list of commands to be performed by <object> when the game is\n  started up.  Typical actions include going home, cleaning visitors out of\n  a room, resetting a puzzle or complex object to its initial state, or\n  starting up an object that wants to run continuously.\n\n  Example: @startup me = @vz me=MUX was last restarted at [time()].\n           @startup me = home\n\n", "db_key": "@STARTUP", "db_staff_only": false}}, {"pk": 200, "model": "help.helpentry", "fields": {"db_entrytext": "@STATS\n\n  COMMAND: @stats[/all] [<player>]\n\n  Display the number of objects in the game.  @stats/all gives a\n  breakdown by object types.  If <player> is specified, the breakdown\n  for the named player is given.  You may only list individual counts\n  for yourself.  If invoked with no arguments or switches this command is\n  free, but if you specify either /all or <player>, then this command costs\n  100 coins to run, because it is computationally expensive.\n\n  Related Topics: stats().\n\n", "db_key": "@STATS", "db_staff_only": false}}, {"pk": 201, "model": "help.helpentry", "fields": {"db_entrytext": "@SUCCESS\n\n  COMMAND:   @success <object> = <message>\n  ATTRIBUTE: Succ\n\n  Sets the message that is shown to the player who successfully picks up the\n  named player or thing, goes through the named exit, or looks at the room\n  and passes the room's lock.\n\n  Example: <object> @succ vase = You carefully pick up the delicate vase.\n           <exit>   @succ doorway = You open the door and walk through the\n                                    doorway.\n\n  Related Topics: get, look, @asuccess, @osuccess, SUCCESS.\n\n", "db_key": "@SUCCESS", "db_staff_only": false}}, {"pk": 202, "model": "help.helpentry", "fields": {"db_entrytext": "@SWEEP\n\n  COMMAND: @sweep[/<switches>]\n\n  This command tells you all of the objects, players, and exits that are\n  listening in the room you are currently in, as well as the objects you are\n  carrying.  Most objects only listen for a particular string or phrase, so\n  they normally do not pose a problem if you need privacy.  You will have to\n  be careful of players, puppets, and audible exits since they will hear\n  everything you say and do.  There are several switches that may be used to\n  limit the type of listeners that are checked for.  They are:\n     /here      - Check the room I am in.\n     /inventory - Check my inventory.\n     /exits     - Check exits in the room.\n\n     /commands  - Check for objects that have $-commands set on them.\n     /connected - Check for connected players and their puppets.\n     /listeners - Check for objects with @listen set to something.\n     /players   - Check for players and their puppets, whether or not they\n                  are connected.\n\n  The default is to search for everything.  If you specify one or more\n  switches from either category (either location or listener type then only\n  that location or listener type is checked.\n\n  Related Topics: @listen, AUDIBLE, PUPPETS.\n\n", "db_key": "@SWEEP", "db_staff_only": false}}, {"pk": 203, "model": "help.helpentry", "fields": {"db_entrytext": "@SWITCH\n\n  COMMAND: @switch[/<switches>] <string>=<t1>,<c1> [,<tN>,<cN>]... [,<cD>]\n\n  Compares <string> against the targets <t1>, <t2>, etc, until a match is\n  found, at which time the corresponding list of commands is performed.\n\n  #$ is substituted with the value of <string>. In this way, the commands in\n  <c1>..<cN>..<cD> have a short-hand way of getting at the matched value.\n\n  Wildcards match strings, and the < and > operators allowing matching by\n  numeric value.  By default, any list whose target matches the string is\n  executed (the targets are not mutually exclusive). If no target matches,\n  the default list <cD> is executed.\n\n  The following switches are available:\n\n    /all    - (default) Perform the action lists associated with all targets\n              that match <string>.\n    /first  - Perform only the action list associated with the first target\n              that matches <string>.\n    /notify - Queues an '@notify' after all commands in the list.\n\n  Related Topics: switch(), ifelse().\n\n", "db_key": "@SWITCH", "db_staff_only": false}}, {"pk": 204, "model": "help.helpentry", "fields": {"db_entrytext": "@TELEPORT\n\n  COMMAND: @teleport [<object>=] <room/thing>\n           @teleport [<object>=] <exit>\n           @teleport [<object>=] home\n\n  The first form of the @teleport command moves <object> (or you) to the named\n  room or thing.  The second form sends <object> (or you) to the destination\n  of the named exit, while the third form sends <object> (or you) home.\n  If the destination room has a drop-to, the object will go to the drop-to\n  instead of the named location.\n\n  For the first form of the @teleport command, the object being teleported\n  must pass its location's TeloutLock; and you must control the destination,\n  or it must be JUMP_OK and you must pass the destination's TportLock.\n\n  The second and third forms let you remove any object from locations you\n  control by sending them through an exit or to their home.\n\n  The following switches are available:\n     /quiet - Teleports without setting off success or failure messages.\n     /list  - Interpret <object> as a space-delimited list of objects.\n\n  Related Topics: JUMP_OK, @lock (TportLock and TeloutLock), @tfail, @otfail,\n      @atfail, @tofail, @otofail, @atofail.\n\n", "db_key": "@TELEPORT", "db_staff_only": false}}, {"pk": 205, "model": "help.helpentry", "fields": {"db_entrytext": "@TFAIL\n\n  COMMAND:   @tfail <object> = <message>\n  ATTRIBUTE: Tfail\n\n  Sets the message that a player sees when he tries to teleport to somewhere\n  he does not have permission.  You do not see this message if you couldn't\n  teleport out of your present location.\n\n  Function references and %-substitutions are allowed in teleport failure\n  messages, and are evaluated when someone attempts to teleport to the\n  specified destination.  In function references, 'me' refers to the teleport\n  destination, while %-substitutions that refer to the enactor (such as %n,\n  %#, %p, etc) refer to the player attempting the teleport.\n\n  When a player teleports another object (@tel <object>=<destination>), the\n  lock is checked against the player, not the object.\n\n  Example: @tfail here = A psychic barrier prevents you from teleporting there.\n\n  Related Topics: @teleport, @atfail, @otfail, @lock.\n\n", "db_key": "@TFAIL", "db_staff_only": false}}, {"pk": 514, "model": "help.helpentry", "fields": {"db_entrytext": "@TIMECHECK\n\n  COMMAND: @timecheck[/<switches>]\n\n  An accounting of how much total CPU time has been used to execute commands\n  on each object.\n\n  Win9x caveat:  Win9x does not provide a number of how much CPU time the\n  MUX game server has consumed and so instead of CPU time, we use a\n  high-resolution elapsed time instead. For some CPUs, the resolution of\n  this clock can be as high as the processor itself, but as useful as this\n  is, this accounting does not make a distinction between time spent in the\n  server and time spent in another unrelated application.\n\n  The command takes the following switches:\n\n    /screen     Print information to the screen.\n    /log        Print information to the logfile.\n    /reset      Clear the counters.\n\n  If no switches are provided, printing to the screen and clearing the\n  counters are assumed. The counters are otherwise not cleared unless\n  /reset is specified.\n\n", "db_key": "@TIMECHECK", "db_staff_only": false}}, {"pk": 515, "model": "help.helpentry", "fields": {"db_entrytext": "@TIMEOUT\n\n  ATTRIBUTE: Timeout\n\n  COMMAND: @timeout <object>[=<seconds>]\n\n  Sets an idle timeout value on <object> that is different from the default\n  value.  If the value is non-numeric or less than or equal to zero, then\n  the default value is used.\n\n  This attribute is only visible and settable by wizards.  It is only\n  meaningful for players, and has no effect on other object types.\n\n  Related Topics: idle_timeout.\n\n", "db_key": "@TIMEOUT", "db_staff_only": false}}, {"pk": 516, "model": "help.helpentry", "fields": {"db_entrytext": "@TIMEWARP\n\n  COMMAND: @timewarp[/<switches>] <secs>\n\n  Subtracts (or adds if negative) <secs> to one or more internal timers,\n  depending on the switches specified from the following list:\n\n     /check    - The time left until the next consistency check and database\n                 cleaning.\n     /dump     - The time left until the next automatic checkpoint dump.\n     /idle     - The time left until the next check for idle users.\n     /queue    - (default) Adjusts the time-to-execute for all entries in the\n                 wait and semaphore queues.  Entries whose time-to-execute\n                 becomes less than the current time are then ready for\n                 execution. The contents of the object queue are also\n                 appended to the player queue.\n\n  Note: these flags may be specified together if desired.\n\n  Related Topics: @list options.\n\n", "db_key": "@TIMEWARP", "db_staff_only": false}}, {"pk": 517, "model": "help.helpentry", "fields": {"db_entrytext": "@TOAD\n\n  COMMAND: @toad[/<switches>] <victim>[=<recipient>]\n\n  Turns the victim into an object (a slimy toad) and disconnects them from\n  the game.  The named recipient (or the @toading wizard) get ownership of\n  all the victim's things, rooms, and exits, as well as of the toad object\n  itself.\n\n  The following switches are available:\n\n    /no_chown - Don't change the ownership of the victim or his objects.\n\n  Related Topics: @boot, @chownall, @destroy.\n\n", "db_key": "@TOAD", "db_staff_only": false}}, {"pk": 206, "model": "help.helpentry", "fields": {"db_entrytext": "@TOFAIL\n\n  COMMAND:   @tofail <object> = <message>\n  ATTRIBUTE: Tofail\n\n  Sets the message that a player sees when he tries to teleport from somewhere\n  he does not have permission.\n\n  Function references and %-substitutions are allowed in teleport failure\n  messages, and are evaluated when someone attempts to teleport out of their\n  location.  In function references, 'me' refers to the player's current\n  location, while %-substitutions that refer to the enactor (such as %n,\n  %#, %p, etc) refer to the player attempting the teleport.\n\n  Example: @tofail here = A psychic barrier prevents you from teleporting\n           out.\n\n  Related Topics: @teleport, @atofail, @otofail, @lock.\n\n", "db_key": "@TOFAIL", "db_staff_only": false}}, {"pk": 207, "model": "help.helpentry", "fields": {"db_entrytext": "@TPORT\n\n  COMMAND:   @tport <object> = <message>\n  ATTRIBUTE: Tport\n\n  Sets the message that an object sees whenever it teleports.\n  The message is displayed after the object moves to its new location.\n\n  This attribute is only meaningful for players and things, and will never be\n  automatically triggered on other object types.\n\n  Example: @tport me = Hey! I teleported. Wow!\n\n  Related Topics: @atport, @otport, @oxtport, @teleport.\n\n", "db_key": "@TPORT", "db_staff_only": false}}, {"pk": 208, "model": "help.helpentry", "fields": {"db_entrytext": "@TRIGGER\n\n  COMMAND: @trigger[/<switch>] <object>/<attr> [=<param> [, <param>]... ]\n\n  Invokes an action list stored in an attribute on an object.  The triggering\n  object becomes the enactor and the positional parameters %0 through %9\n  are set to the supplied parameters.\n\n  The @trigger command supports the following switch:\n    /quiet   - Inhibits 'Triggered.' acknowledgement messages.\n    /notify  - Queues a '@notify' after all commands in the list.\n\n  Related Topics: LOOPING.\n\n", "db_key": "@TRIGGER", "db_staff_only": false}}, {"pk": 518, "model": "help.helpentry", "fields": {"db_entrytext": "@TXLEVEL\n\n  COMMAND: @txlevel <target>=<list>\n\n  Sets or clears the Tx levels for the target. If a level name in list is\n  prefixed with !, then the level is cleared.\n\n  NOTE: This command is not available unless reality levels was enabled at\n  compile-time.\n\n  Example: @txlevel *Joe=Real !Umbra\n\n", "db_key": "@TXLEVEL", "db_staff_only": false}}, {"pk": 209, "model": "help.helpentry", "fields": {"db_entrytext": "@UFAIL\n\n  COMMAND:   @ufail <object> = <message>\n  ATTRIBUTE: Ufail\n\n  Sets the message that someone sees when they try to use object but fail\n  the object's use lock.  Note that the other functions controlled by the use\n  lock (paying, listening, and $-commands) do not trigger ufail.\n\n  Example: @ufail robot = The robot pointedly ignores you.\n\n  Related Topics: @aufail, @oufail, @use.\n\n", "db_key": "@UFAIL", "db_staff_only": false}}, {"pk": 210, "model": "help.helpentry", "fields": {"db_entrytext": "@UNLINK\n\n  COMMAND: @unlink <room/exit>\n\n  This command removes drop-tos on rooms and clears the destination on exits.\n  Once unlinked, an exit may be taken over by anyone with the @link command.\n\n  Related Topics: @link, LINKING, OBJECT TYPES.\n\n", "db_key": "@UNLINK", "db_staff_only": false}}, {"pk": 211, "model": "help.helpentry", "fields": {"db_entrytext": "@UNLOCK\n\n  COMMAND: @unlock[/<whichlock>] <object>\n           @unlock <object>/<attrib>\n\n  The first form removes the lock on <object>, so that anyone may pass\n  through (if an exit) or pick it up (if a player or an object).\n\n  The second form clears the locked flag on the indicated attribute of the\n  named object.  This allows the attribute to change ownership to the new\n  owner automatically when the object is @chowned, and allows the owner\n  of the object to @chown the attribute to them self or to overwrite it.\n  You must own the attribute to be unlocked, but you do not need to own the\n  object.\n\n  Related Topics: @chown, @lock, @lock keys, @lock locks,\n      ATTRIBUTE OWNERSHIP.\n\n", "db_key": "@UNLOCK", "db_staff_only": false}}, {"pk": 212, "model": "help.helpentry", "fields": {"db_entrytext": "@USE\n\n  COMMAND:   @use <object> = <message>\n  ATTRIBUTE: Use\n\n  Sets the message that is shown to the player who uses <object>.\n\n  This attribute is only meaningful for players and things, and will never\n  be automatically triggered on other object types.\n\n  Example: @use camera = You take a picture with the camera.  Click.\n\n  Related Topics: use, @ause, @ouse.\n\n", "db_key": "@USE", "db_staff_only": false}}, {"pk": 213, "model": "help.helpentry", "fields": {"db_entrytext": "@VERB\n\n  COMMAND: @verb <victim>=<actor>,<what>,<def>,<owhat>,<odef>,<awhat>,<args>\n\n  This command provides a way to do user-defined verbs with associated\n  @attr/@oattr/@aattr groups. Invoking it does the following:\n\n  <actor> sees the contents of <victim>'s <what> attribute, or\n    the <def> string if you can't read <victim>'s <what> attribute.\n  Everyone in the same room as <actor> sees the contents of\n    <victim>'s <owhat> attribute, with <actor>'s name prepended,\n    or <odef>, also with <actor>'s name prepended, if you can't read\n    <victim>'s <owhat> attribute.\n  If you control <victim>, then he executes the contents of his <awhat>\n    attribute.\n\n  By supplying up to nine <args>, you may pass those values on\n  the stack (i.e. %0, %1, %2, etc. up through %9).\n\n  You must control the actor, but need not control the victim.  Note that\n  if you don't have the ability to read the appropriate attributes (whether\n  because you control the victim, he is VISUAL, or the attributes are set\n  VISUAL), the default messages will be used.\n\n{ 'help @verb2' for more }\n\n", "db_key": "@VERB", "db_staff_only": false}}, {"pk": 214, "model": "help.helpentry", "fields": {"db_entrytext": "@VERB (continued)\n\n  Here is a description of the arguments to @verb:\n\n    victim - The object that is searched for attributes, and which runs the\n             <awhat> attribute if it is found.\n\n    actor  - The object that 'did' the verb, this is the value for %#/%n/etc\n             in substitutions, and this object's name is included in the\n             message to others in the same location.\n\n    what   - The name of the attribute containing the message to be delivered\n             to the actor.\n\n    whatd  - The message to deliver to the actor if the victim does not have a\n             <what> attribute, or if it cannot be read.\n\n    owhat  - The name of the attribute containing the message that is sent to\n             everyone in the room with the actor.  The message is prefixed\n             by the actor's name unless no_name flag is present on the\n             attribute.\n\n    owhatd - The message to deliver to others in the room with the actor if\n             the victim does not have an <owhat> attribute, or it cannot be\n             read.  The message is prefixed by the actor's name unless\n             /no_name switch is specified.\n\n    awhat  - The name of the attribute that is to be executed by the victim.\n\n    args   - The comma-separated arguments to be passed for substitution\n             (%0-%9).  If there is more than one argument, enclose all the\n             arguments within curly braces.  Any argument that contains an\n             embedded comma needs to be enclosed in curly braces as well.\n\n{ 'help @verb3' for more }\n\n", "db_key": "@VERB2", "db_staff_only": false}}, {"pk": 215, "model": "help.helpentry", "fields": {"db_entrytext": "@VERB (continued)\n\n  Examples:\n    > &xtest test1=You just xtested test1.\n    > &oxtest test1=just xtested test1.\n    > &axtest test1=\"I was xtested.  Yikes.  Arg1=%0, Arg2=%1, Arg3=%2.\n    > @verb test1=me,xtest,XTEST DFLT,oxtest,OXTEST DFLT,axtest,{a,b c,de}\n    You just xtested test1.\n    test1 says \"I was xtested. Yikes. Arg1=a, Arg2=b c, Arg3=de.\"\n    > &xtest test1\n    > @verb test1=me,xtest,XTEST DFLT,oxtest,OXTEST DFLT,axtest,{a,b c,de}\n    XTEST DFLT\n    test1 says \"I was xtested. Yikes. Arg1=a, Arg2=b c, Arg3=de.\"\n    > @fo test1={@verb test1=me,xtest,XTEST D,oxtest,OXTEST D,axtest,{a,b,de}}\n    test1 just xtested test1.\n    test1 says \"I was xtested. Yikes. Arg1=a, Arg2=b, Arg3=de.\"\n\n  Related Topics: locate().\n\n", "db_key": "@VERB3", "db_staff_only": false}}, {"pk": 430, "model": "help.helpentry", "fields": {"db_entrytext": "VERSION\n\n  COMMAND: version\n\n  Displays the version of MUX that is running and the date it was last\n  rebuilt.\n\n", "db_key": "@VERSION", "db_staff_only": false}}, {"pk": 216, "model": "help.helpentry", "fields": {"db_entrytext": "@VRML_URL\n\n  Command: @vrml_url <location> = <url>\n  Attribute: VRML_URL\n\n  Sets the URL of a VRML page to be shown to Pueblo users when they connect\n  in location.\n\n  See also: PUEBLO, HTML, @htdesc\n\n", "db_key": "@VRML_URL", "db_staff_only": false}}, {"pk": 217, "model": "help.helpentry", "fields": {"db_entrytext": "@WAIT\n\n  COMMAND: @wait[/until] <seconds>=<command>\n           @wait[/until] <object>[/<seconds>]=<command>\n           @wait <object>/<attribute>=<command>\n\n  Generally, @wait defers the execution of <command> until some future\n  condition or combination of conditions.\n\n  The first form of @wait executes <command> at some future time.\n\n  The second form executes <command> when the object's semaphore is\n  notified. If <seconds> is specified in this second form, <command> is\n  executed at some future time even if the object's semaphore isn't\n  notified. This is sometimes referred to as a 'timeout'.\n\n  The third form allows the use of an attribute other than 'semaphore'. It\n  allows multiple sets of semaphore-blocked commands to use the same object.\n\n  This command charges a deposit of 10 coins which is refunded when\n  <command> is executed or otherwise leaves the queue.\n\n  By default, <seconds> is relative to the time @wait is processed, however\n  if /until used, <seconds> is taken as absolute (See secs, convtime and\n  convsecs). <seconds> can also express fractional seconds.\n\n  Examples:\n     > @wait 2.001=think FooBar\n     FooBar\n     > think secs()\n     1004732313\n     > @wait/until 1004732400.5=think FooBar\n     FooBar\n     > @dolist [setq(0,iadd(secs(),2))]75 0 25=@wait/until %q0.##=think ##\n     0\n     25\n     75\n\n  Related Topics: @drain, @notify, @ps, SEMAPHORES, secs, convtime, convsecs.\n\n", "db_key": "@WAIT", "db_staff_only": false}}, {"pk": 519, "model": "help.helpentry", "fields": {"db_entrytext": "@WALL\n\n  COMMAND: @wall[/<switches>] <message>\n\n  With no switches, shouts <message> to every connected player or to every\n  connected wizard, prefixed by either 'Announcement:' (if for everyone) or\n  'Broadcast:' (if for wizards).  The following switches can be used to get the\n  described effects:\n\n     /emit      - Format the message as an emit (ie send just <message>).\n     /pose      - Format the message as a pose (ie <yourname> <message>).\n     /wizard    - Only send the message to connected wizards.\n     /admin     - Send the message to connected wizards and royalty.\n     /no_prefix - Don't prepend 'Announcement:' or 'Broadcast:' to the message.\n\n  If neither /emit or /pose are used, you can format the message one of several\n  ways by specifying ':', ';', or '\"' as the first character of the message.\n  ':' and ';' format the message as if /pose were specified, except that ';'\n  does not insert a space between your name and the message.  '\"' formats the\n  message in normal @wall format (this is the default).\n  The message is also written to the log file.\n\n", "db_key": "@WALL", "db_staff_only": false}}, {"pk": 218, "model": "help.helpentry", "fields": {"db_entrytext": "@WIPE\n\n  COMMAND: @wipe <object>[/<wild-attr>]\n\n  This command erases attributes from an object.  All attributes that match\n  <wild-attr> (or all attributes, if <wild-attr> is not specified) are removed\n  from <object>.  Attributes that you do not have permission to modify (such\n  as read-only or locked attributes) are not removed.\n\n", "db_key": "@WIPE", "db_staff_only": false}}, {"pk": 219, "model": "help.helpentry", "fields": {"db_entrytext": "ABODE\n\n  FLAG: ABODE(A)  ()\n\n  If a room is set ABODE, players can set their homes there,\n  and can set the homes of objects there.  It does not mean that a\n  player can open an exit to that room, only that they can set their\n  home there.\n\n  Related Topics:\n\n", "db_key": "ABODE", "db_staff_only": false}}, {"pk": 220, "model": "help.helpentry", "fields": {"db_entrytext": "ACCENT() (continued)\n\n  For each character in <string>, the corresponding character of\n  <template> is checked according to the table below, and a replacement\n  done. If either the current <string> or <template> characters aren't\n  in the table, the <string> character is passed through unchanged.\n\n  Accent                         Template   String\n  Name       Description         Character  Character\n  -----------------------------------------------------------------\n  grave      Backward slant      `          A,E,I,O,U,a,e,i,o,u\n             above letter\n  acute      Forward slant       '          A,E,I,O,U,Y,a,e,i,o,u,y\n             above letter\n  tilde      Wavy line above     ~          A,N,O,a,n,o\n             letter\n  circumflex carat above         ^          A,E,I,O,U,a,e,i,o,u\n             letter\n  umlaut     Two dots above      :          A,E,I,O,U,a,e,i,o,u\n  diaeresis  letter\n  ring       Small circle above  o          A,a\n             letter\n  cedilla    Small tail below    ,          C,c\n             letter\n\n(\"help accent3\" for more)\n\n", "db_key": "ACCENT2", "db_staff_only": false}}, {"pk": 221, "model": "help.helpentry", "fields": {"db_entrytext": "ACCENT() (continued)\n\n  These are non-accent special characters, mostly punctuation and\n  non-roman letters.\n\n                      Template   String\n  Description         Character  Character\n  --------------------------------------------------------------\n  Upside-down ?       u          ?\n  Upside-down !       u          !\n  << quote mark       \"          <\n  >> quote mark       \"          >\n  German sharp s      B          s\n  Capital thorn       |          P\n  Lower-case thorn    |          p\n  Capital eth         -          D\n  Lower-case eth      &          o\n\n  Examples:\n\n    > think accent(Aule, ---:)\n    Aul(e-with-diaeresis)\n\n    > think accent(The Nina was a ship, The Ni~a was a ship)\n    The Ni(n-with-~)a was a ship\n\n(\"help accent4\" for more)\n\n", "db_key": "ACCENT3", "db_staff_only": false}}, {"pk": 222, "model": "help.helpentry", "fields": {"db_entrytext": "ACCENT() (continued)\n\n    > think accent(Khazad ai-menu!, Khaz^d ai-m^nu!)\n    Khaz(a-with-^)d ai-m(e-with-^)nu!\n\n  Related Topics: ASCII, chr(), ord(), stripaccents().\n\n", "db_key": "ACCENT4", "db_staff_only": false}}, {"pk": 520, "model": "help.helpentry", "fields": {"db_entrytext": "ACCESS\n\n  CONFIG PARAMETER: access <command> <permlist>\n\n  Modifies the permissions needed to execute the indicated command.\n  Specifying a permission adds it to the list of permissions required; to\n  remove a permission prefix it with a ! character.\n\n  Related Topics: @list, logout_cmd_access, PERMISSIONS.\n\n", "db_key": "ACCESS", "db_staff_only": false}}, {"pk": 223, "model": "help.helpentry", "fields": {"db_entrytext": "ADDCOM\n\n  COMMAND: addcom <alias>=<channel>\n\n  The alias and the channel name are case sensitive.\n\n  Using this command, you can join a pre-existing channel by specifying the\n  alias you wish to use. If the channel is named 'Public', then you must type\n  it with the same case. Likewise the alias is case sensitive. If you use\n  'addcom Pub=Public', then to use the channel you must type 'Pub Hello'\n  instead of 'pub Hello'.\n\n  One other thing to be careful of: adding a channel multiple times with\n  different aliases.  While possible, it can be confusing.\n\n  Example:\n    >addcom pub=Public\n    Channel Public added with alias pub.\n\n  Related Topics: delcom, @clist, comlist, alias, comtitle.\n\n", "db_key": "ADDCOM", "db_staff_only": false}}, {"pk": 224, "model": "help.helpentry", "fields": {"db_entrytext": "ALIAS\n\n  COMMAND: <channel alias> <on|off|who|message|:pose|;pose>\n\n  The channel alias allows you to use the channel, to turn it on and off and\n  check who is online. If you have forgotten what your aliases are, see the\n  help for 'comlist'.\n\n    'on'   allows you to turn an alias/channel on.\n    'off'  lets you turn off that alias/channel.\n    'who'  shows you who is on that channel, which the channel name appended\n           to the bottom.\n\n  You may send a message over the channel with <alias> <text>, where <text>\n  is the message to be sent, or you can pose on a channel with\n  <alias> :<text> or <alias> ;<text>\n\n  Example:\n    > pub Hello, World!\n    [Public] Player say, \"Hello, World!\"\n\n  Related Topics: allcom, comlist, addcom, delcom.\n\n", "db_key": "ALIAS", "db_staff_only": false}}, {"pk": 225, "model": "help.helpentry", "fields": {"db_entrytext": "ALLCOM\n\n  COMMAND: allcom <on|off|who>\n\n  This works like using a single alias except that it does an action for\n  every alias you have. You can turn every alias on, or off, or see who is\n  on every channel you subscribe to.\n\n  Example:\n    > allcom who\n    -- Players --\n    Player1\n    Player2\n    -- Objects --\n    -- Public --\n    -- Players --\n    Staff1\n    Player1\n    -- Objects --\n    -- Staff --\n\n  Related Topics: alias, comtitle, delcom, addcom.\n\n", "db_key": "ALLCOM", "db_staff_only": false}}, {"pk": 521, "model": "help.helpentry", "fields": {"db_entrytext": "ALLOW_GUEST_FROM_REGISTERED_SITE\n\n  CONFIG PARAMETER: allow_guest_from_registered_site\n  DEFAULT: yes.\n\n  With this option turned off, guests are not permitted to connect from\n  sites which have been register_site'd.\n\n  Game which use register_site as a more surgical version of forbid_site\n  may be interested in turn this option off. However, game which are\n  register_only will probably want to leave this option as defaulted.\n\n  Related Topics: register_site, SITE LISTS\n\n", "db_key": "ALLOW_GUEST_FROM_REGISTERED_SITE", "db_staff_only": false}}, {"pk": 226, "model": "help.helpentry", "fields": {"db_entrytext": "ANSI\n\n  FLAG: ANSI(X)\n\n  When set on a player, it will enable the player to see ANSI color.\n  Otherwise, MUX will strip the ANSI color codes from text before it's sent to\n  the client.\n\n  Related Topics: ansi(), ANSI CODES, ANSI SUBSTITUTION, NOBLEED.\n\n", "db_key": "ANSI", "db_staff_only": false}}, {"pk": 227, "model": "help.helpentry", "fields": {"db_entrytext": "ANSI CODES\n\n        f - flash                       i - inverse\n        h - highlight                   n - normal\n        u - underline\n\n        x - black foreground            X - black background\n        r - red foreground              R - red background\n        g - green foreground            G - green background\n        y - yellow foreground           Y - yellow background\n        b - blue foreground             B - blue background\n        m - magenta foreground          M - magenta background\n        c - cyan foreground             C - cyan background\n        w - white foreground            W - white background\n\n  For example, \"ansi(fc, Test)\" would highlight \"Test\" in flashing cyan.\n\n  Related Topics: ansi(), ANSI SUBSTITUTION.\n\n", "db_key": "ANSI CODES", "db_staff_only": false}}, {"pk": 228, "model": "help.helpentry", "fields": {"db_entrytext": "ANSI SUBSTITUTION\n\n  The percent substitution %x<color code> can be used instead of\n  ansi(), and is more efficient.\n\n  For example, the equivalent to [ansi(rBf,Color!)] would be:\n  %xr%xB%xfColor!%xn\n\n  The %xn (to return to normal) is not necessary, but if it is not\n  specified the ansi color codes will continue to the end of the string.\n\n  %x is preferred, however %c may also be used. They are equivalent.\n\n  Related Topics: ansi(), ANSI CODES\n\n", "db_key": "ANSI SUBSTITUTION", "db_staff_only": false}}, {"pk": 229, "model": "help.helpentry", "fields": {"db_entrytext": "ARBITRARY COMMANDS\n\n  You may define commands that are triggered whenever someone enters a command\n  that matches the command template (wildcard-ing allowed).  These commands\n  are called arbitrary commands, user-defined commands, or $-commands (for how\n  they are defined), and they are checked for only after the check for\n  single-character commands, exits, and internal commands have been performed\n  and have failed (so an arbitrary command that matches 'page *' will never\n  be performed).\n\n  You define an arbitrary command by storing a string of the form\n  '$<template>:<command list>' in an attribute of an object, then the command\n  will be available to anyone who carries the object, is in the same room as\n  the object, or is inside the object.  Only use user-named attributes and\n  VA-VZ for arbitrary commands, as many of the predefined attributes are not\n  for arbitrary commands.  <template> is the pattern to check for (it may\n  contain wildcards), and <command list> is a semicolon-separated list of\n  commands to perform.  The text that the wildcard characters matched are\n  available in the variables %0 through %9.\n\n{ 'help arbitrary2' for more }\n\n", "db_key": "ARBITRARY COMMANDS", "db_staff_only": false}}, {"pk": 522, "model": "help.helpentry", "fields": {"db_entrytext": "ARTICLE_RULE\n\n  CONFIG PARAMETER: article_rule <article> <regular expression>\n  DEFAULT: All articles default to a.\n\n  article_rule adds a new rule to the list which the art function uses to\n  determine which article to use for a particular word (either a or an). New\n  rules are moved to the head of the rule-list so rules appearing later in the\n  configuration will override rules at the beginning; hence the most general\n  rules should come first followed by a set of exceptions. The art() function\n  tests for matches  in order, so only the first matching rule counts.\n\n  <article> is either 'a' or 'an' stating what article to give when art()\n  matches input to a rule.\n\n  <regular expression> is a regex which forms the body of the rule.\n\n  For most games the default set of rules in the configuration files should be\n  sufficient.\n\n  Example:\n    > @admin article_rule=an ^[aeiou]\n    > @admin article_rule=an ^herb\n    > say art(avocado)\n    You say \"an\"\n    > say art(head)\n    You say \"a\"\n    > say art(herb)\n    You say \"an\"\n    > say art(herbal)\n    You say \"an\"\n\n  Related topics: art(), regexps, @admin, config parameters.\n\n", "db_key": "ARTICLE_RULE", "db_staff_only": false}}, {"pk": 231, "model": "help.helpentry", "fields": {"db_entrytext": "ASCII\n\n  FLAG: ASCII(~)\n\n  When set on a player, it forces the client character set in all sessions to\n  be 7-bit ASCII.  All ISO 8859-1 and UTF-8 characters are then translated and\n  approximated with 7-bit ASCII characters.  Any character which cannot be\n  approximated are shown with a single '?'.\n\n  The default is for each client to negotiate its character set ability on a\n  per session basis.\n\n  Related Topics: stripaccents(), chr(), ord(), UNICODE.\n\n", "db_key": "ASCII", "db_staff_only": false}}, {"pk": 234, "model": "help.helpentry", "fields": {"db_entrytext": "ATTRIBUTE FLAGS\n\n    The following lists the possible flags on attributes:\n\n    case (C)       - $-command matching will not be case-sensitive.\n                     Non-functional unless the 'R' flag is also set.\n\n    const          - No one can change this attribute.\n\n    no_command ($) - The attribute is not checked when looking for\n                     $-commands.  Note that the predefined attributes\n                     DESC, IDESC, ODESC, FAIL, OFAIL, SUCC, OSUCC, DROP,\n                     ODROP, SEX, and CHARGES are never checked.\n\n    dark           - Only God can see this attribute.\n\n    god            - Only God can modify this attribute.\n\n    hidden (M)     - Only wizards and royalty can see this attribute.\n\n    html (H)       - Emits from attr, oattr, aattr are not HTML-escaped.\n\n{ 'help attribute flags2' for more }\n\n", "db_key": "ATTRIBUTE FLAGS", "db_staff_only": false}}, {"pk": 235, "model": "help.helpentry", "fields": {"db_entrytext": "ATTRIBUTE FLAGS (continued)\n\n    no_inherit (I) - This attribute is not inherited by children of the\n                     object.  From their perspective, the attribute does not\n                     exist.\n\n    locked (+)     - The attribute is locked, it does not change\n                     ownership when the object is @chowned and may not\n                     be modified.\n\n    no_name (N)    - If set on an @o-attr, don't prepend the name of the\n                     enactor.  This also affects @verb behavior.\n\n    no_parse (P)   - $-commands and ^-listens matching is performed against\n                     the unparsed (non-evaluated) string.\n\n    private        - Only attribute owner and wizards can see this\n                     attribute.\n\n    regexp (R)     - $-command matching on this attribute uses\n                     PCRE-style regular expressions.\n\n    trace (T)      - The attribute will generate trace output.\n\n{ 'help attribute flags3' for more }\n\n", "db_key": "ATTRIBUTE FLAGS2", "db_staff_only": false}}, {"pk": 236, "model": "help.helpentry", "fields": {"db_entrytext": "ATTRIBUTE FLAGS (continued)\n\n    visual (V)     - The attribute is visible to anyone who examines\n                     you.  Note that the predefined attributes DESC,\n                     SEX, and LAST are always VISUAL\n\n    wizard (W)     - Only wizards can modify this attribute.\n\n  Related Topics: ATTRIBUTE OWNERSHIP, examine, @verb.\n\n", "db_key": "ATTRIBUTE FLAGS3", "db_staff_only": false}}, {"pk": 237, "model": "help.helpentry", "fields": {"db_entrytext": "ATTRIBUTE OWNERSHIP\n\n  The attributes on an object may be owned independently from the object.\n  Normally, the owner of the object owns all of its attributes.\n  In addition to an owner, each attribute also has a locked flag,\n  set or cleared with @lock <obj>/<attr> and @unlock <obj>/<attr>.\n  This flag controls whether or not the owner of the object may\n  @chown the attribute to himself with @chown <object>/<attrib>,\n  as well as whether or not the attribute is automatically @chowned to\n  the new owner when the object is @chowned.\n\n  You may lock and unlock attributes that you own on any object (whether\n  you own the object or not), and you may @chown an attribute that you own\n  to the owner of the object if it is unlocked.  The examine command\n  will show you all attributes that you own on an object, even if you\n  don't own the object.\n\n{ 'help attrib2' for more }\n\n", "db_key": "ATTRIBUTE OWNERSHIP", "db_staff_only": false}}, {"pk": 523, "model": "help.helpentry", "fields": {"db_entrytext": "ATTRIBUTE PERMISSIONS\n\n  The following attribute flags are available:\n\n    const      - No one can change the attribute after the server starts.\n    dark       - Attribute is not shown or readable to anyone but #1, but\n                 anyone can potentially change it.\n    deleted    - Attribute should be ignored.  It is not included in the\n                 @dump.  Not recommended.  This appears to be a manual way to\n                 accomplish @dbclean.\n    god        - Only #1 can change the attribute.\n    hidden     - Only WIZARDS can see it.  Dark to mortals.\n    ignore     - Don't create a @ command for it.  Not recommended.\n    internal   - Don't show even to #1.  Internal server bookkeeping.\n    is_lock    - Attribute is a lock.  Not recommended.\n    locked     - Attribute is locked.\n    no_command - Don't process $-commands from this attribute.\n    no_inherit - Not inherited by child objects.\n    private    - Players other than owner can't see it.\n    regexp     - Do a regexp rather than wildcard match.\n    visual     - Anyone can see.\n    wizard     - Only WIZARDS can change it.\n\n  NOTE: There is a simple way to create attributes that are both 'wizard'\n  and 'hidden'. Prefix the attribute name with an underscore (_) and the\n  attribute can only be seen or edited by Wizards.\n\n  Example:\n    &_myattribute <player>=Only a Wizard can see or change this attribute.\n\n\n  Related Topics: @attribute.\n\n", "db_key": "ATTRIBUTE PERMISSIONS", "db_staff_only": false}}, {"pk": 524, "model": "help.helpentry", "fields": {"db_entrytext": "ATTR_ACCESS\n\n  CONFIG PARAMETER: attr_access <attr> [!]<privilege> [[!]<privilege>]...\n\n  Changes the access rights to the named attribute.\n\n  The following privileges may be used:\n\n  private     - The attribute is visible only to those who can examine the\n                object.\n  internal    - The attribute is not visible to anyone.\n  wizard      - Only wizards may change the attribute.\n  hidden      - The attribute is visible only to wizards.\n\n  Related Topics:\n\n", "db_key": "ATTR_ACCESS", "db_staff_only": false}}, {"pk": 525, "model": "help.helpentry", "fields": {"db_entrytext": "ATTR_ALIAS\n\n  CONFIG PARAMETER: attr_alias <alias> <attr>.\n\n  Makes <alias> an alias for the attribute <attr>.\n\n  Related Topics:\n\n", "db_key": "ATTR_ALIAS", "db_staff_only": false}}, {"pk": 526, "model": "help.helpentry", "fields": {"db_entrytext": "ATTR_CMD_ACCESS\n\n  CONFIG PARAMETER: attr_cmd_access [!]<privilege> [[!]<privilege>]...\n\n  Changes the access rights on all attribute-setting commands in parallel.\n  Use this parameter to allow or deny access to the attribute-setting commands\n  as a group.  This directive should normally be followed by access directives\n  to properly set access to restricted attributes.\n\n  Related Topics: access, PERMISSION.\n\n", "db_key": "ATTR_CMD_ACCESS", "db_staff_only": false}}, {"pk": 527, "model": "help.helpentry", "fields": {"db_entrytext": "ATTR_NAME_CHARSET\n\n  CONFIG PARAMETER: attr_name_charset [!]<charset> [[!]<charset>]...\n  DEFAULT: all (Unicode)\n\n    ascii     - Restrict names to use ASCII.\n    iso8859-1 - Restrict names to use iso8859-1.\n    iso8859-2 - Restrict names to use iso8859-2.\n    latin-1   - Restrict names to use latin-1 (same as iso8859-1).\n    latin-2   - Restrict names to use latin-2 (same as iso8859-2).\n\n  If no restrictions are made, the Unicode set is used.  If more than one\n  restriction is made, the union of the two are used.  That is, as long as a\n  character appears in any of the character sets, it is allowed.\n\n  Related Topics: exit_name_charset, player_name_charset, room_name_charset,\n                  thing_name_charset.\n\n", "db_key": "ATTR_NAME_CHARSET", "db_staff_only": false}}, {"pk": 238, "model": "help.helpentry", "fields": {"db_entrytext": "AUDIBLE\n\n  FLAG: AUDIBLE(a) (all types)\n\n  When set on an object, player, or room everything from a say, pose, or emit\n  inside the object will be sent to every object in the location of that\n  object (except for rooms which have no location) as well as to all objects\n  mentioned in the object's Forwardlist attribute.  When set on an exit,\n  everything from a say, pose, or emit in the room the exit is in will be\n  forwarded to the room the exit points to.  In both cases the @prefix\n  attribute will be inserted in front of the text, or a default prefix if no\n  @prefix attribute is set.  If the @filter attribute is present, it will be\n  used to suppress those messages matching any of the patterns specified.\n\n  Related Topics: @filter, @forwardlist, @prefix.\n\n", "db_key": "AUDIBLE", "db_staff_only": false}}, {"pk": 239, "model": "help.helpentry", "fields": {"db_entrytext": "AUDITORIUM\n\n  FLAG: AUDITORIUM(b)  ()\n\n  When set on a room, object, or player, it enables the checking\n  of speechlocks.\n\n  Related Topics:\n\n", "db_key": "AUDITORIUM", "db_staff_only": false}}, {"pk": 528, "model": "help.helpentry", "fields": {"db_entrytext": "AUTOZONE\n\n  CONFIG PARAMETER: autozone\n  DEFAULT: Yes\n\n  Whether newly-created objects are automatically of the same\n  zone as their creator, or they are left zone-less.\n\n  Related Topics:\n\n", "db_key": "AUTOZONE", "db_staff_only": false}}, {"pk": 529, "model": "help.helpentry", "fields": {"db_entrytext": "BADSITE_FILE\n\n  CONFIG PARAMETER: badsite_file <path>\n  DEFAULT: text/badsite.txt\n\n  Specifies the name of the file that is sent to new net connections from\n  sites that have been blocked from accessing the server.  The connection\n  is closed immediately after the file is sent.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: forbid_site, permit_site.\n\n", "db_key": "BADSITE_FILE", "db_staff_only": false}}, {"pk": 530, "model": "help.helpentry", "fields": {"db_entrytext": "BAD_NAME\n\n  CONFIG PARAMETER: bad_name <wildcarded-name>\n\n  Specifies that any name that matches <wildcarded-name> may not be used as a\n  player name.  Attempts to create a player with a disallowed name (or to\n  rename to a disallowed name) will be rejected.  Normally, words that\n  lead off messages from MUX are disallowed, some sites may wish to disallow\n  some obscene names as well.\n\n  Related Topics:\n\n", "db_key": "BAD_NAME", "db_staff_only": false}}, {"pk": 240, "model": "help.helpentry", "fields": {"db_entrytext": "BEING KILLED\n\n  Getting killed is no big deal. If you are killed, you return to your home,\n  and all things you carry return to their homes. You also collect 50 coins\n  in insurance money (unless you have >= 10000 coins or you were killed via\n  the Wizard slay command).  Generally, killing is not encouraged unless\n  absolutely necessary. (Note: Killing a wizard is a quick way to discover\n  the many uses of the @boot command...  and killing anyone can be very\n  rude.)\n\n  Related Topics: kill, @akill, @kill, @okill, IMMORTAL, WIZARD.\n\n", "db_key": "BEING KILLED", "db_staff_only": false}}, {"pk": 241, "model": "help.helpentry", "fields": {"db_entrytext": "BLIND\n\n  FLAG: BLIND(B)\n\n  This flag suppresses the '<who> has arrived.' and '<who> has left.' messages.\n  When set on a player, the messages caused by their movement are suppressed.\n  When set on a location, the messages for everyone entering or leaving that\n  location are suppressed.\n\n  This flag can only be set by Wizards.\n\n  Related Topics: DARK\n\n", "db_key": "BLIND", "db_staff_only": false}}, {"pk": 242, "model": "help.helpentry", "fields": {"db_entrytext": "BOGUS COMMANDS\n\n  Bogus commands can be made using exits. For example, to make a 'sit'\n  command, one could \"@open sit\", then \"@link sit=here\" (because unlinked\n  exits can be stolen), \"@lock sit=#0\" (impossible for a room to pass a lock,\n  #0 is always a room, therefore the lock always fails), and \"@fail sit=You\n  sit on the chair.\"; \"@ofail sit=sits on the chair.\".  Since nobody can go\n  through it, it always fails. The @fail message is displayed  to the player,\n  and the @ofail message (preceded by the player's name) to  everyone else.\n\n  Related Topics: @afail, @fail, @link, @lock, @ofail, @open.\n\n", "db_key": "BOGUS COMMANDS", "db_staff_only": false}}, {"pk": 243, "model": "help.helpentry", "fields": {"db_entrytext": "BOOLEAN VALUES\n\n  There are three types of Boolean Values in MUX: BITS, BOOLEAN, and\n  BOOLEAN-Z. In each case, a Boolean Value is either TRUE or FALSE, and all\n  possible strings are mapped onto one of those two.\n\n   1. The most comprehensive definition of Boolean Value is denoted simply as\n      BOOLEAN. Newer functions and features use the BOOLEAN definition of a\n      Boolean Value.  MUX maps the following to FALSE:\n\n       -  Numbers (integer and floating-point) with a value of zero.\n       -  The Special floating-point values of NaN, Ind, +Inf, and -Inf.\n       -  Strings with zero-length.\n       -  Any error message of the form \"#-N <msg>\".\n\n      All other strings are understood as TRUE including negative numbers and\n      dbrefs.\n\n   2. BITS is another form of a Boolean value.  An integer can be broken down\n      into BITS. Taken together, the server shows them as an integer, but\n      there are functions which indirectly manipulate individual BITS.\n\n   3. BOOLEAN-Z defines FALSE as an integer zero.  This definition still\n      appears in MUX for softcode compatibility.\n\n      Alphabetic strings are FALSE.  Everything after the decimal point in a\n      floating-point number is ignored.  Dbrefs are not recognized but mapped\n      to FALSE.  TRUE is then any non-zero number.\n\n  NOTE: T() allows a BOOLEAN value to be used with a BOOLEAN-Z function, and\n  Boolean Values from functions can be interpreted correctly by either BOOLEAN\n  or BOOLEAN-Z definitions.\n\n  Examples:\n\n    not(foo) --> 0      not()    --> 1     not(-66) --> 0\n    not(0)   --> 1      not(#-1) --> 1     not(#12) --> 0\n    t(1)     --> 1      t(#-1)   --> 0     t(-66)   --> 1\n\n  Related Topics: not(), t()\n\n", "db_key": "BOOLEAN VALUES", "db_staff_only": false}}, {"pk": 531, "model": "help.helpentry", "fields": {"db_entrytext": "CACHE_DEPTH\n\n  CONFIG PARAMETER: cache_depth <depth>\n  DEFAULT: none.\n\n  This option is obsolete. The cache in MUX 2.0 is controlled differently.\n\n  Related Topics: max_cache_size\n\n", "db_key": "CACHE_DEPTH", "db_staff_only": false}}, {"pk": 532, "model": "help.helpentry", "fields": {"db_entrytext": "CACHE_NAMES\n\n  CONFIG PARAMETER: cache_names\n  DEFAULT: Yes\n\n  Whether or not to use object name caches.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics:\n\n", "db_key": "CACHE_NAMES", "db_staff_only": false}}, {"pk": 533, "model": "help.helpentry", "fields": {"db_entrytext": "CACHE_PAGES\n\n  CONFIG PARAMETER: cache_pages <num>\n  DEFAULT: 40\n\n  Specifies the size of the hashpage cache.  This configuration option cannot\n  be changed after the server starts.  It can only be changed via the\n  configuration file.\n\n  The most effective type of caching occurs one level higher (see\n  max_cache_size), however for larger games, it is necessary to increase\n  cache_pages as well (which caches at a lower level).\n\n  Recommendations:\n\n   -- Have at least 10 hash pages or the server itself will thrash the cache.\n\n   -- Have one cache page for every active player, or simple paging will\n      thrash the cache.\n\n  The default of 40 will perform well up to 100 players.\n\n  Related Topics: cache_pages, max_cache_size.\n\n", "db_key": "CACHE_PAGES", "db_staff_only": false}}, {"pk": 534, "model": "help.helpentry", "fields": {"db_entrytext": "CACHE_TICK_PERIOD\n\n  CONFIG PARAMETER: cache_tick_period <seconds>\n  DEFAULT: 30.0\n\n  Specifies the cache maintenance period in seconds.  Currently, cache\n  maintenance only involves flushing dirty pages.  With a short period,\n  the work is spread out more evenly.  Therefore, a short period is\n  usually best for large games.\n\n  Related Topics: cache_pages, max_cache_size.\n\n", "db_key": "CACHE_TICK_PERIOD", "db_staff_only": false}}, {"pk": 535, "model": "help.helpentry", "fields": {"db_entrytext": "CACHE_TRIM\n\n  CONFIG PARAMETER: cache_trim <yes/no>\n  DEFAULT: none.\n\n  This option is obsolete. The cache in MUX 2.0 is controlled differently.\n\n  Related Topics: max_cache_size\n\n", "db_key": "CACHE_TRIM", "db_staff_only": false}}, {"pk": 536, "model": "help.helpentry", "fields": {"db_entrytext": "CACHE_WIDTH\n\n  CONFIG PARAMETER: cache_width <depth>\n  DEFAULT: none.\n\n  This option is obsolete. The cache in MUX 2.0 is controlled differently.\n\n  Related Topics: max_cache_size\n\n", "db_key": "CACHE_WIDTH", "db_staff_only": false}}, {"pk": 537, "model": "help.helpentry", "fields": {"db_entrytext": "CAUTIONS\n\n  The @force command evaluates its argument before putting it on the queue.\n  Therefore, any ';' characters resulting from the evaluation that are\n  outside of any nested delimiters will cause what follows to be treated\n  as a separate command.\n\n", "db_key": "CAUTIONS", "db_staff_only": false}}, {"pk": 244, "model": "help.helpentry", "fields": {"db_entrytext": "CHANNEL OBJECT\n\n  In the comsystem, you may specify a channel object for each channel.\n  (@cset/object channel=<object>). See 'help @cset' for help.\n\n  Channel objects allow you to specify a description for a channel and\n  place certain restrictions on joining, transmitting, and receiving.  If\n  present on the channel object, the @comjoin, @comleave, @comon, and @comoff\n  messages are evaluated and then sent to members performing the join, leave,\n  on, and off actions, respectively.\n\n  NOTE: If a channel flag is set by @cpflags or @coflags, those will ALWAYS\n  override the equivalent lock. The flags are set by default, so you will\n  have to clear them before your locks work.\n\n  The join lock for a channel is a normal @lock on the channel object.\n  The transmit lock for a channel is a use @lock on the channel object.\n  The receive lock for a channel is an enter @lock on the channel object.\n  The description of a channel is the @desc of the channel object.\n\n  If the channel object has @speechmod or @saystring set, those settings\n  will override the player settings.\n\n  Related Topics: @comjoin, @comleave, @comoff, @comon, @ccreate, @create,\n                  @cset, @speechmod, @saystring.\n\n", "db_key": "CHANNEL OBJECT", "db_staff_only": false}}, {"pk": 538, "model": "help.helpentry", "fields": {"db_entrytext": "CHECK_INTERVAL\n\n  CONFIG PARAMETER: check_interval <secs>\n  DEFAULT: 600.\n\n  Specifies how often (in seconds) the database is to be automatically\n  scanned for inconsistencies and purged of references to destroyed objects.\n  Any inconsistencies found are either fixed or recorded in the log file.\n\n  Related Topics: check_offset, @dbck.\n\n", "db_key": "CHECK_INTERVAL", "db_staff_only": false}}, {"pk": 539, "model": "help.helpentry", "fields": {"db_entrytext": "CHECK_OFFSET\n\n  CONFIG PARAMETER: check_offset <secs>\n  DEFAULT: 300.\n\n  Specifies how long after startup the first automatic database check is\n  to be performed.  Subsequent checks are performed every check_interval\n  seconds.\n\n  Related Topics: check_interval, @dbck.\n\n", "db_key": "CHECK_OFFSET", "db_staff_only": false}}, {"pk": 245, "model": "help.helpentry", "fields": {"db_entrytext": "CHIMERA\n\n  The CHIMERA flag is used to denote an object who is invisible to all but\n  those set CHIMERA and FAE.\n\n", "db_key": "CHIMERA", "db_staff_only": false}}, {"pk": 246, "model": "help.helpentry", "fields": {"db_entrytext": "CHOWN_OK\n\n  FLAG: CHOWN_OK(C)  ()\n\n  This flag, when set, allows you to transfer ownership to\n  another player. To set it, you must be carrying the object. You\n  also have to be in the room if you want to set this flag on rooms\n  or exits.  After this flag is set, the new player may gain\n  ownership of the object by using the @chown command.\n\n  Related Topics: @chown\n\n", "db_key": "CHOWN_OK", "db_staff_only": false}}, {"pk": 247, "model": "help.helpentry", "fields": {"db_entrytext": "CLEARCOM\n\n  COMMAND: clearcom\n\n  This command will erase all channel information.\n\n  The 'clearcom' command is equivalent to typing 'delcom <alias>' for each\n  channel. It will remove you from all channels and erase your status and\n  title.\n\n  Example:\n    > clearcom\n    You have left channel Public.\n    Channel Public deleted.\n    You have left channel Staff.\n    Channel Staff deleted.\n\n  Related Topics: addcom, delcom.\n\n", "db_key": "CLEARCOM", "db_staff_only": false}}, {"pk": 540, "model": "help.helpentry", "fields": {"db_entrytext": "CLONE_COPIES_COST\n\n  CONFIG PARAMETER: clone_copies_cost <yes/no>\n  DEFAULT: NO\n\n  Indicates whether or not @cloned objects inherit the cost of the original.\n  If disabled, @cloned objects cost the same as a @create that doesn't specify\n  the object cost.  The new owner is charged the correct amount in either\n  case.\n\n  Related Topics: @clone.\n\n", "db_key": "CLONE_COPIES_COST", "db_staff_only": false}}, {"pk": 248, "model": "help.helpentry", "fields": {"db_entrytext": "COMLIST\n\n  COMMAND: comlist\n\n  This command displays a list of all the channels you are connected to, the\n  alias you're using for the channel, whether you are 'on' or 'off' on the\n  channel and what your comtitle is.\n\n  Example:\n    > comlist\n    Alias     Channel            Status   Title\n    pub       Public             off      Roleplay Staff\n    staff     Staff              on\n\n  Related Topics: comtitle, addcom, alias, delcom.\n\n", "db_key": "COMLIST", "db_staff_only": false}}, {"pk": 249, "model": "help.helpentry", "fields": {"db_entrytext": "COMMAND EVALUATION\n\n  When you submit a command to be executed by MUX (whether by typing it in or\n  by having a machine run it, the following steps are performed, in sequence.\n  If the command matches something in a step, the matching actions are\n  performed and the walk down the list stops.\n\n  - The first letter of the command is checked to see if it is a single-\n    character command (\", :, etc).  If so, %-substitution and function\n    evaluation may be performed (depending on the command), and the command\n    is executed.\n  - The comsystem checks for a channel alias.\n  - The command is checked to see if it is the 'home' command.  If so, the\n    player or object performing the command goes home.\n  - The command is checked against the exits in its current room.  If one\n    matches, it is performed.  If more than one matches, one is picked randomly\n    from the exits for which the player passes the lock (If the player does not\n    pass any locks, then the exit to be tried is picked randomly.\n\n{ 'help command evaluation2' for more }\n\n", "db_key": "COMMAND EVALUATION", "db_staff_only": false}}, {"pk": 251, "model": "help.helpentry", "fields": {"db_entrytext": "COMMANDS\n\n  Help available for MUX Commands:\n\n  drop         enter        examine      get          give         goto\n  help         INFO         inventory    kill         leave        LOGOUT\n  look         move         news         OUTPUTPREFIX OUTPUTSUFFIX page\n  pose         QUIT         read         report       say          score\n  SESSION      take         think        throw        train        use\n  version      whisper      WHO          \"            :            ;\n  &            #            \\\\\n\n  @@           @assert      @break       @cemit       @chown       @chzone\n  @clone       @cpattr      @create      @decompile   @destroy     @dig\n  @doing       @dolist      @drain       @edit        @email       @emit\n  @entrances   @eval        @femit       @find        @force       @fpose\n  @fsay        @halt        @htdesc      @if          @last        @link\n  @list        @listmotd    @lock        @mail        @mvattr      @name\n  @nemit       @notify      @npemit      @oemit       @open        @parent\n  @password    @pemit       @power       @program     @ps          @query\n  @quitprogram @quota       @reference   @remit       @robot       @search\n  @set         @stats       @sweep       @switch      @teleport    @trigger\n  @unlink      @unlock      @verb        @vrml_url    @wait        @wipe\n\n{ 'help commands2' for more }\n\n", "db_key": "COMMANDS", "db_staff_only": false}}, {"pk": 252, "model": "help.helpentry", "fields": {"db_entrytext": "COMMANDS (continued)\n\n  The following are @-related:\n\n  @aahear      @aclone      @aconnect    @adescribe   @adfail      @adisconnect\n  @adrop       @aefail      @aenter      @afail       @agfail      @ahear\n  @akill       @alead       @aleave      @alfail      @alias       @amail\n  @amhear      @amove       @aparent     @apay        @arfail      @asuccess\n  @atfail      @atofail     @atport      @aufail      @ause        @away\n  @charges     @color       @comjoin     @comleave    @comoff      @comon\n  @conformat   @cost        @daily       @descformat  @describe    @dfail\n  @drop        @ealias      @efail       @enter       @exitformat  @exitto\n  @fail        @filter      @forwardlist @gfail       @idesc       @idle\n  @idletimeout @infilter    @inprefix    @kill        @lalias      @lead\n  @leave       @lfail       @listen      @mailsucc    @mfail       @moniker\n  @move        @nameformat  @odescribe   @odfail      @odrop       @oefail\n  @oenter      @ofail       @ogfail      @okill       @olead       @oleave\n  @olfail      @omove       @opay        @orfail      @osuccess    @otfail\n  @otofail     @otport      @oufail      @ouse        @oxenter     @oxleave\n  @oxtport     @pay         @prefix      @queuemax    @reject      @rfail\n  @runout      @saystring   @sex         @signature   @speechmod   @startup\n  @success     @tfail       @tofail      @tport       @ufail       @use\n\n", "db_key": "COMMANDS2", "db_staff_only": false}}, {"pk": 541, "model": "help.helpentry", "fields": {"db_entrytext": "COMMAND_QUOTA_INCREMENT\n\n  CONFIG PARAMETER: command_quota_increment <amount>\n  DEFAULT: 1\n\n  Specifies the number of commands by which the command quota for connected\n  users each timeslice.  Each command a user types in (commands executed by\n  machines do not count) decreases the quota by 1, and the user's commands are\n  only executed if the quota is greater than zero.\n\n  Related Topics: command_quota_max, timeslice.\n\n", "db_key": "COMMAND_QUOTA_INCREMENT", "db_staff_only": false}}, {"pk": 542, "model": "help.helpentry", "fields": {"db_entrytext": "COMMAND_QUOTA_MAX\n\n  CONFIG PARAMETER: command_quota_max <amount>\n  DEFAULT: 100\n\n  Specifies the maximum value for the command quota for connected users.\n  A user's command quota is only increased if it is below this value.\n  Each command a user types in (commands executed by machines do not count)\n  decreases the quota by 1, and the user's commands are only executed if the\n  quota is greater than zero.\n\n  Related Topics: command_quota_increment, timeslice.\n\n", "db_key": "COMMAND_QUOTA_MAX", "db_staff_only": false}}, {"pk": 543, "model": "help.helpentry", "fields": {"db_entrytext": "COMPRESSION\n\n  CONFIG PARAMETER: compress <yes/no>\n  DEFAULT: no\n\n  Indicates whether or not the database is to be compressed using the\n  compress_program when it is written, and whether or not to check for a\n  compressed database to uncompress at startup.\n\n  Related Topics: compress_program, uncompress_program.\n\n", "db_key": "COMPRESSION", "db_staff_only": false}}, {"pk": 544, "model": "help.helpentry", "fields": {"db_entrytext": "COMPRESS_PROGRAM\n\n  CONFIG PARAMETER: compress_program <path>\n  DEFAULT: gzip\n\n  Specifies the program to be run to compress the database file when it is\n  written.  If database file compression is enabled, database dumps are piped\n  through this program on their way out to disk.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: compression, uncompress_program.\n\n", "db_key": "COMPRESS_PROGRAM", "db_staff_only": false}}, {"pk": 253, "model": "help.helpentry", "fields": {"db_entrytext": "COMSYS\n\n  This is the help for the MUX comsystem. Note that the channel names and\n  aliases are case-sensitive. Many games are configured to have a new player\n  automatically join the 'Public' channel, and a Guest join the 'Guest'\n  channel. If you are a wizard, see 'wizhelp config' for the parameters\n  relating to this.\n\n  A comsys allows the various players to communicate with each other. A\n  comsys can consist of one Public channel for all players, or various\n  channels set aside for various groups within the game, thus allowing each\n  group to communicate with the other members of that group.\n\n  Two of the most accepted reasons for using a comsys are to allow players to\n  interact with members of their group, and to provide a venue for OOC\n  chatting.\n\n  Related Topics: comsys commands, comsys examples\n\n", "db_key": "COMSYS", "db_staff_only": false}}, {"pk": 254, "model": "help.helpentry", "fields": {"db_entrytext": "COMSYS COMMANDS AND FUNCTIONS\n\n  These are the topics for the MUX comsystem:\n\n  User Commands:            @clist, addcom, alias, allcom, comlist, comtitle,\n                            clearcom, delcom\n\n  Administrative Commands:  @cboot, @ccharge, @cchown, @ccreate, @cdestroy,\n                            @cemit, @clist, @coflags, @cpflags, @cset, @cwho\n\n  Functions:                channels(), chanobj(), comalias(), comtitle(),\n                            cwho()\n\n  General Information:      channel object, comsys examples\n\n", "db_key": "COMSYS COMMANDS", "db_staff_only": false}}, {"pk": 255, "model": "help.helpentry", "fields": {"db_entrytext": "COMSYS EXAMPLES\n\n  Examples:\n    > addcom public=Public\n    Channel Public added with alias public.\n\n    > pub off\n    [Public] Foobar has left this channel.\n\n    > pub on\n    You have joined channel Public.\n    [Public] Foobar has joined this channel.\n\n    > pub who\n    -- Players --\n    Foobar(#23PWc)\n    Wizard(#1PWc)\n    -- Objects --\n    -- Public --\n\n    > pub Hello world!\n    [Public] Foobar says, \"Hello world!\"\n\n    > pub last 10\n    -- Begin Comsys Recall --\n    [Public] Foobar has joined this channel.\n    [Public] Foobar has left this channel.\n    [Public] Foobar has joined this channel.\n    [Public] Foobar says, \"Hello world!\"\n    -- End Comsys Recall --\n\n  Related Topics: comsys commands\n\n", "db_key": "COMSYS EXAMPLES", "db_staff_only": false}}, {"pk": 545, "model": "help.helpentry", "fields": {"db_entrytext": "COMSYS_DATABASE\n\n  CONFIG PARAMETER: comsys_database <path>\n  DEFAULT: comsys.db\n\n  Specifies the file that comsystem and macro information is stored in.\n  This database is loaded at startup if have_comsys is on.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: have_comsys.\n\n", "db_key": "COMSYS_DATABASE", "db_staff_only": false}}, {"pk": 256, "model": "help.helpentry", "fields": {"db_entrytext": "COMTITLE\n\n  COMMAND: comtitle <alias>=<title>\n           comtitle[/<option>] <alias>\n\n  This command allows you to prefix your name on a channel with a title.\n  The second form contains a switch that allow you to turn on or off\n  the ability to see comtitles. <option> can be on of the following:\n\n    on      - comtitles are shown to you.\n    off     - poses are shown to you without their comtitles.\n\n  Anonymous channels (@cset/anon) do not allow their comtitles to be\n  turned off.\n\n  Examples:\n    > comtitle pub=The Great and Powerful\n    Title set to 'The Great and Powerful' on channel Public.\n    > pub :waves to everyone.\n    [Public] The Great and Powerful Foobar waves to everyone.\n\n  Related Topics: comlist, addcom, alias, delcom, @cset\n\n", "db_key": "COMTITLE", "db_staff_only": false}}, {"pk": 546, "model": "help.helpentry", "fields": {"db_entrytext": "CONFIG PARAMETERS\n\n  The following configuration parameters may be specified in the configuration\n  file, or given to the @admin command.  Type 'wizhelp <param>' for help on a\n  particular parameter.\n\n  access  alias  allow_guest_from_registered_site  article_rule  attr_access\n  attr_alias  attr_cmd_access  attr_name_charset  autozone  bad_name\n  badsite_file  cache_names  cache_pages  cache_tick_period  check_interval\n  check_offset  clone_copies_cost  command_quota_increment  command_quota_max\n  compress_program  compression  comsys_database  config_access  conn_timeout\n  connect_file  connect_reg_file  crash_database  crash_message\n  create_max_cost  create_min_cost  dark_sleepers  def_exit_rx  def_exit_tx\n  def_player_rx  def_player_tx  def_room_rx  def_room_tx  def_thing_rx\n  def_thing_tx  default_home  destroy_going_now  dig_cost  down_file\n  down_motd_message  dump_interval  dump_message  dump_offset  earn_limit\n  eval_comtitle  events_daily_hour  examine_flags  examine_public_attrs\n  exit_flags  exit_name_charset  exit_parent  exit_quota  fascist_teleport\n  find_money_chance  fixed_home_message  fixed_tel_message  flag_access\n  flag_alias  flag_name  float_precision forbid_site  fork_dump  full_file\n  full_motd_message  function_access  function_alias  function_name\n  function_invocation_limit  function_recursion_limit  game_dir_file\n\n{ 'wizhelp config parameters2' for more }\n\n", "db_key": "CONFIG PARAMETERS", "db_staff_only": false}}, {"pk": 547, "model": "help.helpentry", "fields": {"db_entrytext": "CONFIG PARAMETERS (continued)\n\n  game_pag_file  global_error_obj  good_name  guest_char_num  guest_file\n  guest_nuker  guest_prefix  guest_site  guests_channel  guests_channel_alias\n  have_comsys  have_mailer  have_zones  help_executor  helpfile  hook_cmd\n  hook_obj  hostnames  idle_interval  idle_timeout  idle_wiz_dark\n  immobile_message  include  indent_desc  initial_size  input_database\n  kill_guarantee_cost  kill_max_cost  kill_min_cost  lag_limit  lag_maximum\n  lbuf_size  link_cost  list_access  lock_recursion_limit  log  log_options\n  logout_cmd_access  logout_cmd_alias  look_obey_terse  machine_command_cost\n  mail_database  mail_ehlo  mail_expiration  mail_per_hour  mail_sendaddr\n  mail_sendname  mail_server  mail_subject  master_room  match_own_commands\n  max_cache_size  max_players  min_guests  module  money_name_plural\n  money_name_singular  motd_file  motd_message  mud_name  newuser_file\n  nositemon_site  notify_recursion_limit  number_guests  open_cost\n  output_database  output_limit  page_cost  paranoid_allocate\n  parent_recursion_limit  paycheck  pcreate_per_hour  pemit_any_object\n  pemit_far_players  permit_site  player_flags  player_parent  player_listen\n  player_match_own_commands  player_name_charset  player_name_spaces\n  player_queue_limit  player_quota  player_starting_home  player_starting_room\n  port  postdump_message  power_alias  public_channel  public_channel_alias\n  public_flags  pueblo_message  queue_active_chunk  queue_idle_chunk\n\n{ 'wizhelp config parameters3' for more }\n\n", "db_key": "CONFIG PARAMETERS2", "db_staff_only": false}}, {"pk": 548, "model": "help.helpentry", "fields": {"db_entrytext": "CONFIG PARAMETERS (continued)\n\n  quiet_look  quiet_whisper  quit_file  quotas  raw_helpfile  read_remote_desc\n  read_remote_name  reality_level  register_create_file  register_site\n  reset_players  restrict_home  retry_limit  robot_cost  robot_flags\n  robot_speech  room_flags  room_name_charset  room_parent  room_quota\n  run_startup  sacrifice_adjust  sacrifice_factor  safe_wipe  safer_passwords\n  search_cost  see_owned_dark  signal_action  site_chars  space_compress\n  sql_database  sql_password  sql_server  sql_user  stack_limit\n  starting_money  starting_quota  status_file  stripped_flags  suspect_site\n  sweep_dark  switch_default_all  terse_shows_contents  terse_shows_exits\n  terse_shows_move_messages  thing_flags  thing_name_charset  thing_parent\n  thing_quota  timeslice  toad_recipient  trace_output_limit  trace_topdown\n  trust_site  uncompress_program  unowned_safe  user_attr_access\n  user_attr_per_hour  wait_cost  wizard_motd_file  wizard_motd_message\n  zone_recursion_limit\n\n", "db_key": "CONFIG PARAMETERS3", "db_staff_only": false}}, {"pk": 549, "model": "help.helpentry", "fields": {"db_entrytext": "CONFIG_ACCESS\n\n  CONFIG PARAMETER: config_access <param> [!]<privilege> [[!]<privilege>]...\n\n  Changes the privileges needed to change the specified configuration\n  parameter.  The value 'disabled' indicates that the parameter may only be\n  specified in the configuration file at startup.\n\n  The privilege of the @admin command is controlled separately via the\n  access directive.  It is therefore ineffective to reduce the privilege of a\n  configuration option without also reducing the privilege of @admin to at\n  least the same level.\n\n  Related Topics: access, @admin, @list config_permissions, PERMISSIONS.\n\n", "db_key": "CONFIG_ACCESS", "db_staff_only": false}}, {"pk": 257, "model": "help.helpentry", "fields": {"db_entrytext": "CONNECTED\n\n  FLAG: CONNECTED(c)  ()\n\n  This flag applies only to players and it shows if the\n  player is connected or not. Thus, each time you are connected to\n  the game, you should see the 'c' flag set, otherwise, you are DEAD!\n  You cannot reset this flag, and it is used internally by the code\n  for things like tabulating players for the WHO list, etc.\n\n  Related Topics:\n\n", "db_key": "CONNECTED", "db_staff_only": false}}, {"pk": 550, "model": "help.helpentry", "fields": {"db_entrytext": "CONNECT_FILE\n\n  CONFIG PARAMETER: connect_file <path>\n  DEFAULT: text/connect.txt\n\n  Specifies the name of the file that a user sees immediately after connecting\n  to the MUX if registration is not enabled.  This file normally contains\n  help on how to connect to or create a character, as well as the WHO and QUIT\n  commands.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: connect_reg_file\n\n", "db_key": "CONNECT_FILE", "db_staff_only": false}}, {"pk": 551, "model": "help.helpentry", "fields": {"db_entrytext": "CONNECT_REG_FILE\n\n  CONFIG PARAMETER: connect_reg_file <path>\n  DEFAULT: text/register.txt\n\n  Specifies the name of the file that a user sees immediately after connecting\n  to the MUX if registration is enabled.  This file normally contains\n  help on how to get a character (usually by sending e-mail to one of the\n  wizards), how to connect to an existing character, as well as the WHO and\n  QUIT commands.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: connect_file\n\n", "db_key": "CONNECT_REG_FILE", "db_staff_only": false}}, {"pk": 552, "model": "help.helpentry", "fields": {"db_entrytext": "CONN_TIMEOUT\n\n  CONFIG PARAMETER: conn_timeout <num>\n  DEFAULT: 60\n\n  If greater than zero, this parameter determines how many seconds a new\n  network connection may remain open while connecting to a character before\n  being automatically disconnected.\n\n  If zero or negative, this parameter effectively disables login-time\n  connection timeouts. While supported, disabling login-time connections is\n  not recommended.\n\n  Related Topics: idle_interval, idle_timeout.\n\n", "db_key": "CONN_TIMEOUT", "db_staff_only": false}}, {"pk": 553, "model": "help.helpentry", "fields": {"db_entrytext": "CONTACT INFO\n\n  Put information about how to contact the wizards and game maintainer\n  in here so they can contact one another when the game is down.\n\n", "db_key": "CONTACT INFO", "db_staff_only": false}}, {"pk": 258, "model": "help.helpentry", "fields": {"db_entrytext": "CONTROL\n\n  There are 6 rules to controlling objects:\n   1) You control anything you own.\n   2) Anything you own that has its INHERIT flag set controls anything you\n      own (including you).\n   3) Anything you own that does not have its INHERIT flag set only controls\n      other things that you own that do not have their INHERIT flag set and\n      do not control you, unless YOU have your inherit flag set.\n   4) A wizard controls everything.\n   5) Anybody controls an unlinked exit, even if it is locked.\n   6) The object is in a part of a zone tree that you control.\n\n  Builders should beware of 5, lest their exits be linked or stolen.\n\n  Most of the commands for altering the database and many commands and\n  functions that retrieve information only work on objects that you control.\n\n", "db_key": "CONTROL", "db_staff_only": false}}, {"pk": 259, "model": "help.helpentry", "fields": {"db_entrytext": "CONVTIME() (continued)\n\n  If a second argument is given, it is the <zonename>:\n\n   local - indicates that a conversion for timezone/DST of the 'local'\n           server time should be applied (the default).\n\n   utc   - indicates that no timezone/DST conversions should be applied.\n           When used this way, there is a unique one-to-one relationship\n           between an integer and it's corresponding text-string which\n           may be useful for handling other time zones and fictional\n           settings.\n\n  <precision> determines the number of fractional seconds shown.\n  By default, no fractional seconds are shown.\n\n{ 'help convtime3' for more }\n\n", "db_key": "CONVTIME2", "db_staff_only": false}}, {"pk": 260, "model": "help.helpentry", "fields": {"db_entrytext": "CONVTIME() (continued)\n\n  Examples:\n    > say time()\n    You say, \"Wed Jun 24 10:22:54 1992\"\n    > say convtime(Wed Jun 24 10:22:54 1992)\n    You say, \"709406574\"\n    > say convtime(Wed Jun 24 10:22:54 1992, utc)\n    You say, \"709381374\"\n    > say convtime(June 24th 1992 10:22:54.0001am Z)\n    You say, \"709381374\"\n    > say convtime(Wed 24 Jun 1992 10:22:54 -0700)\n    You say, \"709406574\"\n    > say convtime(2001-01-01T100000Q)\n    You say, \"978357600\"\n    > say convtime(-1605-120T123456M)\n    You say, \"-112805738704\"\n    > say convtime(23456W12-1T123456T)\n    You say, \"678039276896\"\n\n  Related Topics: convsecs(), secs(), time().\n\n", "db_key": "CONVTIME3", "db_staff_only": false}}, {"pk": 261, "model": "help.helpentry", "fields": {"db_entrytext": "COSTS\n\n  Certain commands cost money to use, they will fail if you don't have\n  enough.  Use the @list costs command to find out what these commands are\n  and how much they cost.\n\n  Related Topics: @list.\n\n", "db_key": "COSTS", "db_staff_only": false}}, {"pk": 554, "model": "help.helpentry", "fields": {"db_entrytext": "CRASH_DATABASE\n\n  CONFIG PARAMETER: crash_database <path>\n  DEFAULT: <input db>.CRASH\n\n  Specifies the name of the database file that should be written when MUX\n  detects an internal error and is about to crash. The file is generated\n  in flatfile format with attribute values included.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n", "db_key": "CRASH_DATABASE", "db_staff_only": false}}, {"pk": 555, "model": "help.helpentry", "fields": {"db_entrytext": "CRASH_MESSAGE\n\n  CONFIG PARAMETER: crash_message <message>\n  DEFAULT:  NOTHING\n\n  Specifies the message sent to all connected players when the server\n  encounters an unexpected error.  The message is sent even if the server can\n  reasonably recover from the error just in case the situation is\n  non-recoverable.  The message is prefixed with 'GAME:'.\n\n", "db_key": "CRASH_MESSAGE", "db_staff_only": false}}, {"pk": 556, "model": "help.helpentry", "fields": {"db_entrytext": "CREATE_MAX_COST\n\n  CONFIG PARAMETER: create_max_cost <amount>\n  DEFAULT: 505\n\n  Specifies the maximum amount of money that is used in calculating the value\n  of a created object.  Specifying more than this amount of money in a @create\n  command will cause the excess to be wasted.\n\n  Related Topics: create_min_cost, sacrifice_adjust, sacrifice_factor.\n\n", "db_key": "CREATE_MAX_COST", "db_staff_only": false}}, {"pk": 557, "model": "help.helpentry", "fields": {"db_entrytext": "CREATE_MIN_COST\n\n  CONFIG PARAMETER: create_min_cost <amount>\n  DEFAULT: 10\n\n  Specifies the minimum (and default) cost for creating an object.\n\n  Related Topics: create_max_cost, sacrifice_adjust, sacrifice_factor.\n\n", "db_key": "CREATE_MIN_COST", "db_staff_only": false}}, {"pk": 262, "model": "help.helpentry", "fields": {"db_entrytext": "\n  Topic: CREDITS\n\nTinyMUX 2.7 is based on TinyMUX 2.6. It is currently maintained by\nStephen Dennis (AKA Brazil). There is a more complete list of credits\nin the README files for the server itself.\n\nSee http://www.tinymux.org for an on-line version of these README files.\n\n", "db_key": "CREDITS", "db_staff_only": false}}, {"pk": 263, "model": "help.helpentry", "fields": {"db_entrytext": "DARK\n\n  FLAG: DARK(D)  ()\n\n  If a room is DARK, then no items are shown when a person\n  'looks' there. If a thing is DARK, then \"look\" does not list that\n  object in the room's Contents:, and if an exit is DARK, it doesn't\n  show up in the Obvious Exits: list.  Puppets and objects that can\n  listen cannot be DARK.\n\n  Related Topics:\n\n", "db_key": "DARK", "db_staff_only": false}}, {"pk": 558, "model": "help.helpentry", "fields": {"db_entrytext": "DARK_SLEEPERS\n\n  CONFIG PARAMETER: dark_sleepers <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not disconnected players are to be considered 'dark',\n  so that they do not show up when a player looks in the room that they are\n  in.  Disconnected players can still be found by examining the room or by\n  using [next()] to follow the contents chain for the room.\n\n", "db_key": "DARK_SLEEPERS", "db_staff_only": false}}, {"pk": 264, "model": "help.helpentry", "fields": {"db_entrytext": "DEAD\n\n  This flag does not alter any behavior of the server itself. However, it may\n  be useful for softcode. This flag is only available if realms is enabled.\n\n  Related Topics:\n\n", "db_key": "DEAD", "db_staff_only": false}}, {"pk": 559, "model": "help.helpentry", "fields": {"db_entrytext": "DEBUG FEATURES\n\n  This topic intentionally left blank.\n\n", "db_key": "DEBUG FEATURES", "db_staff_only": false}}, {"pk": 560, "model": "help.helpentry", "fields": {"db_entrytext": "DEFAULT_HOME\n\n  CONFIG PARAMETER: default_home <location>\n  DEFAULT: (player_starting_home)\n\n  Sets the home location for objects which have an invalid home (whether\n  because the home location was deleted, or is owned by another player and\n  is not set ABODE) and the home of their owner is also invalid.  If this\n  parameter is not set, the value of player_starting_home is used instead.\n\n  Related Topics: player_starting_home.\n\n", "db_key": "DEFAULT_HOME", "db_staff_only": false}}, {"pk": 561, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_EXIT_RX\n\n  CONFIG PARAMETER: def_exit_rx <value>\n  DEFAULT: 1\n\n  Sets the default Rx level for a newly created exit.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_EXIT_RX", "db_staff_only": false}}, {"pk": 562, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_EXIT_TX\n\n  CONFIG PARAMETER: def_exit_rx <value>\n  DEFAULT: 1\n\n  Sets the default Tx level for a newly created exit.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_EXIT_TX", "db_staff_only": false}}, {"pk": 563, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_PLAYER_RX\n\n  CONFIG PARAMETER: def_player_rx <value>\n  DEFAULT: 1\n\n  Sets the default Rx level for a newly created player.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_PLAYER_RX", "db_staff_only": false}}, {"pk": 564, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_PLAYER_TX\n\n  CONFIG PARAMETER: def_player_tx <value>\n  DEFAULT: 1\n\n  Sets the default Tx level for a newly created player.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_PLAYER_TX", "db_staff_only": false}}, {"pk": 565, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_ROOM_RX\n\n  CONFIG PARAMETER: def_room_rx <value>\n  DEFAULT: 1\n\n  Sets the default Rx level for a newly created room.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_ROOM_RX", "db_staff_only": false}}, {"pk": 566, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_ROOM_TX\n\n  CONFIG PARAMETER: def_room_tx <value>\n  DEFAULT: all (-1)\n\n  Sets the default Tx level for a newly created exit.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_ROOM_TX", "db_staff_only": false}}, {"pk": 567, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_THING_RX\n\n  CONFIG PARAMETER: def_thing_rx <value>\n  DEFAULT: 1\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_THING_RX", "db_staff_only": false}}, {"pk": 568, "model": "help.helpentry", "fields": {"db_entrytext": "DEF_THING_TX\n\n  CONFIG PARAMETER: def_thing_tx <value>\n  DEFAULT: 1\n\n  Sets the default Tx level for a newly created object.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n", "db_key": "DEF_THING_TX", "db_staff_only": false}}, {"pk": 265, "model": "help.helpentry", "fields": {"db_entrytext": "DELCOM\n\n  COMMAND: delcom <alias>\n\n  Deletes <alias> from your list of channel aliases. If the <alias> was the\n  only alias for the channel, then the channel has now been effectively\n  removed. In order to use that channel again, you will need to re-add the\n  channel with the 'addcom' command. If you only wish to have the channel\n  quiet for a time, then a better command is '<alias> off'.\n\n  Example:\n    >delcom pub\n    Channel Public deleted.\n\n  Related Topics: addcom, alias, comlist, clearcom.\n\n", "db_key": "DELCOM", "db_staff_only": false}}, {"pk": 569, "model": "help.helpentry", "fields": {"db_entrytext": "DESTROY_GOING_NOW\n\n  CONFIG PARAMETER: destroy_going_now [yes/no]\n  DEFAULT: No\n\n  By default, @destroy only queues an object for destruction on the news\n  auto-@dbck cycle. However, if this configuration option is enabled, a\n  second @destroy on a previously queued request causes the destruction to\n  occur immediately.\n\n  This behavior is for compatibility with PennMUSH.\n\n", "db_key": "DESTROY_GOING_NOW", "db_staff_only": false}}, {"pk": 266, "model": "help.helpentry", "fields": {"db_entrytext": "DESTROY_OK\n\n  FLAG: DESTROY_OK(d)  ()\n\n  When set on an object, it allows any player to destroy\n  it as long as the object is not locked against them. This is good\n  for things like notes, whereby the recipient can destroy the note\n  after reading it, instead of having to look for you to destroy it.\n  The DESTROY_OK flag overrides the SAFE flag, so that you do not need to\n  give the /override switch to @destroy to destroy a thing that is both\n  DESTROY_OK and SAFE. When it is set on any object or the owner of that\n  object, that object is destroyed immediately, without delay.\n\n  Related Topics: @destroy, SAFE.\n\n", "db_key": "DESTROY_OK", "db_staff_only": false}}, {"pk": 570, "model": "help.helpentry", "fields": {"db_entrytext": "DIG_COST\n\n  CONFIG PARAMETER: dig_cost <amount>\n  DEFAULT: 1\n\n  Specifies how much the @dig command costs.\n\n", "db_key": "DIG_COST", "db_staff_only": false}}, {"pk": 571, "model": "help.helpentry", "fields": {"db_entrytext": "DOING\n\n  COMMAND: DOING <prefix>\n\n  This command is very similar to the mortal WHO command (the wizard WHO\n  command returns different information).  When run by a wizard, the DOING\n  command reports additional information about the player in the form of flag\n  letters between the idle time and the players' Doing string.  The following\n  letters may be present:\n\n  D - Player is set DARK.\n  d - Player is not shown on the WHO list because they have been idle for\n      longer than the default inactivity timeout and the idle_dark_wiz\n      configuration parameter has been turned on. (only if not D)\n  U - Player is set UNFINDABLE.\n  u - Player is in an UNFINDABLE location (only if not U).\n  + - Player is set SUSPECT.\n\n  Related Topics: SESSION, WHO, DARK, UNFINDABLE, SUSPECT, idle_dark_wiz.\n\n", "db_key": "DOING", "db_staff_only": false}}, {"pk": 572, "model": "help.helpentry", "fields": {"db_entrytext": "DOWN_FILE\n\n  CONFIG PARAMETER: down_file <pathname>.\n  DEFAULT: text/down.txt\n\n  Specifies the name of the file that is displayed when players attempt to\n  connect to a non-wizard character when logins are disabled.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: @disable, down_motd_message.\n\n", "db_key": "DOWN_FILE", "db_staff_only": false}}, {"pk": 573, "model": "help.helpentry", "fields": {"db_entrytext": "DOWN_MOTD_MESSAGE\n\n  CONFIG PARAMETER: down_motd_message <message>\n  DEFAULT: text/down.txt\n\n  Sets the message that is displayed when a player attempts to connect to a\n  non-wizard character when logins are disabled.  This message is displayed\n  in addition to the contents of the down.txt file.\n\n  Related Topics: @disable, down_motd_file.\n\n", "db_key": "DOWN_MOTD_MESSAGE", "db_staff_only": false}}, {"pk": 267, "model": "help.helpentry", "fields": {"db_entrytext": "DROP\n\n  COMMAND: drop[/<switch>] <object>\n           drop[/<switch>] <exit>\n\n  The first form removes <object> from your inventory and puts it in your\n  location, except for the following special cases: Dropping a STICKY thing\n  sends it home, and dropping a thing in a room with a drop-to sends the thing\n  to the drop-to location.\n\n  The second form removes <exit> from your list of exits and adds it to the\n  list of exits for the current location.  Anyone in the same location as\n  you may then use the exit to travel to the exit's destination.  You can\n  only drop exits when you own the location where you are dropping them.\n\n  The following switch is recognized:\n     /quiet   - Don't perform the @odrop/@adrop attributes on the dropped\n                 object.  This switch only works if you control the object.\n\n  'throw' is the same as 'drop'.\n\n  Related Topics: get, @adrop, @drop, @odrop, DROP-TO, STICKY.\n\n", "db_key": "DROP", "db_staff_only": false}}, {"pk": 268, "model": "help.helpentry", "fields": {"db_entrytext": "DROP-TOS\n\n  When the @link command is used on a room, it sets a drop-to location.  Any\n  object dropped in the room (if it isn't STICKY) will go to that location.\n  If the room is STICKY, the drop-to will be delayed until the last person in\n  the room has left.\n\n  Related Topics: @link, STICKY.\n\n", "db_key": "DROP-TOS", "db_staff_only": false}}, {"pk": 574, "model": "help.helpentry", "fields": {"db_entrytext": "DUMP_INTERVAL\n\n  CONFIG PARAMETER: dump_interval <amount>\n  DEFAULT: 3600\n\n  Specifies the time in seconds between automatic database dumps.\n\n  Related Topics: dump_offset, output_database.\n\n", "db_key": "DUMP_INTERVAL", "db_staff_only": false}}, {"pk": 575, "model": "help.helpentry", "fields": {"db_entrytext": "DUMP_MESSAGE\n\n  CONFIG PARAMETER: dump_message <message>\n  DEFAULT: blank\n\n  Sets the message that is sent to everyone before the database is being\n  dumped to disk, whether automatically or via the @dump command.\n\n  Related Topics: @dump, postdump_message.\n\n", "db_key": "DUMP_MESSAGE", "db_staff_only": false}}, {"pk": 576, "model": "help.helpentry", "fields": {"db_entrytext": "DUMP_OFFSET\n\n  CONFIG PARAMETER: dump_offset <amount>\n  DEFAULT: 0\n\n  Specifies the time in seconds between startup and the first database dump.\n  If zero, the value of the dump_interval parameter is used.\n\n  Related Topics: dump_interval.\n\n", "db_key": "DUMP_OFFSET", "db_staff_only": false}}, {"pk": 577, "model": "help.helpentry", "fields": {"db_entrytext": "EARN_LIMIT\n\n  CONFIG PARAMETER: earn_limit <amount>\n  DEFAULT: 10000\n\n  Specifies the threshold at which earning additional money becomes\n  difficult.  Specifically, players with more than this much money no longer\n  receive a paycheck for each day they connect, don't receive insurance\n  payments for being killed, and don't find money lying in the streets.\n\n  Related Topics: find_money_chance, paycheck.\n\n", "db_key": "EARN_LIMIT", "db_staff_only": false}}, {"pk": 269, "model": "help.helpentry", "fields": {"db_entrytext": "ENACTOR\n\n  The enactor is the object that caused an action list to be performed.\n  So, the enactor of the Ahear action list is the player or object who\n  said/emoted/etc the message that matched the Listen attribute, the\n  enactor of the Apay attribute is the player who gave the object money, etc.\n  The enactor of an attribute that is run by a @trigger command is the\n  object that ran the @trigger command.  The following substitutions can be\n  performed in an action list to return information about the enactor:\n\n    %# or [v(#)]           - Database number of the enactor\n    %N/%n or [v(N)]/[v(n)] - Name of the enactor.\n    %O/%o ...              - Objective pronoun for the enactor\n                             (him her it them)\n    %P/%p ...              - Possessive pronoun (his her its their)\n    %S/%s ...              - Subjective pronoun (he she it they)\n    %A/%a ...              - Absolute possessive pronoun (his hers its theirs)\n\n  Related Topics: SUBSTITUTION.\n\n", "db_key": "ENACTOR", "db_staff_only": false}}, {"pk": 270, "model": "help.helpentry", "fields": {"db_entrytext": "ENTER\n\n  COMMAND: enter[/<switch>] <object>\n\n  The enter command is used to enter an object. Insides of objects are best\n  used for vehicles, or storage spaces when you don't have a home (or even\n  as a floating home).  In order to enter an object you must either own it or\n  it must have its ENTER_OK flag set, and you must also pass the object's\n  EnterLock (if it has one).\n\n  The following switch is recognized:\n\n     /quiet   - Don't perform the @oenter/@aenter or @oefail/@aefail\n                attributes on the entered object, and don't perform the\n                @oxleave attribute on your current location.  This switch\n                only works if you control the object being entered.\n\n  Related Topics: leave, @aefail, @aenter, @efail, @enter, @idesc, @lock,\n                  @oefail, @oenter, @oxleave, ENTER_OK.\n\n", "db_key": "ENTER", "db_staff_only": false}}, {"pk": 271, "model": "help.helpentry", "fields": {"db_entrytext": "ENTER_OK\n\n  FLAG: ENTER_OK(e)  ()\n\n  If an object or person is ENTER_OK, other players may\n  enter the object or person by using 'enter <object/person>. Players\n  must also have the ENTER_OK set if they wish to be able to receive\n  things given to them by other players via the\n  'give <player> = <object>'.\n\n  Related Topics:\n\n", "db_key": "ENTER_OK", "db_staff_only": false}}, {"pk": 578, "model": "help.helpentry", "fields": {"db_entrytext": "EVAL_COMTITLE\n\n  CONFIG PARAMETER: eval_comtitle <yes/no>\n  DEFAULT: yes\n\n  Specifies whether or not comtitles are evaluated as code each time\n  a pose is made on channel.\n\n", "db_key": "EVAL_COMTITLE", "db_staff_only": false}}, {"pk": 579, "model": "help.helpentry", "fields": {"db_entrytext": "EVENTS_DAILY_HOUR\n\n  CONFIG PARAMETER: events_daily_hour <hour>\n  DEFAULT: 7\n\n  Specifies the hour that @daily is executed. No guarantee is made as to what\n  time during this hour it is executed. This should be a integer between 0 and\n  23.\n\n", "db_key": "EVENTS_DAILY_HOUR", "db_staff_only": false}}, {"pk": 272, "model": "help.helpentry", "fields": {"db_entrytext": "EXAMINE\n\n  COMMAND: examine[/<switches>] <object>[/<wild-attrib>]\n\n  Displays all available information about <object>.  <object> may be an\n  object, 'me', or 'here'.  You must control the object to examine it,\n  or it must be set VISUAL.  If you do not own the object, you will just\n  see the name of the object's owner, and optionally any public\n  attributes and attributes owned by you set on the object.\n\n  If an attribute is owned by a player other than the owner of the\n  object, the number of the attribute owner is shown in parentheses\n  immediately following the attribute name.  Flag letters may appear in\n  parentheses also, to indicate the status of the attribute.  A list of\n  this flag letters is given in the references.\n\n\n{ 'help examine2' for more }\n\n", "db_key": "EXAMINE", "db_staff_only": false}}, {"pk": 273, "model": "help.helpentry", "fields": {"db_entrytext": "EXAMINE (continued)\n\n  If you specify a wildcard-ed attribute name, then only those attributes\n  that match are shown.  So, 'exam me/v?' will show all your attributes that\n  start with v and are two characters long.\n\n  The following switches are available:\n\n     /brief  - Shows everything except attributes.\n\n     /full   - When examining an object you don't control, show any public\n               attributes set on the object in addition to the owner's name.\n\n     /parent - Includes attributes that are not present on the object itself\n               but which are inherited from the object's parent.\n\n  Related Topics: look, @decompile, VISUAL, ATTRIBUTE FLAGS,\n                  ATTRIBUTE OWNERSHIP.\n\n", "db_key": "EXAMINE2", "db_staff_only": false}}, {"pk": 580, "model": "help.helpentry", "fields": {"db_entrytext": "EXAMINE_FLAGS\n\n  CONFIG PARAMETER: examine_flags <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not the examine command should include an expanded\n  flags list in the description of the object.\n\n  Related Topics: examine.\n\n", "db_key": "EXAMINE_FLAGS", "db_staff_only": false}}, {"pk": 581, "model": "help.helpentry", "fields": {"db_entrytext": "EXAMINE_PUBLIC_ATTRS\n\n  CONFIG PARAMETER: examine_public_attrs <yes/no>\n  DEFAULT: yes\n\n  Indicate whether or not the examine command should display the public\n  attributes of the object by default when used by a player who does not\n  control the object.  Regardless of the setting of this parameter, the\n  short form is available with examine/brief and the long form with\n  examine/long.\n\n  Related Topics: examine.\n\n", "db_key": "EXAMINE_PUBLIC_ATTRS", "db_staff_only": false}}, {"pk": 274, "model": "help.helpentry", "fields": {"db_entrytext": "EXITS\n\n  An exit links one location to another location, providing a way to travel\n  on the MUX.  Although normally used to link rooms together, exits can be\n  made to and from players and objects.\n\n  You may pick up exits that you own, and drop exits into locations that\n  you own.  When you pick up or drop an exit, anyone in the exit's new\n  location may use the exit and travel to its destination.  Exits may also\n  be @teleported from one room to another.\n\n  If an exit is set DARK it will not show up in the list of obvious exits in\n  a room.\n\n  If multiple exits match in name, MUX chooses between them randomly.\n\n  Another way of creating 'variable' exits is to use the @exitto attribute.\n\n  Related Topics: @exitto, @link, @open.\n\n", "db_key": "EXITS", "db_staff_only": false}}, {"pk": 582, "model": "help.helpentry", "fields": {"db_entrytext": "EXIT_FLAGS\n\n  CONFIG PARAMETER: exit_flags <flags>\n  DEFAULT: blank\n\n  Modifies the set of flags that an exit receives when it is created via the\n  @open command or via the optional exit creation parameters of the @dig or\n  @link commands.  Flags prefixed by a ! remove the indicated flag from the\n  set.\n\n  Related Topics: @list, player_flags, robot_flags, room_flags, thing_flags.\n\n", "db_key": "EXIT_FLAGS", "db_staff_only": false}}, {"pk": 583, "model": "help.helpentry", "fields": {"db_entrytext": "EXIT_NAME_CHARSET\n\n  CONFIG PARAMETER: exit_name_charset [!]<charset> [[!]<charset>]...\n  DEFAULT: all (Unicode)\n\n    ascii     - Restrict names to use ASCII.\n    iso8859-1 - Restrict names to use iso8859-1.\n    latin-1   - Restrict names to use latin-1 (same as iso8859-1).\n\n  If no restrictions are made, the Unicode set is used.  If more than one\n  restriction is made, the union of the two are used.  That is, as long as a\n  character appears in any of the character sets, it is allowed.\n\n  Related Topics: attr_name_charset, player_name_charset, room_name_charset,\n                  thing_name_charset.\n\n", "db_key": "EXIT_NAME_CHARSET", "db_staff_only": false}}, {"pk": 584, "model": "help.helpentry", "fields": {"db_entrytext": "EXIT_PARENT\n\n  CONFIG PARAMETER: exit_parent <dbref>\n  DEFAULT:  NOTHING\n\n  Sets the parent object for all newly created exits on the game.   Existing\n  exits in the game database are not effected.   If <dbref> is not a valid\n  object, the setting is ignored.\n\n  Related Topics: player_parent, room_parent, thing_parent\n\n", "db_key": "EXIT_PARENT", "db_staff_only": false}}, {"pk": 585, "model": "help.helpentry", "fields": {"db_entrytext": "EXIT_QUOTA\n\n  CONFIG PARAMETER: exit_quota <amount>\n  DEFAULT: 1\n\n  Sets how much quota it costs to create an exit (and also how much the\n  remaining quota is increased when an exit is @destroyed.\n\n  Related Topics: @quota, player_quota, room_quota, thing_quota, QUOTAS.\n\n", "db_key": "EXIT_QUOTA", "db_staff_only": false}}, {"pk": 275, "model": "help.helpentry", "fields": {"db_entrytext": "FAE\n\n  The FAE flag is used to denote an object which is visible to others with\n  a regular description but sees FAEDESC's and those set CHIMERA. Most\n  commonly used for Changelings and those who have been Enchanted by one.\n\n", "db_key": "FAE", "db_staff_only": false}}, {"pk": 276, "model": "help.helpentry", "fields": {"db_entrytext": "FAILURE\n\n  You fail to use a player or a thing when you cannot take it (because its\n  lock fails).  You fail to use an exit when you cannot go through it\n  (because it is unlinked or locked). You fail to use a room when you fail\n  to look around (because it's locked).\n\n  Related Topics: get, look, @afail, @fail, @lock, @ofail, STRINGS.\n\n", "db_key": "FAILURE", "db_staff_only": false}}, {"pk": 586, "model": "help.helpentry", "fields": {"db_entrytext": "FASCIST_TELEPORT\n\n  CONFIG PARAMETER: fascist_teleport <yes/no>\n  DEFAULT: no\n\n  If this parameter is set to yes, then players (and objects) may not\n  teleport out of locations that they do not control or which are not set\n  JUMP_OK.  If the teleporting player is inside an object, the room that\n  ultimately contains the object is checked.  Going home is unaffected.\n\n", "db_key": "FASCIST_TELEPORT", "db_staff_only": false}}, {"pk": 587, "model": "help.helpentry", "fields": {"db_entrytext": "FILES\n\n  TinyMUX uses these files (normally kept in the same directory as the\n  database files and the netmux program) to display information under\n  certain circumstances.  The names of the files used can be changed with\n  configuration directives (or on the netmux command line, in the case of\n  netmux.conf).\n\n  badsite.txt:    Displayed when someone connects from a site that is not\n                  allowed to connect.  The connection is then closed.\n  connect.txt:    Displayed when someone connects from a site for which\n                  registration is not enabled.\n  create_reg.txt: Displayed when someone tries to 'create' a character from\n                  a site for which registration is enforced.\n  down.txt:       Displayed when someone tries to connect to a non-wizard\n                  character when logins are disabled.\n  help.txt:       File containing information displayed by the help command.\n\n{ 'wizhelp files2' for more }\n\n", "db_key": "FILES", "db_staff_only": false}}, {"pk": 588, "model": "help.helpentry", "fields": {"db_entrytext": "FILES (continued)\n\n  guest.txt:      Displayed to whoever connects to the guest character\n                  specified by the guest_character config parameter.\n  motd.txt:       Displayed after someone connects to an existing character.\n  netmux.conf:    Configuration directives read at startup.\n  news.txt:       File containing information displayed by the news command.\n  newuser.txt:    Displayed after someone creates a new character or connects\n                  to their character for the first time.\n  quit.txt:       Displayed after someone QUITs but before the net connection\n                  is closed.\n  register.txt:   Displayed when someone connects from a site for which\n                  registration is enabled.\n  wizhelp.txt:    File containing information displayed by the wizhelp\n                  command.\n  wizmotd.txt:    Displayed to wizards when they connect to their characters.\n\n  Related Topics: badsite_file, connect_file, connect_reg_file, down_file,\n                  guest_file, helpfile, raw_helpfile, motd_file, newuser_file,\n                  quit_file, register_create_file, wizard_motd_file.\n\n", "db_key": "FILES2", "db_staff_only": false}}, {"pk": 589, "model": "help.helpentry", "fields": {"db_entrytext": "FIND_MONEY_CHANCE\n\n  CONFIG PARAMETER: find_money_chance <amount>\n  DEFAULT: 0\n\n  Indicates the chance that players have of finding money when entering a\n  new room.  The chance is 1 / find_money_chance, except that finding money\n  is disabled if this parameter is set to zero.\n\n  Related Topics: earn_limit, paycheck.\n\n", "db_key": "FIND_MONEY_CHANCE", "db_staff_only": false}}, {"pk": 277, "model": "help.helpentry", "fields": {"db_entrytext": "FIXED\n\n  FLAG: FIXED(f)  ()\n\n  No object may teleport or go home when this flag is set. This\n  flag may only be set by a wizard. If set on a player, neither they nor\n  any of their objects may teleport or go home.\n\n  Related Topics:\n\n", "db_key": "FIXED", "db_staff_only": false}}, {"pk": 590, "model": "help.helpentry", "fields": {"db_entrytext": "FIXED_HOME_MESSAGE\n\n  CONFIG PARAMETER: fixed_home_message <string>\n  DEFAULT: none\n\n  Specifies the string that is sent to a player when they try to go home\n  while they are set with the FIXED flag.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: fixed_tel_message, immobile_message.\n\n", "db_key": "FIXED_HOME_MESSAGE", "db_staff_only": false}}, {"pk": 591, "model": "help.helpentry", "fields": {"db_entrytext": "FIXED_TEL_MESSAGE\n\n  CONFIG PARAMETER: fixed_tel_message <string>\n  DEFAULT: none\n\n  Specifies the string that is sent to a player when they try to teleport\n  while they are set with the FIXED flag.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: fixed_home_message, immobile_message.\n\n", "db_key": "FIXED_TEL_MESSAGE", "db_staff_only": false}}, {"pk": 278, "model": "help.helpentry", "fields": {"db_entrytext": "FLAG LIST\n\n  Flag  Title        Flag  Title        Flag  Title        Flag  Title\n  -------------------------------------------------------------------------\n    A - ABODE      |   B - BLIND      |   C - CHOWN_OK   |   D - DARK\n    E - EXIT(*)    |   F - FLOATING   |   G - GOING      |   H - HAVEN\n    I - INHERIT    |   J - JUMP_OK    |   K - KEY        |   L - LINK_OK\n    M - MONITOR    |   N - NOSPOOF    |   O - OPAQUE     |   P - PLAYER(*)\n    Q - QUIET      |   R - ROOM(*)    |   S - STICKY     |   T - TRACE\n    U - UNFINDABLE |   V - VISUAL     |   W - WIZARD     |   X - ANSI\n    Y - PARENT_OK  |   Z - ROYALTY    |   a - AUDIBLE    |   b - AUDITORIUM\n    c - CONNECTED  |   d - DESTROY_OK |   e - ENTER_OK   |   f - FIXED\n    g - UNINSPECTED|   h - HALTED     |   i - IMMORTAL   |   j - GAGGED\n    k - KEEPALIVE  |   l - LIGHT      |   m - MYOPIC     |   n - NO_COMMAND\n    p - PUPPET     |   q - TERSE      |   r - ROBOT      |   s - SAFE\n    t - TRANSPARENT|   u - SUSPECT    |   v - VERBOSE    |   w - STAFF\n    x - SLAVE      |   $ - SITEMON    |   z - OPEN_OK    |   ? - HEAD\n    - - NOBLEED    |   | - VACATION   |   ~ - ASCII      |   ( - HTML\n                   |                  |       UNICODE    |\n  ------------------------------------------------------------------------\n\n  (*) Note that these 'flags' are really types.  Also notice that THING\n      is not in the list.  That is, andflag(me,P) and hastype(me,PLAYER)\n      work, but hasflag(me,THING) does not.\n\n{ 'help flag list2' for more }\n\n", "db_key": "FLAG LIST", "db_staff_only": false}}, {"pk": 279, "model": "help.helpentry", "fields": {"db_entrytext": "FLAG LIST2\n\n  Flag  Title        Flag  Title        Flag  Title        Flag  Title\n  ------------------------------------------------------------------------\n  Without Realms Patch Flags:\n    0 - MARKER0    |   1 - MARKER1    |   2 - MARKER2    |   3 - MARKER3\n    4 - MARKER4    |   5 - MARKER5    |   6 - MARKER6    |   7 - MARKER7\n    8 - MARKER8    |   9 - MARKER9    |                  |\n  ------------------------------------------------------------------------\n  Realms Patch Flags:\n    0 - FAE        |   1 - CHIMERA    |   2 - PEERING    |   3 - UMBRA\n    4 - SHROUD     |   5 - MATRIX     |   6 - OBF        |   7 - HSS\n    8 - MEDIUM     |   9 - DEAD       |                  |\n  ------------------------------------------------------------------------\n  Firan-specific\n    # - IMMOBILE   |   > - LINEWRAP   |     - QUELL      |   ! - RESTRICTED\n    + - PARENT     |                  |                  |\n  ------------------------------------------------------------------------\n\n  For information on a particular flag, type 'help <flagname>'.\n  Some flags may be disabled at your particular MUX.\n\n  Related Topics: andflags(), hasflag(), hastype(), orflags().\n\n", "db_key": "FLAG LIST2", "db_staff_only": false}}, {"pk": 280, "model": "help.helpentry", "fields": {"db_entrytext": "FLAGS\n\n  Everything in the universe of this MUX (Rooms, Exits, Things, Players,\n  etc) are represented in the same way at the program level.  A room merely\n  has the room flag set and a player has the player flag set.  In addition,\n  flags also give objects abilities or qualities.  For instance, a wizard\n  has the wizard flag set.  That is what lets the program know he may use\n  wizard abilities.  An object or room may have the dark flag set. In the\n  case of an object, this makes the object invisible to normal eye-sight.\n  In the case of a room, the room becomes too dark to see other objects or\n  players.  To get a list of the flags that are available, type '@list flags'\n  or 'help flag list'. For more specific information on a particular flag,\n  request help on the flag's name, as in 'help ENTER_OK'.\n\n", "db_key": "FLAGS", "db_staff_only": false}}, {"pk": 592, "model": "help.helpentry", "fields": {"db_entrytext": "FLAG_ACCESS\n\n  CONFIG PARAMETER: flag_access <flag name> <access>\n\n  Changes who can set or see a flag.  For set capability, <access> can be:\n\n  any             - Anyone can set this flag.\n  god             - Only God can set this flag.\n  privileged      - Only God can set this flag on players, but non-robot\n                    players can set it on objects of other types, if they\n                    themselves have the flag.\n  restrict_player - Only Wizards can set this flag on players, but mortals can\n                    set the flag on objects of other types.\n  royalty         - Only Royalty, Wizards, and God can set this flag.\n  staff           - Only Staff, Royalty, Wizards, and God can set this flag.\n  wizard          - Only Wizards and God can set this flag.\n\n  Flag visibility is controlled by <[!]access> with the following:\n\n  hidden          - Only Wizards and God can see this flag.\n  dark            - Only God can see this flag.\n\n  There are some flags whose access/visibility permissions cannot be changed,\n  since they are handled in a special way.  This includes the DARK, and\n  AUDIBLE flags.\n\n", "db_key": "FLAG_ACCESS", "db_staff_only": false}}, {"pk": 593, "model": "help.helpentry", "fields": {"db_entrytext": "FLAG_ALIAS\n\n  CONFIG PARAMETER: flag_alias <alias> <flagname>\n\n  Defines <alias> as a synonym for the flag <flagname>.\n\n  Related Topics: alias, function_alias.\n\n", "db_key": "FLAG_ALIAS", "db_staff_only": false}}, {"pk": 594, "model": "help.helpentry", "fields": {"db_entrytext": "FLAG_NAME\n\n  Config parameter: flag_name <oldflagname> <newflagname>\n\n  Redefines what the given flag is called.  This config parameter is only\n  useable within the conf file.  Use @flag to change them online.\n\n  Related Topics: @flag\n\n", "db_key": "FLAG_NAME", "db_staff_only": false}}, {"pk": 281, "model": "help.helpentry", "fields": {"db_entrytext": "FLOATING\n\n  FLAG: FLOATING(F)  ()\n\n  If a room is set floating, you will not be notified every 10\n  minutes or so that you have a disconnected room.\n\n  Related Topics:\n\n", "db_key": "FLOATING", "db_staff_only": false}}, {"pk": 595, "model": "help.helpentry", "fields": {"db_entrytext": "FLOAT_PRECISION\n\n  CONFIG PARAMETER: float_precision <places>\n  DEFAULT: -1\n\n  When enabled (by setting to a non-negative number), TinyMUX uses the useful\n  subset approach for floating-point results, and the precision of these\n  results are limited to the specified number of <places>. For compatibility\n  with existing softcode, a value of 6 may be necessary.\n\n  By default, this option is disabled, and TinyMUX uses the full set approach\n  for floating-point results.\n\n  Related Topics:\n\n", "db_key": "FLOAT_PRECISION", "db_staff_only": false}}, {"pk": 596, "model": "help.helpentry", "fields": {"db_entrytext": "FORBID_SITE\n\n  CONFIG PARAMETER: forbid_site <site>\n\n  Indicates that connections are to be rejected from sites whose address\n  matches the specified sit.  The contents of the file specified by\n  badsite_file is sent immediately before closing the connection.  This\n  directive may be used to restrict access to just the local network, or to\n  prevent access from troublemaking sites.  The default is for all sites to\n  be allowed to connect, none forbidden.\n\n  Related Topics: badsite_file, permit_site, register_site, guest_site,\n                  SITE LISTS, SITE NOTATION,\n\n", "db_key": "FORBID_SITE", "db_staff_only": false}}, {"pk": 597, "model": "help.helpentry", "fields": {"db_entrytext": "FORK_DUMP\n\n  CONFIG PARAMETER: fork_dump <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not database dumps are to be done by fork()ing off a\n  separate process to perform the dump.  While enabling this parameter reduces\n  the amount of time needed to perform the dump, it requires that the system\n  have enough free swap space to hold a second copy of the running game.\n\n  Related Topics:\n\n", "db_key": "FORK_DUMP", "db_staff_only": false}}, {"pk": 598, "model": "help.helpentry", "fields": {"db_entrytext": "FULL_FILE\n\n  CONFIG PARAMETER: full_file <pathname>\n  DEFAULT: text/full.txt\n\n  Specifies the name of the file that is displayed when players attempt to\n  connect to a non-wizard character when the number of connected players\n  is not less than the number of players allowed by the max_players directive.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: full_motd_message, max_players.\n\n", "db_key": "FULL_FILE", "db_staff_only": false}}, {"pk": 599, "model": "help.helpentry", "fields": {"db_entrytext": "FULL_MOTD_MESSAGE\n\n  CONFIG PARAMETER: full_motd_message <message>\n  DEFAULT: blank\n\n  Sets the message that is displayed when a player attempts to connect to a\n  non-wizard character when the number of connected players is not less than\n  the number of players allowed by the max_players directive.  This message is\n  displayed in addition to the contents of the full.txt file.\n\n  Related Topics: down_motd_file, max_players.\n\n", "db_key": "FULL_MOTD_MESSAGE", "db_staff_only": false}}, {"pk": 282, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION CLASSES\n\n  Arithmetic:                ABS ADD BAND BNAND BOR BXOR CEIL CRC32 DEC DIE\n                             DISTRIBUTE FDIV FLOORDIV FMOD IABS IADD IDIV IMUL\n                             INC ISIGN ISUB MOD MUL PACK POWER RAND REMAINDER\n                             SHA1 SHL SHR SIGN SUB SUCCESSES SQRT UNPACK\n\n  Comsystem Information:     CHANNELS CHANOBJ COMALIAS COMTITLE CWHO\n\n  Database Information:      EXIT INZONE LOC LOCATE LROOMS MAIL MAILJ MAILFROM\n                             MAILSIZE MAILSUBJ NEARBY NEXT NUM RLOC ROOM\n                             SEARCH STATS VALID WHERE ZFUN ZONE ZWHO\n\n  Floating Point Conversion: FLOOR ROUND TRUNC\n\n  Game Information:          CONFIG DUMPING MOTD MUDNAME POLL RESTARTS VERSION\n\n{ 'help function classes2' for more }\n\n", "db_key": "FUNCTION CLASSES", "db_staff_only": false}}, {"pk": 283, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION CLASSES (continued)\n\n  Lists:                     CHOOSE COLUMNS EXTRACT ELEMENTS FOREACH FILTER\n                             FILTERBOOL FIRST FOLD ILEV INDEX INSERT ITEMIZE\n                             ITER LADD LAST LDELETE LIST LNUM LRAND MAP MATCH\n                             MATCHALL MEMBER MIX MUNGE PARSE PICKRAND REMOVE\n                             REST REVWORDS SETDIFF SETINTER SETUNION SHUFFLE\n                             SORT SORTBY SPLICE STEP TABLE WORDS\n\n  Logarithms:                E EXP LOG LN\n\n  Logical:                   AND ANDBOOL CAND CANDBOOL COR CORBOOL LAND LOR\n                             NOT OR ORBOOL T XOR\n\n  Miscellaneous:             @@ ANSI ART BEEP ERROR FCOUNT ISDBREF ISINT ISNUM\n                             ISRAT ISWORD LIT NULL R SETQ SETR SUBEVAL\n                             TEXT TEXTFILE\n\n{ 'help function classes3' for more }\n\n", "db_key": "FUNCTION CLASSES2", "db_staff_only": false}}, {"pk": 284, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION CLASSES (continued)\n\n  Object Information:        ANDFLAGS APOSS ATTRCNT BITTYPE CHILDREN CMDS CON\n                             CONTROLS CTIME DEFAULT EDEFAULT ELOCK ENTRANCES\n                             EVAL FLAGS FULLNAME GET GET_EVAL GREP GREPI\n                             HASATTR HASATTRP HASFLAG HASPOWER HASTYPE HOME\n                             LATTR LATTRCMDS LATTRP LCMDS LCON LEXITS LFLAGS\n                             LPARENT LOCALIZE LOCK MONEY MONIKER MTIME NAME\n                             OBJ OBJEVAL OBJMEM ORFLAGS OWNER PARENT PFIND\n                             PMATCH POSS POWERS S SUBJ TYPE U UDEFAULT ULOCAL\n                             V VISIBLE XGET\n\n  Player Information:        CONN CONNLAST CONNLEFT CONNMAX CONNNUM CONNRECORD\n                             CONNTOTAL DOING FINDABLE HASQUOTA HEIGHT HOST\n                             IDLE LWHO LPORTS PLAYMEM PORTS WIDTH\n\n  Relational:                EQ GT GTE LT LTE MAX MIN NEQ\n\n  Side-Effect Functions:     CREATE DESTROY EMIT LINK OEMIT PEMIT REMIT SET\n                             SETNAME SETPARENT TEL TRIGGER\n\n  SQL:                       RSERROR RSNEXT RSPREV RSRELEASE RSREC RSRECNEXT\n                             RSRECPREV RSROWS SQL\n\n{ 'help function classes4' for more }\n\n", "db_key": "FUNCTION CLASSES3", "db_staff_only": false}}, {"pk": 285, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION CLASSES (continued)\n\n  Strings:                   ACCENT AFTER ALPHAMAX ALPHAMIN BEFORE CAPSTR CASE\n                             CAT CENTER CHR COMP CPAD DECRYPT DELETE EDIT\n                             ENCRYPT ESCAPE GRAB GRABALL IF IFELSE LCSTR LJUST\n                             LPAD LPOS MERGE MID ORD POS REGMATCH REGMATCHI\n                             REGRAB REGRABALL REGRABALLI REGRABI REPEAT REPLACE\n                             REVERSE RIGHT RJUST ROMAN RPAD SCRAMBLE SECURE\n                             SPACE SPELLNUM SQUISH STRCAT STRIP STRIPACCENTS\n                             STRIPANSI STRLEN STRMATCH STRMEM STRTRUNC SWITCH\n                             TR TRANSLATE TRIM UCSTR WORDPOS WRAP\n\n  Time:                      CONVSECS CONVTIME DIGITTIME ETIMEFMT EXPTIME\n                             RESTARTSECS RESTARTTIME SECS SINGLETIME STARTSECS\n                             STARTTIME TIME TIMEFMT WRITETIME\n\n  Trigonometric:             ACOS ASIN ATAN COS CTU DIST2D DIST3D PI SIN TAN\n                             VADD VCROSS VDIM VDOT VMAG VMUL VSUB VUNIT\n\n  WOD Realms (optional):     CANSEE\n\n  Reality Levels (optional): HASRXLEVEL HASTXLEVEL LISTRLEVELS RXLEVEL\n                             TXLEVEL\n\n", "db_key": "FUNCTION CLASSES4", "db_staff_only": false}}, {"pk": 286, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION LIST\n\n  Help is available for the following functions:\n\n    @@()        ABS()       ACCENT()    ACOS()      ADD()       AFTER()\n    ALPHAMAX()  ALPHAMIN()  AND()       ANDBOOL()   ANDFLAGS()  ANSI()\n    APOSS()     ART()       ASIN()      ATAN()      ATTRCNT()   BAND()\n    BEEP()      BEFORE()    BITTYPE()   BNAND()     BOR()       BXOR()\n    CAND()      CANDBOOL()  CANSEE()    CAPSTR()    CASE()      CAT()\n    CEIL()      CENTER()    CHANNELS()  CHANOBJ()   CHILDREN()  CHOOSE()\n    CHR()       CMDS()      COLUMNS()   COMALIAS()  COMP()      COMTITLE()\n    CON()       CONFIG()    CONN()      CONNLAST()  CONNLEFT()  CONNMAX()\n    CONNNUM()   CONNRECORD()CONNTOTAL() CONTROLS()  CONVSECS()  CONVTIME()\n    COR()       CORBOOL()   COS()       CPAD()      CRC32()     CREATE()\n    CTIME()     CTU()       CWHO()      DEC()       DECRYPT()   DEFAULT()\n    DELETE()    DESTROY()   DIE()       DIGITTIME() DIST2D()    DIST3D()\n    DISTRIBUTE()DOING()     DUMPING()   E()         EDEFAULT()  EDIT()\n    ELEMENTS()  ELOCK()     EMIT()      ENCRYPT()   ENTRANCES() EQ()\n    ERROR()     ESCAPE()    ETIMEFMT()  EVAL()      EXIT()      EXP()\n    EXPTIME()   EXTRACT()   FCOUNT()    FDEPTH()    FDIV()      FILTER()\n    FILTERBOOL()FINDABLE()  FIRST()     FLAGS()     FLOOR()     FLOORDIV()\n    FMOD()      FOLD()      FOREACH()   FULLNAME()\n\n(\"help function list2\" for more)\n\n", "db_key": "FUNCTION LIST", "db_staff_only": false}}, {"pk": 287, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION LIST (continued)\n\n    GET()       GET_EVAL()  GRAB()      GRABALL()   GREP()      GREPI()\n    GT()        GTE()       HASATTR()   HASATTRP()  HASFLAG()   HASPOWER()\n    HASQUOTA()  HASRXLEVEL()HASTXLEVEL()HASTYPE()   HEIGHT()    HOME()\n    HOST()      IABS()      IADD()      IDIV()      IDLE()      IF()\n    IFELSE()    ILEV()      IMUL()      INC()       INDEX()     INSERT()\n    INZONE()    ISDBREF()   ISIGN()     ISINT()     ISNUM()     ISRAT()\n    ISUB()      ISWORD()    ITEMIZE()   ITER()      LADD()      LAND()\n    LAST()      LASTCREATE()LATTR()     LATTRCMDS() LATTRP()    LCMDS()\n    LCON()      LCSTR()     LDELETE()   LEXITS()    LFLAGS()    LINK()\n    LIST()      LISTRLEVELS() LIT()     LJUST()     LN()        LNUM()\n    LOC()       LOCALIZE()  LOCATE()    LOCK()      LOG()       LOR()\n    LPAD()      LPARENT()   LPORTS()    LPOS()      LRAND()     LROOMS()\n    LT()        LTE()       LWHO()      MAIL()      MAILFROM()  MAILSIZE()\n    MAILJ()     MAILSUBJ()  MAP()       MATCH()     MATCHALL()  MAX()\n    MEMBER()    MERGE()     MID()       MIN()       MIX()       MOD()\n    MONEY()     MONIKER()   MOTD()      MTIME()     MUDNAME()   MUL()\n    MUNGE()     NAME()      NEARBY()    NEQ()       NEXT()      NOT()\n    NULL()      NUM()       OBJ()       OBJEVAL()   OBJMEM()    OEMIT()\n    OR()        ORBOOL()    ORD()       ORFLAGS()\n\n(\"help function list3\" for more)\n\n", "db_key": "FUNCTION LIST2", "db_staff_only": false}}, {"pk": 288, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION LIST (continued)\n\n    OWNER()     PACK()      PARENT()    PARSE()     PEMIT()     PFIND()\n    PI()        PICKRAND()  PLAYMEM()   PMATCH()    POLL()      PORTS()\n    POS()       POSS()      POWER()     POWERS()    R()         RAND()\n    REGMATCH()  REGMATCHI() REGRAB()    REGRABALL() REGRABALLI()REGRABI()\n    REMAINDER() REMIT()     REMOVE()    REPEAT()    REPLACE()   REST()\n    RESTARTS()  RESTARTSECS()           RESTARTTIME()           REVERSE()\n    REVWORDS()  RIGHT()     RJUST()     RLOC()      ROMAN()     ROOM()\n    ROUND()     RPAD()      RXLEVEL()   S()         SCRAMBLE()  SEARCH()\n    SECS()      SECURE()    SET()       SETDIFF()   SETINTER()  SETNAME()\n    SETPARENT() SETQ()      SETR()      SETUNION()  SHA1()      SHL()\n    SHR()       SHUFFLE()   SIGN()      SIN()       SINGLETIME()\n    SORT()      SORTBY()    SPACE()     SPELLNUM()  SPLICE()    SQL()\n    SQRT()      SQUISH()    STARTSECS() STARTTIME() STATS()     STEP()\n    STRCAT()    STRIP()     STRIPACCENTS()          STRIPANSI() STRLEN()\n    STRMATCH()  STRMEM()    STRTRUNC()  SUB()       SUBEVAL()   SUBJ()\n    SUCCESSES() SWITCH()    T()         TABLE()     TAN()       TEL()\n    TERMINFO()  TEXT()      TEXTFILE()  TIME()      TIMEFMT()   TRANSLATE()\n    TR()        TRIGGER()   TRIM()      TRUNC()     TXLEVEL()   TYPE()\n    U()         UCSTR()     UDEFAULT()  ULOCAL()    UNPACK()    V()\n    VADD()      VALID()     VCROSS()    VDIM()      VDOT()      VERSION()\n    VISIBLE()   VMAG()      VMUL()      VSUB()      VUNIT()     WHERE()\n    WIDTH()     WIPE()      WORDPOS()   WORDS()     WRAP()      WRITETIME()\n    XGET()      XOR()       ZFUN()      ZONE()      ZWHO()\n\n", "db_key": "FUNCTION LIST3", "db_staff_only": false}}, {"pk": 289, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTIONS\n\n  Functions are specialized commands used to manipulate strings and other\n  input. The format for a function is of this form: [fun-name(<input>)]\n  Although usually the []'s indicate an input that is optional, in this case\n  they are necessary and tell the MUX that this is a function, although\n  nested functions (like [first(rest(This is a nice day))] returns 'is') do\n  not require more than one pair of []'s.  Nested brackets may be used when\n  it is necessary to insert a function call in the middle of an argument,\n  like [get(me/[get(me/vz)])], which returns the contents of the attribute\n  named in the VZ attribute.\n\n  For help on a particular function, type 'help <function name>'.  You may\n  need to include the parentheses with the function name, ie.\n  'help <function name>()'.  Type 'help function list' or '@list functions'\n  for a list of the available functions.  'help function classes' will show\n  a list of the functions broken down into classes.\n\n  Related Topics: @list functions, FUNCTION CLASSES, FUNCTION LIST.\n\n", "db_key": "FUNCTIONS", "db_staff_only": false}}, {"pk": 600, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION_ACCESS\n\n  CONFIG PARAMETER: function_access <function> [!]<priv> [[!]<priv>]...\n\n  Changes the privileges needed to call the MUX function <function>.\n  If you do not have permission to call a function, the function\n  returns the value \"#-1 PERMISSION DENIED\" instead of the value it\n  would normally return.\n\n  Related Topics: @list functions, FUNCTION LIST, PERMISSIONS.\n\n", "db_key": "FUNCTION_ACCESS", "db_staff_only": false}}, {"pk": 601, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION_ALIAS\n\n  CONFIG PARAMETER: function_alias <alias> <funcname>\n\n  Defines <alias> as a synonym for the function <funcname>.\n\n  Related Topics: alias, flag_alias, function_name.\n\n", "db_key": "FUNCTION_ALIAS", "db_staff_only": false}}, {"pk": 603, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION_INVOCATION_LIMIT\n\n  CONFIG PARAMETER: function_invocation_limit <num>\n  DEFAULT: 2500\n\n  This directive sets the maximum number of times that a command may make\n  function calls.  If the invocation limit is exceeded, the string\n  '#-1 FUNCTION INVOCATION LIMIT EXCEEDED' is returned.  This limit is\n  intended to prevent long hangs from creative uses of u() and iter().\n  Note: @search is treated specially, each object examined with the\n  eval=<arg> parameter is treated as a separate command for the purposes\n  of the function invocation limit.\n\n", "db_key": "FUNCTION_INVOCATION_LIMIT", "db_staff_only": false}}, {"pk": 602, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION_NAME\n  CONFIG PARAMETER: function_name <oldname> <newname>\n\n  Renames function <oldname> to <newname>.\n\n  Related Topics: function_alias\n\n", "db_key": "FUNCTION_NAME", "db_staff_only": false}}, {"pk": 604, "model": "help.helpentry", "fields": {"db_entrytext": "FUNCTION_RECURSION_LIMIT\n\n  CONFIG PARAMETER: function_recursion_limit <num>\n  DEFAULT: 50\n\n  This directive sets the maximum number of nested function calls that\n  may be made before the function call is aborted and the string\n  '#-1 FUNCTION RECURSION LIMIT EXCEEDED' is returned.  Normally this is not\n  a problem, but the u() function can be used to cause infinite recursion\n  (unless blocked by a recursion limit)\n\n", "db_key": "FUNCTION_RECURSION_LIMIT", "db_staff_only": false}}, {"pk": 290, "model": "help.helpentry", "fields": {"db_entrytext": "GAGGED\n\n  FLAG: GAGGED(j)  ()\n\n  When a player is set GAGGED, they cannot speak or pose under any\n  circumstances. This flag has no meaning for objects, exits, or rooms.\n\n  Related Topics:\n\n", "db_key": "GAGGED", "db_staff_only": false}}, {"pk": 605, "model": "help.helpentry", "fields": {"db_entrytext": "GAME_DIR_FILE\n\n  CONFIG PARAMETER: game_dir_file <path>\n\n  This configuration option specifies the file name of the 'directory' portion\n  of the CHashFile attribute database. If this file is deleted, CHashFile will\n  automatically re-created it.\n\n  It is read into memory at startup and re-written during page splits in the\n  'pages' portion of the database.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: game_pag_file\n\n", "db_key": "GAME_DIR_FILE", "db_staff_only": false}}, {"pk": 606, "model": "help.helpentry", "fields": {"db_entrytext": "GAME_PAG_FILE\n\n  CONFIG PARAMETER: game_pag_file <path>\n\n  This configuration option specifies the file name of the 'pages' portion of\n  the CHashFile attribute database. Unlike the 'directory' portion, this\n  portion cannot be replaced. Attribute values themselves are stored in this\n  file.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: game_dir_file\n\n", "db_key": "GAME_PAG_FILE", "db_staff_only": false}}, {"pk": 607, "model": "help.helpentry", "fields": {"db_entrytext": "GDBM_DATABASE\n\n  CONFIG PARAMETER: gdbm_database <path>\n\n  MUX 2.0 maintains a database in a different way. This configuration\n  option is obsolete.\n\n  Related Topics: game_dir_file, game_pag_file\n\n", "db_key": "GDBM_DATABASE", "db_staff_only": false}}, {"pk": 291, "model": "help.helpentry", "fields": {"db_entrytext": "GENDER\n\n  A player's (virtual) gender is specified in the Sex attribute.  This\n  attribute controls how gender-specific pronoun substitutions are evaluated\n  for the player.  If the player's Sex attribute starts with an 'M' or an 'm'\n  then the player is assumed to be male,  'F', 'f', 'W', and 'w' indicate\n  female, and anything else indicates neuter.\n\n  Related Topics: SUBSTITUTIONS.\n\n", "db_key": "GENDER", "db_staff_only": false}}, {"pk": 292, "model": "help.helpentry", "fields": {"db_entrytext": "GET\n\n  COMMAND: get[/<switch>] <object>\n           get[/<switch>] <exit>\n           get[/<switch>] <object>'s <sub-object>\n\n  The first form picks up <object> from your location and adds it to your\n  inventory.  It will fail if the object is locked against you, or if you\n  are inside a player or object that you don't control and which isn't\n  set ENTER_OK.\n\n  The second form takes an exit from your location and adds it to you.\n  Anyone inside you may then use the exit to travel to the exit's destination.\n  You may take exits that you own, and exits owned by others in locations that\n  you own.\n\n  The third form takes <sub-object> from <object> and adds it to your\n  inventory.  <object> must be ENTER_OK and <sub-object> must not be locked\n  against you for this to work.  The lock on <object> is not checked.\n\n{ 'help get2' for more }\n\n", "db_key": "GET", "db_staff_only": false}}, {"pk": 293, "model": "help.helpentry", "fields": {"db_entrytext": "GET (continued)\n\n  The following switch is recognized:\n\n     /quiet   - Don't perform the @osucc/@asucc or @ofail/@afail attributes\n                on the target object.  This switch only works if you control\n                the object.\n\n  <object> and <sub-object> may be either players or things.\n  'take' is the same as 'get'.\n\n  Related Topics: drop, @afail, @asucc, @fail, @ofail, @osucc, @succ,\n      ENTER_OK, FAILURE, SUCCESS.\n\n", "db_key": "GET2", "db_staff_only": false}}, {"pk": 294, "model": "help.helpentry", "fields": {"db_entrytext": "GIVE\n\n  COMMAND: give <player>=<amount/object>\n\n  Gives player the specified amount of money or <object>.  You can't give\n  someone money if their new total would be greater than 10000 (No reason to\n  get greedy).  Giving money requires the giver to pass the player's use @lock\n  because @apay may evaluate.  You may also give players objects, but the\n  other player must be set ENTER_OK to receive something you give.\n\n  Related Topics: @apay, @cost, @opay, @pay, ENTER_OK.\n\n", "db_key": "GIVE", "db_staff_only": false}}, {"pk": 608, "model": "help.helpentry", "fields": {"db_entrytext": "GLOBAL_ERROR_OBJ\n\n  CONFIG PARAMETER: global_error_obj <dbref>\n  DEFAULT: -1\n\n  Specifies the object that it looks for, to evaluate an attribute\n  whenever a 'Huh? (Type 'help' for help)' would have shown up.\n  The attribute is the VA attribute (settable by @va or &va), and\n  will evaluate like you would in a @pemit, think, or other command.\n  The enactor is %#, though it is evaluated by the object itself.\n  This _CAN_ be a security risk if not done properly, but is done\n  that way on purpose.  The string they typed will be passed as %0.\n  It will be unevaluated and 'as-is'.\n\n  Why the VA attribute?  Why not?  I felt it was being all alone\n  and left out of the fun ;)\n\n  Original code and helpfile from RhostMUSH. Used with permission.\n\n  Example:\n    > @admin global_error_obj=10\n    Set.\n    > @va #10=[pemit(%#,You typed '%0')]\n    Set.\n    > @pemit me=Test\n    Test\n    > @pmit me=Test\n    You typed '@pmit me=Test'\n\n  Related Topics:\n\n", "db_key": "GLOBAL_ERROR_OBJ", "db_staff_only": false}}, {"pk": 295, "model": "help.helpentry", "fields": {"db_entrytext": "GOALS\n\n  There is no ultimate goal to this game, except to have fun.  There are\n  objects and places to build, puzzles to solve, scenery to visit, and people\n  to meet. There are no winners or losers, only fellow players.  Enjoy.\n\n", "db_key": "GOALS", "db_staff_only": false}}, {"pk": 296, "model": "help.helpentry", "fields": {"db_entrytext": "GOING\n\n  FLAG: GOING(G)  ()\n\n  Used internally for the @destroy command, it is set on objects that are set\n  to be destroyed.  In the event that a player decides before the next @dbck\n  to spare the object from destruction, they can accomplish this by reseting\n  the object's GOING flag.\n\n  Related Topics: @destroy, @dbck (in wizhelp).\n\n", "db_key": "GOING", "db_staff_only": false}}, {"pk": 609, "model": "help.helpentry", "fields": {"db_entrytext": "GOOD_NAME\n\n  CONFIG PARAMETER: good_name <name>\n\n  Removes <name> from the list of names that may not be used as a player\n  name, reversing the effect of a bad_name directive.  The name must match\n  exactly (wildcard matching is not performed).\n\n", "db_key": "GOOD_NAME", "db_staff_only": false}}, {"pk": 297, "model": "help.helpentry", "fields": {"db_entrytext": "GOTO\n\n  COMMAND: goto[/<switch>] <direction>\n           goto[/<switch>] home\n           <direction>\n           home\n\n  Moves you in the specified direction, assuming that the direction is not\n  locked against you.  'move home' is a special command that returns you to\n  your home. The word 'move' may be omitted.\n\n  The following switch is recognized:\n\n     /quiet   - Don't perform the @osucc/@asucc/@odrop/@adrop or @ofail/@afail\n                attributes on the exit being used.  This switch only works if\n                you control the exit.\n\n  'move' is the same as 'goto'.\n\n  Related Topics: enter, home, leave\n\n", "db_key": "GOTO", "db_staff_only": false}}, {"pk": 610, "model": "help.helpentry", "fields": {"db_entrytext": "GUESTS_CHANNEL\n\n  CONFIG PARAMETER: guests_channel <name>\n  DEFAULT: Guests\n\n  Specifies the name of the channel that guests join when they connect. You\n  must have created the channel already. To disable this feature, simply set\n  this parameter to nothing.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guests_channel_alias, public_channel, public_channel_alias\n\n", "db_key": "GUESTS_CHANNEL", "db_staff_only": false}}, {"pk": 611, "model": "help.helpentry", "fields": {"db_entrytext": "GUESTS_CHANNEL_ALIAS\n\n  CONFIG PARAMETER: guests_channel_alias <name>\n  DEFAULT: g\n\n  Specifies the name of the channel alias that guests are assigned when they\n  connect.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guests_channel_alias, public_channel, public_channel_alias\n\n", "db_key": "GUESTS_CHANNEL_ALIAS", "db_staff_only": false}}, {"pk": 612, "model": "help.helpentry", "fields": {"db_entrytext": "GUEST_CHAR_NUM\n\n  CONFIG PARAMETER: guest_char_num <number>\n  DEFAULT: (none)\n\n  Indicates the database reference number of the guest character.  If set,\n  the specified guest character is subject to additional restrictions (such\n  as not being allowed to create or destroy objects).  The actual\n  restrictions can be changed with the access config parameter using the\n  no_guest permission.\n\n  This configuration parameter is the main on/off switch for the MUX guest\n  system, so in that respect it corresponds to the have_comsys and have_mailer\n  configuration options.  The guest system in MUX is effectively disabled\n  until this configuration parameter is set.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guest_prefix, guest_nuker, number_guests, access,\n                  min_guests, guest_site.\n\n", "db_key": "GUEST_CHAR_NUM", "db_staff_only": false}}, {"pk": 613, "model": "help.helpentry", "fields": {"db_entrytext": "GUEST_FILE\n\n  CONFIG PARAMETER: guest_file <path>\n  DEFAULT: text/guest.txt\n\n  Specifies the file that is to be shown to people connecting to the\n  guest character in place of the motd file.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guest_char_num.\n\n", "db_key": "GUEST_FILE", "db_staff_only": false}}, {"pk": 614, "model": "help.helpentry", "fields": {"db_entrytext": "GUEST_NUKER\n\n  CONFIG PARAMETER: guest_nuker <num>\n  DEFAULT: 1\n\n  Specifies who is to nuke guests when they log off. If it is not a good\n  object or a wizard, it defaults to #1.\n\n  Related Topics: guest_char_num, guest_prefix, number_guests, min_guests,\n                  guest_site.\n\n", "db_key": "GUEST_NUKER", "db_staff_only": false}}, {"pk": 615, "model": "help.helpentry", "fields": {"db_entrytext": "GUEST_PREFIX\n\n  CONFIG PARAMETER: guest_prefix <name>\n  DEFAULT: Guest\n\n  Specifies the prefix for all guests. This will be what is put before the #\n  when the guest is created. This will also be what is used to connect to\n  the guests on your system.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guest_char_num, number_guests, min_guests, guest_site.\n\n", "db_key": "GUEST_PREFIX", "db_staff_only": false}}, {"pk": 616, "model": "help.helpentry", "fields": {"db_entrytext": "GUEST_SITE\n\n  CONFIG PARAMETER: guest_site <site>\n\n  Indicates that connections to guests from this site should be rejected.\n  Players will be able to connect normally and create if set.\n\n  Related Topics: badsite_file, permit_site, register_site, forbid_site,\n                  SITE LISTS, SITE NOTATION,\n                  allow_guest_from_registered_site.\n\n", "db_key": "GUEST_SITE", "db_staff_only": false}}, {"pk": 298, "model": "help.helpentry", "fields": {"db_entrytext": "HALTED\n\n  FLAG: HALTED(h)  ()\n\n  While this flag is set, the object cannot perform any MUX\n  actions, listen, be triggered, etc.\n\n  Related Topics:\n\n", "db_key": "HALTED", "db_staff_only": false}}, {"pk": 299, "model": "help.helpentry", "fields": {"db_entrytext": "HAVEN\n\n  FLAG: HAVEN(H)  ()\n\n  @set here=haven;@set me=haven. If a location is HAVEN, you\n  cannot kill in that location.  The HAVEN flag no longer blocks pages or\n  @pemits, use @lock/page instead.\n\n  Related Topics: @lock/page.\n\n", "db_key": "HAVEN", "db_staff_only": false}}, {"pk": 617, "model": "help.helpentry", "fields": {"db_entrytext": "HAVE_COMSYS\n\n  CONFIG PARAMETER: have_comsys <yes/no>\n  DEFAULT: yes\n\n  Specifies whether or not the comsystem should be active.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: comsys_database.\n\n", "db_key": "HAVE_COMSYS", "db_staff_only": false}}, {"pk": 618, "model": "help.helpentry", "fields": {"db_entrytext": "HAVE_MAILER\n\n  CONFIG PARAMETER: have_mailer <yes/no>\n  DEFAULT: yes\n\n  Specifies whether @mail and mail aliases should be active.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: mail_database\n\n", "db_key": "HAVE_MAILER", "db_staff_only": false}}, {"pk": 619, "model": "help.helpentry", "fields": {"db_entrytext": "HAVE_ZONES\n\n  CONFIG PARAMETER: have_zones <yes/no>\n  DEFAULT: yes\n\n  Specifies whether zones should be active. If this is off, zone connects\n  and disconnects, zone commands, and the control aspects will all be\n  disabled.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n", "db_key": "HAVE_ZONES", "db_staff_only": false}}, {"pk": 300, "model": "help.helpentry", "fields": {"db_entrytext": "HEAD\n\n  FLAG: HEAD(?)  ()\n\n  This is another marker flag, for faction heads and the like. As\n  with STAFF, no powers come with it, it is purely a marker.\n\n  Related Topics:\n\n", "db_key": "HEAD", "db_staff_only": false}}, {"pk": 621, "model": "help.helpentry", "fields": {"db_entrytext": "HELPFILE\n\n  CONFIG PARAMETER: helpfile <command> <pathname>\n  DEFAULT: None\n\n  This configuration directive associates the in-game command, <command>, with\n  a set of help topics contained in the file <pathname>.txt.  By default,\n  <command> has 'public' permissions, but this can be further restricted with\n  the 'access' configuration directive.\n\n  The associated <command> will have one of the following forms:\n\n    <command> <topic>\n    <command> <topic wildcard pattern>\n\n  Unlike raw_helpfile, the associated helpfile <command> evaluates the <topic>\n  before giving the result to the player.  To avoid this evaluation, use the\n  raw_helpfile configuration directive instead.\n\n  The default configuration file contains the following lines already, but\n  the base server does not setup any help files (including help, wizhelp, or\n  news).  Therefore, make sure that your older configuration files contain\n  at least the following lines:\n\n    raw_helpfile help text/help\n    raw_helpfile wizhelp text/wizhelp\n    access wizhelp wizard\n\n  Also, in order for the help aliases in alias.conf to be setup properly,\n  the three above lines must occur before alias.conf is included.\n\n  To prevent access to arbitrary files after the server has started, this\n  configuration directive cannot be used by via @admin after the server has\n  started.\n\n  Examples:\n     helpfile wiznews text/wiznews\n     access wiznews wizard\n\n  Related Topics: access, raw_helpfile\n\n", "db_key": "HELPFILE", "db_staff_only": false}}, {"pk": 620, "model": "help.helpentry", "fields": {"db_entrytext": "HELP_EXECUTOR\n\n  CONFIG PARAMETER: help_executor <dbref>\n  DEFAULT: -1 (NOTHING)\n\n  Specifies the executor for evaluation of text displayed for commands set by\n  the helpfile configuration option.  By default, the executor is the enacting\n  object.\n\n  Related Topics: helpfile\n\n", "db_key": "HELP_EXECUTOR", "db_staff_only": false}}, {"pk": 301, "model": "help.helpentry", "fields": {"db_entrytext": "HERE\n\n  The word 'here' refers to the room you are in (if you are inside an object,\n  it refers to the object that you are in, not the room that the object is\n  in).  For example, to rename the room you are in (if you control it), you\n  could enter '@name here= <new name>'.\n\n", "db_key": "HERE", "db_staff_only": false}}, {"pk": 302, "model": "help.helpentry", "fields": {"db_entrytext": "HOMES\n\n  Every thing or player has a home.  This is where players when they go home,\n  or things with the STICKY flag set go when dropped.  Homes are set with the\n  @link command. A thing's home defaults to the room where it was created, if\n  you control that room, or your home. You can link an exit to send players\n  home with '@link <dir>=home'.  Drop-tos can also be set to 'home'.\n\n  Related Topics: @link, DROP-TO, STICKY.\n\n", "db_key": "HOMES", "db_staff_only": false}}, {"pk": 622, "model": "help.helpentry", "fields": {"db_entrytext": "HOOK SETUP\n\n  Hooks are set up by following the shown methods.\n  1)  You must first create and setup a hook object to store the data.\n      Once you have @created the object, the object needs to be defined\n      with the 'HOOK_OBJ' admin parameter.  This may be placed in the\n      .conf file or done via @admin.\n\n  2)  You must set up hooks for the commands/attributes you wish to use.\n      The hooks are 'permit', 'ignore', 'before', 'after', and 'igswitch'.\n      See wizhelp on 'hook_cmd' on more info of these switchtypes.\n      You may use the @hook command, or use the hook_cmd admin parameter\n      to place in a .conf file.\n\n  3)  The PERMIT and IGNORE config params are 'enabled' if they return\n      anything but a 'NULL' or a '1'.\n\n  4)  The IGSWITCH config parameter is a toggle only.\n\n  5)  The BEFORE and AFTER switches are automatically processed if existing.\n\n  6)  The following attributes on the global hook object (hook_obj) exist:\n         I_<command> - ignore            P_<command> - permit\n         A_<command> - after             B_<command> - before\n\n{ see 'wizhelp hook setup2' for examples }\n\n", "db_key": "HOOK SETUP", "db_staff_only": false}}, {"pk": 623, "model": "help.helpentry", "fields": {"db_entrytext": "HOOK SETUP (continued)\n\n  > @create HookObject\n  HookObject created as object #1234\n  > &a_look #1234=[pemit(%#,-- After The Look --)]\n  > &b_look #1234=[pemit(%#,-- Before The Look --)]\n  > &i_look #1234=[gt(match(v(is-ignored),%#),0)]\n  > &p_look #1234=[gt(match(v(is-forbidden),%#),0)]\n  > &is-ignored #1234=#5 #8 #9 #12   (this gets 'Huh? (type 'help' for help)')\n  > &is-forbidden #1234=#6 #10 #15   (this gets 'Permission denied.')\n\n  Now you can do one of two things:\n  > @hook/before look\n  > @hook/after look\n  > @hook/ignore look\n  > @hook/permit look\n  OR...\n  > @admin hook_cmd look before after ignore permit\n\n  There, your hook object is all set up.  If you want it to last through\n  reboots, you need to either put the @hook's in a @startup, or add the\n  hook_cmd to the .conf file.  You probably want the hook_cmd :)\n\n  Related Topics: @hook, hook_cmd, hook_obj.\n\n", "db_key": "HOOK SETUP2", "db_staff_only": false}}, {"pk": 624, "model": "help.helpentry", "fields": {"db_entrytext": "HOOK_CMD\n\n  CONFIG PARAMETER: hook_cmd <command> <hooks/!hooks>\n\n  This admin parameter allows you to specify multiple hooks for commands\n  or attributes in the .conf file or online via @admin.  This is an\n  alternative way to applying hooks besides the @hook command.\n\n  The following hooks exist:\n\n    - before      set up functionality BEFORE a command executes.\n    - after       set up functionality AFTER a command executes.\n    - permit      establish functionary lock of attribute/command.\n    - ignore      establish ignore inheritance of attribute/command.\n    - igswitch    specifies if command bypasses failed /switch notices.\n\n  For detailed information on how to set up hooks, please see wizhelp on:\n  hook setup.\n\n  Related Topics: @hook, hook_obj, hook setup.\n\n", "db_key": "HOOK_CMD", "db_staff_only": false}}, {"pk": 625, "model": "help.helpentry", "fields": {"db_entrytext": "HOOK_OBJ\n\n  CONFIG PARAMETER: hook_obj <dbref>\n  Default: (none)\n\n  Specifies the valid dbref# that the hook information is stored.  All\n  hooks are in the form <prefix>_<command/attribute>.\n\n  Attributes are stored in the form:\n\n      I_<command> - ignore configuration\n      P_<command> - permit configuration\n      A_<command> - after configuration\n      B_<command> - before configuration\n\n  For detailed information on how to set up hooks, please see wizhelp on:\n  hook setup.\n\n  Related Topics: @hook, hook_cmd, hook setup.\n\n", "db_key": "HOOK_OBJ", "db_staff_only": false}}, {"pk": 626, "model": "help.helpentry", "fields": {"db_entrytext": "HOSTNAMES\n\n  CONFIG PARAMETER: hostnames <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not IP addresses should be replaced with host names\n  where possible in the log file and wizard WHO report.\n\n", "db_key": "HOSTNAMES", "db_staff_only": false}}, {"pk": 303, "model": "help.helpentry", "fields": {"db_entrytext": "HSS\n\n  The HSS flag denotes someone who can see through certain levels of\n  invisibility. They must have the HSS_LEVEL attribute set. If they have\n  this flag and attribute set they will see anyone with a lower OBF_LEVEL\n  then their HSS_LEVEL attribute, they will also see the OBFDESC if it\n  is present, showing the invisible character's true appearance. However,\n  if HSS_LEVEL is equal to OBF_LEVEL then there is a random chance that\n  they will see through the invisibility.\n\n  Related Topics: OBF\n\n", "db_key": "HSS", "db_staff_only": false}}, {"pk": 304, "model": "help.helpentry", "fields": {"db_entrytext": "HTML\n\n  FLAG: HTML(()  ()\n\n  This flag is normally set as part a negotiation with any Pueblo-aware\n  client.  It causes certain HTML-esque tags to be added around certain kinds\n  of output.  A Pueblo-aware client recognizes these tags and changes the\n  appearance of the intervening text accordingly.\n\n  Related Topics: PUEBLO, @htdesc\n\n\n", "db_key": "HTML", "db_staff_only": false}}, {"pk": 627, "model": "help.helpentry", "fields": {"db_entrytext": "IDLE_INTERVAL\n\n  CONFIG PARAMETER: idle_interval <secs>\n  DEFAULT: 60\n\n  Sets the interval between checks for idle users.\n\n  Related Topics: conn_timeout, idle_timeout.\n\n", "db_key": "IDLE_INTERVAL", "db_staff_only": false}}, {"pk": 628, "model": "help.helpentry", "fields": {"db_entrytext": "IDLE_TIMEOUT\n\n  CONFIG PARAMETER: idle_timeout <secs>\n  DEFAULT: 3600 (one hour)\n\n  If greater than zero, this parameter determines the amount of time that a\n  player may remain idle before being automatically disconnected.  Idle\n  players by this measure are disconnected when the next check for idle\n  players is done.\n\n  If zero or negative, this parameter effectively disables idleness-based\n  connection timeouts.\n\n  Related Topics: conn_timeout, idle_interval.\n\n", "db_key": "IDLE_TIMEOUT", "db_staff_only": false}}, {"pk": 629, "model": "help.helpentry", "fields": {"db_entrytext": "IDLE_WIZ_DARK\n\n  CONFIG PARAMETER: idle_wiz_dark <yes/no>\n  DEFAULT: no\n\n  Indicates whether or not wizards or players with the idle power who are\n  idle for longer than the default timeout value are to automatically be\n  set DARK, and then unDARKed when they type in their next command. Wizards\n  already set DARK are not automatically unDARKed. Any player who is set\n  dark by this action will have a 'd' instead of a 'D' by their idle time\n  in the privileged WHO listing.\n\n", "db_key": "IDLE_WIZ_DARK", "db_staff_only": false}}, {"pk": 305, "model": "help.helpentry", "fields": {"db_entrytext": "IMMOBILE\n\n  FLAG: IMMOBILE()  (#)\n\n  Objects set IMMOBILE cannot move by any means, including using exits,\n  entering other objects, being picked up or dropped, or by @teleporting.\n\n  This flag is only available with --enable-firanmux.\n\n  Related Topics:\n\n", "db_key": "IMMOBILE", "db_staff_only": false}}, {"pk": 630, "model": "help.helpentry", "fields": {"db_entrytext": "IMMOBILE_MESSAGE\n\n  CONFIG PARAMETER: immobile_message <string>\n  DEFAULT: none\n\n  Specifies the string that is sent to a player when they try to move\n  while their IMMOBILE flag is set.\n\n  This configuration option is only available with --enable-firanmux.\n\n  Related Topics: fixed_home_message, fixed_tel_message.\n\n", "db_key": "IMMOBILE_MESSAGE", "db_staff_only": false}}, {"pk": 306, "model": "help.helpentry", "fields": {"db_entrytext": "IMMORTAL\n\n  FLAG: IMMORTAL(i)  ()\n\n  Objects set immortal cannot be killed and don't use up money.\n  Only settable by wizards.  This is useful when an object's location\n  shouldn't be changed by Joe Player, but you don't want to have to re-link it\n  to its current location whenever it moves.\n\n  Related Topics:\n\n", "db_key": "IMMORTAL", "db_staff_only": false}}, {"pk": 631, "model": "help.helpentry", "fields": {"db_entrytext": "INCLUDE\n\n  CONFIG PARAMETER: include <path>\n  DEFAULT: none\n\n  Reads and processes configuration directives from the named file.\n  This directive is only valid during startup.\n\n", "db_key": "INCLUDE", "db_staff_only": false}}, {"pk": 632, "model": "help.helpentry", "fields": {"db_entrytext": "INDENT_DESC\n\n  CONFIG PARAMETER: indent_desc <yes/no>\n  DEFAULT: no\n\n  Places a blank row before and after every room, object, and exit\n  description when looked at.\n\n", "db_key": "INDENT_DESC", "db_staff_only": false}}, {"pk": 307, "model": "help.helpentry", "fields": {"db_entrytext": "INFO\n\n  COMMAND: info\n\n  Displays detailed version information about the server including\n  the operating system and whether WOD_REALMS is included or not.\n\n  This commands can be used before logging from the welcome screen.\n\n  Example:\n\n    > INFO\n    ### Begin INFO 1.1\n    Name: AnonymousMUX\n    Uptime: Sat Aug 03 13:08:56 2002\n    Connected: 18\n    Size: 231\n    Version: MUX 2.2.1.50 Beta\n    Patches: WOD_REALMS\n    ### End INFO\n\n  Related Topics: QUIT, WHO, version.\n\n", "db_key": "INFO", "db_staff_only": false}}, {"pk": 308, "model": "help.helpentry", "fields": {"db_entrytext": "INHERIT\n\n  FLAG: INHERIT(I)  ()\n\n  Previously, Wizard-owned objects had wizard powers.  This was\n  a problem in many cases, so that behavior has changed.  Now, only Wizard\n  objects or Wizard-owned Inherit-set objects have wizard powers.  Only\n  players can set the Inherit flag, and the Inherit flag is reset during\n  @chown.  If a player is set Inherit, all his stuff is assumed to be\n  inherit, so his objects can control him.  If a player is NOT Inherit,\n  his stuff does NOT control him.  (i.e. cannot @force him.)  This flag\n  is not especially useful for non-wizards.\n\n  Related Topics:\n\n", "db_key": "INHERIT", "db_staff_only": false}}, {"pk": 633, "model": "help.helpentry", "fields": {"db_entrytext": "INHERITANCE\n\n  This topic intentionally left blank.\n\n", "db_key": "INHERITANCE", "db_staff_only": false}}, {"pk": 634, "model": "help.helpentry", "fields": {"db_entrytext": "INITIAL_SIZE\n\n  CONFIG PARAMETER: initial_size <number>\n  DEFAULT: 1000\n\n  This is the number of objects that can be created before the database\n  structure has to be reallocated again. This is needed since MUX allocates\n  space for the database in large chunks, the size of which depends on\n  this parameter.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n", "db_key": "INITIAL_SIZE", "db_staff_only": false}}, {"pk": 635, "model": "help.helpentry", "fields": {"db_entrytext": "INPUT_DATABASE\n\n  CONFIG PARAMETER: input_database\n  DEFAULT: netmux.db\n\n  Specifies the name of the database file that is read in at startup.\n  This file is used only as an input file, the parameter output_database\n  controls where updated copies of the database are written.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: crash_database, output_database\n\n", "db_key": "INPUT_DATABASE", "db_staff_only": false}}, {"pk": 309, "model": "help.helpentry", "fields": {"db_entrytext": "INVENTORY\n\n  COMMAND: inventory\n\n  Lists what you are carrying and how much money you have.\n\n  Related Topics: score.\n\n", "db_key": "INVENTORY", "db_staff_only": false}}, {"pk": 310, "model": "help.helpentry", "fields": {"db_entrytext": "JUMP_OK\n\n  FLAG: JUMP_OK(J)  ()\n\n  When a room or thing is set JUMP_OK, then that location can be teleported\n  into by anyone.\n\n  Related Topics: @teleport\n\n", "db_key": "JUMP_OK", "db_staff_only": false}}, {"pk": 311, "model": "help.helpentry", "fields": {"db_entrytext": "KEEPALIVE\n\n  FLAG: KEEPALIVE(k)  ()\n\n  Only meaningful for players and robots. When set on a player causes the\n  MUX to send non-displaying small packets periodically to stop that player's\n  link timing out over certain types of network hardware.\n\n  Setting this flag is not recommended unless your connection keeps dropping.\n\n  Related Topics:\n\n", "db_key": "KEEPALIVE", "db_staff_only": false}}, {"pk": 312, "model": "help.helpentry", "fields": {"db_entrytext": "KEY\n\n  FLAG: KEY(K)  ()\n\n  When an object (of any type) is KEYed, non-player objects (e.g., puppets)\n  fail any locks that would have been tested.  This could affect many kinds of\n  actions including the ability to pick up, give, enter, or pemit.\n\n  It is equivalent to the following @lock:\n\n    &ISPLAYER obj=hastype(%#,PLAYER)\n    @lock/... obj=ISPLAYER/1\n\n  Because locks are not always tested (e.g., if there is a controlling\n  relationship), and they are not necessarily tested at predictable times,\n  the use of KEY can make softcode difficult to debug.\n\n  Related Topics:\n\n", "db_key": "KEY", "db_staff_only": false}}, {"pk": 313, "model": "help.helpentry", "fields": {"db_entrytext": "KILL\n\n  COMMAND: kill <player> [=<cost>]\n\n  Attempts to kill the specified player. Killing costs <cost> coins, which\n  gives you a <cost>% chance of killing the player. Thus, spending 100\n  coins always works (except against wizards and immortals, who can never be\n  killed). Players cannot be killed in rooms which have been set HAVEN or\n  which they control.  If you don't specify a cost, the default is 10 (for a\n  10% chance of success).  The player, if killed, receives <cost>/2 coins in\n  insurance.\n\n  Related Topics: @akill, @kill, @okill, BEING KILLED, IMMORTAL, WIZARD.\n\n", "db_key": "KILL", "db_staff_only": false}}, {"pk": 636, "model": "help.helpentry", "fields": {"db_entrytext": "KILL_GUARANTEE_COST\n\n  CONFIG PARAMETER: kill_guarantee_cost <amount>\n  DEFAULT: 100\n\n  Specifies the amount of money you have to spend (i.e., kill target =\n  <amount>) to have a 100% chance of killing them (assuming there are no\n  other factors, such as the victim being immortal or in a HAVEN room, etc).\n  The chance of a successful kill is <amount spent> / <kill_guarantee_cost>.\n\n  Related Topics: kill, kill_max_cost, kill_min_cost, HAVEN, IMMORTAL,\n                  KILLING.\n\n", "db_key": "KILL_GUARANTEE_COST", "db_staff_only": false}}, {"pk": 637, "model": "help.helpentry", "fields": {"db_entrytext": "KILL_MAX_COST\n\n  CONFIG PARAMETER: kill_max_cost <amount>\n  DEFAULT: 100\n\n  Specifies the maximum amount of money that may be usefully spent on a kill\n  attempt.  Spending more than this amount does not improve the chance of\n  success.  Setting this parameter to less than the kill_guarantee_cost\n  parameter prevents 'automatic kills', as the kill will always have a chance\n  of failing.\n\n  Related Topics: kill, kill_guarantee_cost, kill_min_cost, HAVEN, IMMORTAL,\n                  KILLING.\n\n", "db_key": "KILL_MAX_COST", "db_staff_only": false}}, {"pk": 638, "model": "help.helpentry", "fields": {"db_entrytext": "KILL_MIN_COST\n\n  CONFIG PARAMETER: kill_min_cost <amount>\n  DEFAULT: 10\n\n  Specifies the minimum (and default) cost for attempting to kill someone or\n  something.\n\n  Related Topics: kill, kill_guarantee_cost, kill_max_cost, HAVEN, IMMORTAL,\n                  KILLING.\n\n", "db_key": "KILL_MIN_COST", "db_staff_only": false}}, {"pk": 639, "model": "help.helpentry", "fields": {"db_entrytext": "LAG_LIMIT\n\n  CONFIG PARAMETER: lag_limit <seconds>\n  DEFAULT: 60.000\n\n  Controls when to discontinue servicing expensive commands.  Any command\n  taking longer than <seconds> is abandoned.  Note that the resolution of\n  <seconds> is 100ns which is the 7th decimal place to the right of the\n  decimal point.\n\n  Examples:\n     lag_limit 15\n     @admin lag_limit=15.5\n\n  Related Topics: lag_maximum\n\n", "db_key": "LAG_LIMIT", "db_staff_only": false}}, {"pk": 640, "model": "help.helpentry", "fields": {"db_entrytext": "LAG_MAXIMUM\n\n  CONFIG PARAMETER: lag_maximum <seconds>\n  DEFAULT: 120.000\n\n  Controls when to log expensive commands.  Any command taking longer than\n  <seconds> is logged.  Note that the resolution of <seconds> is 100ns\n  which is the 7th decimal place to the right of the decimal point.\n\n  Examples:\n     lag_maximum 1.2\n     @admin lag_maximum=0.750\n\n  Related Topics: lag_limit\n\n", "db_key": "LAG_MAXIMUM", "db_staff_only": false}}, {"pk": 641, "model": "help.helpentry", "fields": {"db_entrytext": "LBUF_SIZE\n\n  CONFIG PARAMETER: lbuf_size <bytes>\n  DEFAULT: 8000\n\n  This provides softcode access to the LBUF_SIZE compile-time #define.  It is\n  not changeable as a configuration option at startup or during run-time,\n  although it is changable at compile-time.\n\n  Examples:\n     > think config(lbuf_size)\n     8000\n\n  Related Topics:\n\n", "db_key": "LBUF_SIZE", "db_staff_only": false}}, {"pk": 314, "model": "help.helpentry", "fields": {"db_entrytext": "LEAVE\n\n  COMMAND: leave[/<switch>]\n\n  This command leave allows you to exit an object you have entered, arriving\n  in the same location as the object. You may not leave an object if you fail\n  that object's LeaveLock (but you may still @teleport out, use an exit inside\n  the object, or go home).\n\n  The following switch is recognized:\n\n     /quiet   - Don't perform the @oleave/@aleave or @olfail/@alfail\n                attributes on the entered object, and don't perform the\n                @oxenter attribute on your new location.  This switch\n                only works if you control your current location.\n\n  Related Topics: enter, @lock, ENTER_OK, @aleave, @alfail, @leave, @lfail,\n      @oleave, @olfail, @oxenter.\n\n", "db_key": "LEAVE", "db_staff_only": false}}, {"pk": 315, "model": "help.helpentry", "fields": {"db_entrytext": "LIGHT\n\n  FLAG: LIGHT(l)  ()\n\n  An object or exit that is set LIGHT is visible even when inside a DARK\n  location.  If an object is set both DARK and LIGHT, then its contents are\n  visible even though the object itself is not.\n\n  Related Topics:\n\n", "db_key": "LIGHT", "db_staff_only": false}}, {"pk": 316, "model": "help.helpentry", "fields": {"db_entrytext": "LINEWRAP\n\n  FLAG: LINEWRAP()  (>)\n\n  Objects set LINEWRAP show their descriptions in a formatted style using\n  code equivalent to that in format().\n\n  This flag is only available with --enable-firanmux.\n\n  Related Topics: format().\n\n", "db_key": "LINEWRAP", "db_staff_only": false}}, {"pk": 317, "model": "help.helpentry", "fields": {"db_entrytext": "LINKING\n\n  You can link to a room if you control it, or if it is set LINK_OK or ABODE.\n  Being able to link means you can set the homes of objects or yourself to\n  that room if it is set ABODE, and that you can set the destination of exits\n  to that room if it is LINK_OK.\n\n  Related Topics: @link, ABODE, LINK_OK.\n\n", "db_key": "LINKING", "db_staff_only": false}}, {"pk": 642, "model": "help.helpentry", "fields": {"db_entrytext": "LINK_COST\n\n  CONFIG PARAMETER: link_cost <amount>\n  DEFAULT: 1\n\n  Specifies the cost of using the @link command to establish or change the\n  link of an exit to its destination, the home of a player or an object, or\n  the drop-to of a room.\n\n  Related Topics: @link.\n\n", "db_key": "LINK_COST", "db_staff_only": false}}, {"pk": 318, "model": "help.helpentry", "fields": {"db_entrytext": "LINK_OK\n\n  FLAG: LINK_OK(L)  ()\n\n  If a room is LINK_OK, anyone can link exits to it (but\n  still not from it). It has no meaning for people, things, or exits.\n\n  Related Topics: @link, LINKING\n\n", "db_key": "LINK_OK", "db_staff_only": false}}, {"pk": 319, "model": "help.helpentry", "fields": {"db_entrytext": "LISTENING\n\n  Thee are two ways to listen for something in a room. The easiest way\n  is to use a combination of @listen and @ahear/@aahear/@amhear. The\n  second way is to use a \"^\" pattern in an attribute, similar to the way\n  \"$\" is used for user-defined commands. The attribute takes the form:\n  '^<pattern>:<action>'.\n\n  The ^-pattern check is only performed on objects with their MONITOR flag\n  set.  The criterion for triggering a pattern-listen is the same as that for\n  triggering an @ahear - the object cannot trigger its own listen patterns.\n  All matching attributes have their <action>s performed, not just the first.\n  Also, attributes with the no_command flag set are not checked for ^-patterns,\n  and neither are objects' parents.\n\n  Example:\n    > @va test = ^* says \"foo *\":say I got a foo with %1!.\n    Set.\n    > @set test=monitor\n    test grows ears and can now hear.\n    > say foo bar\n    You say, \"foo bar\"\n    test says \"I got a foo with bar!.\"\n\n  Related Topics: @ahear, @listen, @set.\n\n", "db_key": "LISTENING", "db_staff_only": false}}, {"pk": 320, "model": "help.helpentry", "fields": {"db_entrytext": "LISTS\n\n  A list is a string, usually stored in an attribute (currently any of the\n  va-vz attributes), which is a series of words, separated by one or more\n  spaces.  The following would be a list (denoted on the ends by ', which is\n  not actually in the string): 'one two three four five'.  The functions\n  first(), rest(), cat(), member(), and remove(), all work on lists.\n\n  Related Topics: cat(), first(), member(), remove(), rest().\n\n", "db_key": "LISTS", "db_staff_only": false}}, {"pk": 643, "model": "help.helpentry", "fields": {"db_entrytext": "LIST_ACCESS\n\n  CONFIG PARAMETER: list_access <param> [!]<privilege> [[!]<privilege>]...\n\n  Changes the access needed to the <param> option of the @list command.\n\n  Related Topics: @list, PERMISSIONS.\n\n", "db_key": "LIST_ACCESS", "db_staff_only": false}}, {"pk": 321, "model": "help.helpentry", "fields": {"db_entrytext": "LOCATE() (continued)\n\n  You may also specify qualifiers in <where> to help resolve possible\n  ambiguities:\n    E    - Prefer exits over other types.\n    L    - Prefer unlocked exits over locked exits.\n    P    - Prefer players over other types.\n    R    - Prefer rooms over other types.\n    T    - Prefer things over other types.\n    V    - Report \"Can't find...\" and \"Which one...\" errors to <looker>.\n    X    - Select randomly if search finds multiple matches.\n\n  If nothing matches, the value #-1 is returned.  If more than one thing\n  of the preferred type matches, but nothing matches exactly, the value #-2\n  is returned, except if the X qualifier was specified in which case one is\n  chosen at random.  If more than one thing exactly matches, one is chosen\n  at random.  If you specify more than one type preference (E, P, R, or T),\n  then the last one entered is the one that is obeyed.  The default is for\n  no type to be preferred.\n\n{ 'help locate3' for more }\n\n", "db_key": "LOCATE2", "db_staff_only": false}}, {"pk": 322, "model": "help.helpentry", "fields": {"db_entrytext": "LOCATE() (continued)\n\n  Examples:\n    > i\n    test1(#378)\n    test(#376)\n    You have 42463 clams.\n    > look\n    Nullspace(#250R)\n    test1(#382)\n    > say locate(me,test,i)                > say locate(me,tes,in)\n    You say, \"#376\"                         You say, \"#-2\"\n    > say locate(me,test,n)                > say locate(here,tes,*)\n    You say, \"#382\"                         You say, \"#382\"\n    > say locate(me,test1,in)              > say locate(me,out,e)\n    You say, \"#378\"                         You say, \"#252\"\n    > say locate(me,test1,in)              > say locate(me,here,*)\n    You say, \"#382\"                         You say, \"#250\"\n\n  Related Topics: num(), PARENT OBJECTS.\n\n", "db_key": "LOCATE3", "db_staff_only": false}}, {"pk": 644, "model": "help.helpentry", "fields": {"db_entrytext": "LOCK_RECURSION_LIMIT\n\n  CONFIG PARAMETER: lock_recursion_limit <num>\n  DEFAULT: 20\n\n  Sets the maximum number of levels of indirection that may be used when\n  using indirect locks.  If more than this many levels are used, the lock\n  fails and the user gets an error message.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n", "db_key": "LOCK_RECURSION_LIMIT", "db_staff_only": false}}, {"pk": 645, "model": "help.helpentry", "fields": {"db_entrytext": "LOG\n\n  CONFIG PARAMETER: log [!]<logoption> [[!]<logoption>]...\n\n  Specifies what types of events are to be logged to the logfile.\n\n    accounting     - Write an accounting record to the log for each player\n                     who disconnects.\n    all_commands   - Record all commands executed.\n    bad_commands   - Record commands entered that did not match anything.\n    buffer_alloc   - Record buffer allocates and frees.\n    bugs           - Record internal inconsistencies found.\n    checkpoints    - Record automatic database dumps.\n    config_changes - Record uses of the @admin command.\n    create         - Record creation of new players.\n    killing        - Record uses of the kill and slay commands.\n    logins         - Record connects to characters.\n    network        - Record new and broken net connections.\n    problems       - Record problems found with the database.\n    security       - Record security-related events.\n    shouts         - Record uses of the @wall command.\n    startup        - Record information about game startup.\n    suspect        - Record commands entered by players flagged SUSPECT.\n    time_usage     - Record @timecheck output.\n    wizard         - Record uses of dangerous commands like @toad.\n\n  Related Topics: log_options.\n\n", "db_key": "LOG", "db_staff_only": false}}, {"pk": 646, "model": "help.helpentry", "fields": {"db_entrytext": "LOGGING\n\n  There are two separate forms of logging.  Firstly, server-related logging is\n  controlled with the two configuration parameters: 'log_options' and 'log'.\n  Secondly, softcode may use the @log command to send arbitrary text to\n  arbitrary log files.  The former style of logging automatically breaks into\n  500KB chunks.  The latter style does not.\n\n  In the first style, the log_options parameter controls the information that\n  is written along with the message in the logfile.  By default, log_options\n  is configured to write the timestamp of the log message and the location of\n  referenced players and objects.\n\n  The log_options parameter controls what type of information is written to\n  the logfile.  Many different types of log information can be stored.  By\n  default, log_options is configured to record the following events:  bugs,\n  security, network, logins, checkpoints, config_changes, shouts, startup,\n  wizard, suspect_commands, problems, and create.  See 'wizhelp log' for\n  specifics on the information stored by these event types.\n\n  Of note, the log configuration option of 'all_commands' can be used to\n  monitor every command issued by every player on the game when strange\n  activity is occuring.   Doing so, however, may raise privacy concerns.\n  Use with caution.  If a single individual is in question, use of the\n  SUSPECT flag and suspect_commands event logging is suggested.\n\n  Related Topics: log, log_options, @log, @list logging.\n\n", "db_key": "LOGGING", "db_staff_only": false}}, {"pk": 323, "model": "help.helpentry", "fields": {"db_entrytext": "LOGOUT\n\n  COMMAND: logout\n\n  Disconnects you from your character without breaking the network connection\n  to the game.  You may then log in to another character.\n\n  Related Topics: quit.\n\n", "db_key": "LOGOUT", "db_staff_only": false}}, {"pk": 647, "model": "help.helpentry", "fields": {"db_entrytext": "LOGOUT_CMD_ACCESS\n\n  CONFIG PARAMETER: logout_cmd_access <command> <permlist>\n\n  Specifies permission for logged-out commands (i.e., WHO, DOING, SESSION,\n  QUIT, OUTPUTPREFIX, and OUTPUTSUFFIX).\n\n  Any restriction applied here will disable the command from the login\n  screen without affecting its use by players within the game.\n\n  Related Topics: access.\n\n", "db_key": "LOGOUT_CMD_ACCESS", "db_staff_only": false}}, {"pk": 648, "model": "help.helpentry", "fields": {"db_entrytext": "LOGOUT_CMD_ALIAS\n\n  CONFIG PARAMETER: logout_cmd_alias <alias> <command>\n\n  Makes <alias> an alias for <command>, where <command> is one of WHO, DOING,\n  SESSION, QUIT, OUTPUTPREFIX, and OUTPUTSUFFIX.\n\n", "db_key": "LOGOUT_CMD_ALIAS", "db_staff_only": false}}, {"pk": 649, "model": "help.helpentry", "fields": {"db_entrytext": "LOG_OPTIONS\n\n  CONFIG PARAMETER: log_options [!]<option> [[!]<option>]...\n\n  Specifies the type of information to be included in each log entry.\n  The possible values are:\n\n    flags       - Include the flags set on a player or object.\n    location    - Include the location of referenced players and objects.\n    owner       - Include the owner of referenced players and objects.\n    timestamp   - Include a timestamp in each log entry.\n\n  Related Topics: log.\n\n", "db_key": "LOG_OPTIONS", "db_staff_only": false}}, {"pk": 324, "model": "help.helpentry", "fields": {"db_entrytext": "LOOK\n\n  COMMAND: look[/<switches>] [<object>]\n\n  Displays the description of <object>, or the room you're in if you don't\n  specify an object.  Specifying object as <name> or #<dbref> or 'me' or\n  'here' is legal.  You can also use look to look at objects held by other\n  people, just use 'look <person>'s <object>'.\n\n  You may use the /outside switch to look at the location of your current\n  location (useful if you are inside a vehicle or other object).  You may\n  also look at other objects in the 'outer' location, but you may not\n  use the possessive form with the /outside switch (ie: \"look/outside\n  <person>'s <object>\" won't work).\n\n  'read' is the same as 'look'.\n\n  Related Topics: @adesc, @describe, @odesc.\n\n", "db_key": "LOOK", "db_staff_only": false}}, {"pk": 650, "model": "help.helpentry", "fields": {"db_entrytext": "LOOK_OBEY_TERSE\n\n  CONFIG PARAMETER: look_obey_terse <yes/no>\n  DEFAULT: YES\n\n  Indicates whether or not the 'look' command obeys the TERSE flag when\n  deciding how much information to display.  If set to yes, the\n  terse_shows_contents, terse_shows_exits, and terse_shows_move_messages\n  config options control the amount of information displayed for TERSE\n  players.\n\n  Related Topics: terse_shows_contents, terse_shows_exits,\n                  terse_shows_move_messages.\n\n", "db_key": "LOOK_OBEY_TERSE", "db_staff_only": false}}, {"pk": 325, "model": "help.helpentry", "fields": {"db_entrytext": "LOOPING\n\n  Looping in an object can have its good parts and its bad parts.  The good\n  part is when you activate part of a program multiple times to exhaustively\n  perform an operation.  This is usually done by:\n     @va object =  <list of commands>;@trigger me/vb\n     @vb object =  @switch <test> = <false>,@trigger me/va,<otherwise go on>\n\n  Looping can be a problem when it goes on without stopping.  The @ps command\n  can be used to see if you are looping.  Beware!  A looping machine that\n  isn't @halt'ed will drain your money supply while you are away!\n\n  Related Topics: @halt, @ps.\n\n", "db_key": "LOOPING", "db_staff_only": false}}, {"pk": 651, "model": "help.helpentry", "fields": {"db_entrytext": "MACHINE_COMMAND_COST\n\n  CONFIG PARAMETER: machine_command_cost <number>\n  DEFAULT: 64\n\n  Sets the cost for running a command from a machine, as opposed to running\n  it interactively.  Each command run has a one in <number> chance of being\n  charged one coin for machine overhead.\n\n", "db_key": "MACHINE_COMMAND_COST", "db_staff_only": false}}, {"pk": 326, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-ADMIN\n\n  The @mail command can also take the following switches:\n\n    @mail/stats [<player>]    --  Basic mail statistics.\n    @mail/dstats [<player>]   --  Also provides read/unread count.\n    @mail/fstats [<player>]   --  Does all that, plus gives space usage.\n\n    @mail/debug <action>[=<player>]\n    @mail/nuke\n\n  Only wizards may stats players other than themselves. The mail statistics\n  commands are computationally expensive, and thus are subject to \"daytime\"\n  restrictions. They also cost the same as a @find (100 credits).\n\n  The /debug switch does sanity checking on the mail database, and may only\n  be used by a wizard. \"@mail/debug sanity\" just does the check; the command\n  \"@mail/debug clear=<player name or dbref number>\" wipes mail for an object.\n  \"@mail/debug fix\" attempts to repair problems noted in the sanity check.\n\n  The /nuke switch destroys the post office, erasing all @mail everywhere.\n  It may only be used by a wizard.\n\n  Also, admin may set the @amail attrib on their char.  When somebody sends\n  you mail, it will trigger that attrib if it exists.\n\n", "db_key": "MAIL-ADMIN", "db_staff_only": false}}, {"pk": 327, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-EXAMPLES\n\n  Here is an example of mailing a player, where is the player will be \"bob\",\n  and sending the mail.\n\n  > @mail bob = The MUX              - This is the Subject line.\n\n  Sending mail to player 'Bob'\n  > -Hi bob.                         - This is where you will enter the body\n                                       of the message.\n  Text Added.\n  > @send                            - Basically, sends the @mail.\n\n  MAIL: You sent your message to 'Bob'.\n\n", "db_key": "MAIL-EXAMPLES", "db_staff_only": false}}, {"pk": 328, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-FOLDERS\n\n  The MUX mail system allows each player 16 folders, numbered from\n  0 to 15. Mail can only be in 1 folder at a time. Folder 0 is\n  the \"inbox\" where new mail is received. Most @mail commands\n  operate on only the current folder.\n\n  @mail/folder\n        This commands lists all folders which contain mail, telling\n        how many messages are in each, and what the current folder is.\n\n  @mail/folder <folder#|foldername>\n        This command sets your current folder to <folder#>.\n\n  @mail/folder <folder#> = <foldername>\n        This command gives <folder#> a name.\n\n  @mail/file <msg-list>=<folder#>\n        This command moves all messages in msg-list from the current\n        folder to a new folder, <folder#>.\n\n", "db_key": "MAIL-FOLDERS", "db_staff_only": false}}, {"pk": 329, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-OTHER\n\n  @mail/clear [<msg-list | all>]\n  @mail/unclear [<msg-list> | all>]\n        These commands mark mail in the current folder as cleared or\n        uncleared. Mail marked for clearing is deleted when you\n        disconnect, or if you use @mail/purge. If no msg-list is\n        specified, all mail in your current folder is cleared. If \"all\"\n        is given instead of a msg-list, all mail in *all* folders is\n        cleared/uncleared.\n\n  @mail/purge\n        Actually deletes all messages marked for clearing with\n        @mail/clear.  This is done automatically when you log out.\n\n  @mail/tag [<msg-list | all>]\n  @mail/untag [<msg-list> | all>]\n        These commands tag or untag mail in the current folder.\n        Tagged mail can be later acted on en masse by using \"tagged\" as\n        the msg-list for other commands (which does *not* untag them\n        afterward). If no msg-list is specified, all messages in the\n        current folder are tagged/untagged. If \"all\" is given as the\n        msg-list, all mail in *all* folders is tagged/untagged.\n        (Ex: To clear all mail from Temperance and Sloth,\n        @mail/tag *temperance, @mail/tag *sloth, @mail/clear tagged,\n        @mail/untag all).\n\n{ 'help mail-other2' for more }\n\n", "db_key": "MAIL-OTHER", "db_staff_only": false}}, {"pk": 330, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-OTHER (continued)\n\n  @mail/safe [<msg-list> | all>]\n        This command marks a message as being safe from mail expiration. It\n        should be used sparingly and only for very important messages.\n\n", "db_key": "MAIL-OTHER2", "db_staff_only": false}}, {"pk": 331, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-READING\n\n  @mail <msg #>\n  @mail/read [<folder>=]<msg-list>\n        This displays messages which match the msg# or msg-list from\n        your current folder. If <folder> is specified, mail is read from\n        that folder without changing the current folder.\n\n  @mail\n  @mail <msg-list, but not a single msg #>\n        This gives a brief list of all mail in the current folder,\n        with sender name, a list of receiving players, subject, and\n        message status.\n  @mail/list [<folder>=][<msg-list>]\n        Without <folder>, this gives the same list, but with time sent instead\n        of subject.  The status field is a set of characters (ex: NC-UF+) which\n        mean:\n                N = New (unread) message\n                C = Cleared message\n                U = Urgent message\n                F = Forwarded message\n                + = Tagged message\n        The opposites of these (read messages, etc.) are indicated with a\n        '-' in the status field in that position.\n\n", "db_key": "MAIL-READING", "db_staff_only": false}}, {"pk": 332, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-REVIEWING\n\n  @mail/review <player>\n        Reviews the messages you have sent to <player>.\n\n  @mail/review <player>=<msglist>\n        Reads the messages you have sent to <player>.\n\n  @mail/retract <player>=<msglist>\n        Retracts (deletes) unread messages you have sent to <player>.\n\n", "db_key": "MAIL-REVIEWING", "db_staff_only": false}}, {"pk": 333, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-SENDING\n\n  @mail[/switch] <player-list> = <subject>\n        This begins a message to all players in <player-list>.  The\n        <player list> forms the To: line of the @mail -- the list of primary\n        recipients.\n\n  -<text>\n  ~<text>\n        These add text to the message in progress, for example, the\n        following would add the text 'This is a test' to the end of your\n        @mail message:\n\n            -This is a test\n\n        Likewise, ~<text> prepends the text.\n\n  @mail/send\n        This sends the message that is currently in progress.\n        -- is the equivalent of @mail/send. @mail/urgent sends\n        the message as urgent, and should not be used often.\n\n  @mail/cc <player-list>\n        This adds <player-list> to the current list of recipients.  Like the\n        primary recipients, these additions will be visible to every\n        recipient.\n\n  @mail/bcc <player-list>\n        This adds <player-list> to the current list of recipients.\n        Unlike the primary recipients and the carbon-copy (cc) recipients,\n        these additions will be hidden from every recipient including each\n        other.\n\n{ 'help mail-sending2' for more }\n\n", "db_key": "MAIL-SENDING", "db_staff_only": false}}, {"pk": 334, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-SENDING (continued)\n\n  @mail/proof\n        This shows you the message that is currently in progress, as\n        it would be read by whomever received it.\n\n  @mail/edit <old text> = <new text>\n        Like @edit, but edits the message in process.\n\n  @mail/abort\n        This aborts the message currently in progress, allowing you\n        to start a new one.\n\n  @mail/fwd <msg> = <player-list>\n        This sends a copy of <msg> to all the players in <player-list>.\n        The copy will appear to have been sent by you (not the original\n        sender), and its status will be \"Forwarded\". Note that this\n        places the message to be forwarded into your mail buffer, where\n        you can edit it with @mail/edit, add text with '-', or prepend\n        text with '~'. You have to use '--' or @mail/send to send the\n        message.\n\n  @mail/quick <player-list>/<subject> = <message>\n        Sends <message> to the list of players.\n\n{ 'help mail-sending3' for more }\n\n", "db_key": "MAIL-SENDING2", "db_staff_only": false}}, {"pk": 335, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL-SENDING (continued)\n\n  @mail/reply[/quote] <message>\n        This starts a working message to the person who sent you <msg>.\n\n  @mail/replyall[/quote]\n        This starts a working message to the person who sent you <msg>\n        and to every other recipient of <message>.\n\n  In both cases, because this is a reply, the subject line will be:\n\n        'Re: <subject line from original message>'\n\n  Also, in both cases, if /quote is specified, the original message\n  will be quoted into the working message with a header and footer much\n  like the following:\n\n        On Thu Apr 27 21:33:04 2000, Gordon wrote:\n\n        <quoted message from original message>\n\n        ********** End of included message from Gordon\n\n  You can add additional text above or below the quoted material with\n  the post-pend ('-') and prepend ('~') @mail commands. Like, normal\n  outgoing @mail, the reply is finished and sent with '--' on a line\n  by itself\n\n", "db_key": "MAIL-SENDING3", "db_staff_only": false}}, {"pk": 652, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_DATABASE\n\n  CONFIG PARAMETER: mail_database <path>\n  DEFAULT: mail.db\n\n  Sets the file that @mail information is to be stored in. The database\n  is only loaded or saved if have_mailer is set to yes.\n\n  Related Topics: have_mailer.\n\n", "db_key": "MAIL_DATABASE", "db_staff_only": false}}, {"pk": 653, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_EHLO\n\n  CONFIG PARAMETER: mail_ehlo <string>\n  DEFAULT: None\n\n  Specifies the EHLO string to offer to the SMTP server.  This is typically\n  the DNS name of the sending host or something close, and SMTP servers are\n  likely to perform a reverse-DNS lookup on the sender's IP address, an MX\n  lookup on the EHLO string, and make some judgement as to whether the sender\n  is relaying mail.\n\n  Related Topics: mail_sendaddr, mail_sendname, mail_server, and mail_subject.\n\n", "db_key": "MAIL_EHLO", "db_staff_only": false}}, {"pk": 654, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_EXPIRATION\n\n  CONFIG PARAMETER: mail_expiration <number of days>\n  DEFAULT: 14\n\n  Sets the number of days that a @mail message should last before it is\n  automatically deleted by the system. If this parameter is set to a\n  negative number, this feature will be disabled.\n\n", "db_key": "MAIL_EXPIRATION", "db_staff_only": false}}, {"pk": 655, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_PER_HOUR\n\n  CONFIG PARAMETER: mail_per_hour <maximum>\n  DEFAULT: 50\n\n  Specifies the maximum number of @mail items per hour that a mortal\n  may create.  Attempts to create @mail after this limit has been\n  reached are denied.  Any existing @mail-in-progress is still\n  permitted.\n\n  Related Topics: pcreate_per_hour, user_attr_per_hour\n\n", "db_key": "MAIL_PER_HOUR", "db_staff_only": false}}, {"pk": 656, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_SENDADDR\n\n  CONFIG PARAMETER: mail_sendaddr <string>\n  DEFAULT: None\n\n  Specifies the E-mail address of the sender for outgoing E-mail.\n\n  Related Topics: mail_ehlo, mail_sendname, mail_server, and mail_subject.\n\n", "db_key": "MAIL_SENDADDR", "db_staff_only": false}}, {"pk": 657, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_SENDNAME\n\n  CONFIG PARAMETER: mail_sendname <string>\n  DEFAULT: None\n\n  Specifies the sender's friendly name for outgoing E-mail.\n\n  Related Topics: mail_ehlo, mail_sendaddr, mail_server, and mail_subject.\n\n", "db_key": "MAIL_SENDNAME", "db_staff_only": false}}, {"pk": 658, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_SERVER\n\n  CONFIG PARAMETER: mail_server <string>\n  DEFAULT: None\n\n  Specifies the host name of the SMTP server for outgoing E-mail.\n\n  Related Topics: mail_ehlo, mail_sendaddr, mail_sendname, and mail_subject.\n\n", "db_key": "MAIL_SERVER", "db_staff_only": false}}, {"pk": 659, "model": "help.helpentry", "fields": {"db_entrytext": "MAIL_SUBJECT\n\n  CONFIG PARAMETER: mail_subject <string>\n  DEFAULT: None\n\n  Specifies the subject line for outgoing E-mail.\n\n  Related Topics: mail_ehlo, mail_sendaddr, mail_sendname, and mail_server.\n\n", "db_key": "MAIL_SUBJECT", "db_staff_only": false}}, {"pk": 660, "model": "help.helpentry", "fields": {"db_entrytext": "MARKED\n\n  FLAG: MARKED(m) (all types)\n\n  This flag is used by the database cleaning routines to check the\n  connectivity of the database, and also by the @mark commands to select\n  objects for special attention.  Since database cleaning is performed\n  automatically from time to time, automatic cleaning must be disabled\n  before using the @mark commands, and the command @mark_all/clear should\n  be run immediately before turning automatic cleaning back on.\n\n  Related Topics: @apply_marked, @dbck, @disable, @enable, @list, @mark,\n                  @mark_all.\n\n", "db_key": "MARKED", "db_staff_only": false}}, {"pk": 662, "model": "help.helpentry", "fields": {"db_entrytext": "MASTER ROOM\n\n  The master room contains the default exits and $-commands for the MUX.  The\n  exits in the master room are checked if a command doesn't match an exit in\n  the player's current room, and the $-commands on the room and its contents.\n\n  Caution: Do not allow players into the master room, as they can leave\n  objects that will be searched for $-commands.  Make sure that the room is\n  not JUMP_OK or LINK_OK, and that any exits leading to the room are locked\n  so that only wizards may use them.\n\n  To make global commands, make an exit in the master room that is locked to\n  #0 (or some other impossible lock) and has an appropriate Afail action (and\n  possibly Fail and Ofail messages).  You can make global exits by having an\n  unlocked exit from the master room (or an exit locked to a desired key\n  object) lead to the desired destination.  When a player goes through one of\n  these exits, any KEY objects are returned home, as is done with @teleport.\n\n  Do not put too many objects in the room, because each object is searched\n  for $-command every time anyone (or anything) anywhere on the MUX enters\n  an unrecognized command.\n\n  Related Topics: @link, @lock, @open, master_room.\n\n", "db_key": "MASTER ROOM", "db_staff_only": false}}, {"pk": 661, "model": "help.helpentry", "fields": {"db_entrytext": "MASTER_ROOM\n\n  CONFIG PARAMETER: master_room <roomnum>\n  DEFAULT: (none)\n\n  Specifies the room that is searched for exits if a command does not match\n  an exit in the current room, and for $-command if a command does not match\n  any $-commands that are available to the player in his current location.\n\n  Note: Do not prefix <roomnum> with a '#' character. Even though it is a\n  dbref of the master room, it must be given here as a number.\n\n", "db_key": "MASTER_ROOM", "db_staff_only": false}}, {"pk": 663, "model": "help.helpentry", "fields": {"db_entrytext": "MATCH_OWN_COMMANDS\n\n  Config parameter: match_own_commands <yes/no>.  Default: NO\n\n  Specifies whether or not objects search themselves for $-commands when a\n  command does not match an exit or an internal command.  In order for\n  players to search themselves for commands, both match_own_commands and\n  player_match_own_commands must be set to yes.\n\n  Related Topics: player_match_own_commands.\n\n", "db_key": "MATCH_OWN_COMMANDS", "db_staff_only": false}}, {"pk": 336, "model": "help.helpentry", "fields": {"db_entrytext": "MATRIX\n\n  The MATRIX flag is used to denote an object who is in the Matrix or\n  Digital Web. Rooms will list contents as |Icons| and will only list\n  players and objects also set MATRIX. MATRIXDESC can be set on a\n  player or object as the description of their icon.\n\n", "db_key": "MATRIX", "db_staff_only": false}}, {"pk": 664, "model": "help.helpentry", "fields": {"db_entrytext": "MAX_CACHE_SIZE\n\n  CONFIG PARAMETER: max_cache_size <size>\n  DEFAULT: 1048576\n\n  Expressed in bytes, this is the maximum size the server will use for caching\n  attribute values from the database.\n\n  Related Topics: cache_pages, cache_tick_period.\n\n", "db_key": "MAX_CACHE_SIZE", "db_staff_only": false}}, {"pk": 665, "model": "help.helpentry", "fields": {"db_entrytext": "MAX_PLAYERS\n\n  CONFIG PARAMETER: max_players <num>\n  DEFAULT: -1 (unlimited)\n\n  Sets the maximum number of players that may be connected at any one time\n  Note that wizards are allowed to login even if they would exceed the limit,\n  and that this limit does not override any limits imposed by the system\n  running the MUX (such as the maximum number of net connections a process\n  may have).  Players connecting when there are max_players players connected\n  receive the contents of the file named by the full_file directive, and the\n  full_motd_message (also settable via @motd/full), and are disconnected.\n\n  Related Topics: @motd, full_file, full_motd_message.\n\n", "db_key": "MAX_PLAYERS", "db_staff_only": false}}, {"pk": 337, "model": "help.helpentry", "fields": {"db_entrytext": "ME\n\n  The word 'me' refers to yourself. Some things to do when starting out:\n  1) give yourself a description with\n     '@describe me = <description>', then look at yourself with 'look me'.\n  2) set your gender, if you wish it known, with\n     '@sex me=male' or '@sex me=female'  (or '@sex me=neuter' to be an 'it').\n\n", "db_key": "ME", "db_staff_only": false}}, {"pk": 338, "model": "help.helpentry", "fields": {"db_entrytext": "MEDIUM\n\n  The MEDIUM flag denotes a player who is a medium. With this flag set\n  they can hear what is said by those set SHROUD but not see them. They\n  can see those who are visible normally only.\n\n", "db_key": "MEDIUM", "db_staff_only": false}}, {"pk": 666, "model": "help.helpentry", "fields": {"db_entrytext": "MIN_GUESTS\n\n  CONFIG PARAMETER: min_guests\n  DEFAULT: 1\n\n  Specifies the minimum number of guests that are should remain on the MUX.\n  These guests will not be nuked on @dbck's but will instead be recycled.\n  Use this to set how many guests you normally have on.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: number_guests, guest_char_num, guest_prefix, guest_site.\n\n", "db_key": "MIN_GUESTS", "db_staff_only": false}}, {"pk": 339, "model": "help.helpentry", "fields": {"db_entrytext": "MOD() (continued)\n\n  For positive y, mod(x,y) always returns a positive number less than\n  y. For negative y, mod(x,y) always returns a negative number greater\n  than y.\n\n  mod() is the more 'mathy' definition of a modulus as defined by the\n  following:\n\n    x mod y  is defined as x - y*floor(x/y) where x,y, every operation\n    is over real numbers.\n\n  Example:\n    > say mod(-9,5)\n    You say, \"1\"\n    > say mod(-9,-5)\n    You say, \"-4\"\n    > say mod(17,3)\n    You say, \"2\"\n    > say mod(18,3)\n    You say, \"0\"\n\n  Related Topics: floordiv(), iadd(), idiv(), imul(), isub(),\n                  remainder().\n\n", "db_key": "MOD2", "db_staff_only": false}}, {"pk": 667, "model": "help.helpentry", "fields": {"db_entrytext": "MODULE\n\n  CONFIG PARAMETER: module [!]<name> [<options>]\n  DEFAULT: N/A\n\n  Load or (if prefixed with '!') unload external module.  The module's\n  filename is derived from the module <name>, but varies slightly from\n  platform to platform.  On Unix and OS X, the filename ends with .so, but on\n  Windows, the filename ends with .dll.\n\n  By default, the server loads the module directly, but <options> may be any\n  of the following:\n\n    inproc - load the module into the server's process directly (default).\n    local  - load the module in a separate slave process.\n    slave  - load the module in a separate slave process.\n\n  Other <options> may be added later to support loading on a separate thread\n  with the same process or the spawning and control of multiple slave\n  processes or to control the method of communication used.\n\n  Related Topics: @list modules.\n\n", "db_key": "MODULE", "db_staff_only": false}}, {"pk": 340, "model": "help.helpentry", "fields": {"db_entrytext": "MONEY\n\n  You need money to build within the game, to run programmed objects or use\n  certain other commands, or to buy things from vendors set up by other\n  players.  You can get money via one or more of these methods:\n    1.  You receive a daily allowance for each day you connect.\n    2.  You have a chance of finding money as you wander around areas that\n        other people have built.\n    3.  Some MUXes may implement a place where you can sell valuable objects\n        for money.\n\n  Related Topics: @list costs, COSTS.\n\n", "db_key": "MONEY", "db_staff_only": false}}, {"pk": 668, "model": "help.helpentry", "fields": {"db_entrytext": "MONEY_NAME_PLURAL\n\n  CONFIG PARAMETER: money_name_plural <string>\n  DEFAULT: pennies\n\n  Specifies the string to use to describe the coin of the realm when they\n  are being referred to plurally (such as: 'You have <number> pennies.', where\n  <number>  is not 1).\n\n  Related Topics: money_name_singular.\n\n", "db_key": "MONEY_NAME_PLURAL", "db_staff_only": false}}, {"pk": 669, "model": "help.helpentry", "fields": {"db_entrytext": "MONEY_NAME_SINGULAR\n\n  CONFIG PARAMETER: money_name_singular <string>\n  DEFAULT: penny\n\n  Specifies the string to use to describe the coin of the realm when they\n  are being referred to singularly (such as: 'You found a penny!').\n\n  Related Topics: money_name_plural.\n\n", "db_key": "MONEY_NAME_SINGULAR", "db_staff_only": false}}, {"pk": 341, "model": "help.helpentry", "fields": {"db_entrytext": "MONITOR\n\n  FLAG: MONITOR(M)  ()\n\n  Objects:\n  When set, anytime the object hears something from someone who passes the\n  object's use lock, the object's attributes are scanned for attributes\n  of the form '^<pattern>:<command list>'.  If the message matches the\n  wildcard-ed <pattern>, then <command list> is executed, substituting %0 for\n  the text that matched the first wildcard, %1 for the second, and so on.\n  All matching attributes are executed, not just the first.\n  Parents of MONITOR objects are never checked for ^-patterns.\n\n  Players:\n  When set on a player, this flag notifies that player whenever someone\n  connects or disconnects from the MUX. It is valid only for players, and\n  must be set by a wizard.\n\n  Related Topics: LISTENING.\n\n", "db_key": "MONITOR", "db_staff_only": false}}, {"pk": 670, "model": "help.helpentry", "fields": {"db_entrytext": "MOTD_FILE\n\n  CONFIG PARAMETER: motd_file <pathname>\n  DEFAULT: text/motd.txt\n\n  Specifies the name of the file to be shown to players immediately after they\n  connect to their characters.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: @readcache, newuser_file, motd_message.\n\n", "db_key": "MOTD_FILE", "db_staff_only": false}}, {"pk": 671, "model": "help.helpentry", "fields": {"db_entrytext": "MOTD_MESSAGE\n\n  CONFIG PARAMETER: motd_message <message>\n  DEFAULT: blank\n\n  Sets the MOTD message that is displayed to all characters when they log in.\n  This message is displayed in addition to the contents of the motd.txt\n  file.  It can be changed with the @motd command and examined by the\n  @listmotd command.\n\n  Related Topics: @listmotd, @motd, motd_file.\n\n", "db_key": "MOTD_MESSAGE", "db_staff_only": false}}, {"pk": 342, "model": "help.helpentry", "fields": {"db_entrytext": "MOVE\n\n  COMMAND: move[/<switch>] <direction>\n           move[/<switch>] home\n           <direction>\n           home\n\n  Moves you in the specified direction, assuming that the direction is not\n  locked against you.  'move home' is a special command that returns you to\n  your home. The word 'move' may be omitted.\n\n  The following switch is recognized:\n\n     /quiet   - Don't perform the @osucc/@asucc/@odrop/@adrop or @ofail/@afail\n                attributes on the exit being used.  This switch only works if\n                you control the exit.\n\n  'goto' is the same as 'move'.\n\n  Related Topics: enter, home, leave.\n\n", "db_key": "MOVE", "db_staff_only": false}}, {"pk": 343, "model": "help.helpentry", "fields": {"db_entrytext": "MOVING\n\n  A number of things happen when you leave one location and enter another\n  (assuming you pass the lock on the exit or have permission to enter the\n  object or to teleport to the location).  The following list describes the\n  actions that MUX takes when an object moves from one place to another.\n  Note that if an indicated attribute is not set, no message is displayed\n  (or no action is performed).\n\n  - If you are using an exit (as opposed to teleporting, entering an object,\n    or going home), You receive the SUCC message for the exit, others in the\n    old location receive the exit's OSUCC message, and the exit runs its\n    ASUCC action list.\n  - If you are teleporting or being teleported, others in the old location\n    receive your OXTPORT attribute.\n  - If you are a player or have your LISTEN attribute set to something,\n    and if the old location is not dark and you are not dark, you receive the\n    LEAVE message for the old location, others in the old location receive\n    the OLEAVE message, and the old location runs its ALEAVE action list.\n    Others in the new location receive the OXENTER message from the old\n    location, and others in the old location receive the message '<your name>\n    has left.'\n\n{ 'help moving2' for more }\n\n", "db_key": "MOVING", "db_staff_only": false}}, {"pk": 672, "model": "help.helpentry", "fields": {"db_entrytext": "MUD_NAME\n\n  CONFIG PARAMETER: mud_name <string>\n  DEFAULT: MUX\n\n", "db_key": "MUD_NAME", "db_staff_only": false}}, {"pk": 346, "model": "help.helpentry", "fields": {"db_entrytext": "MYOPIC\n\n  FLAG: MYOPIC(m)  ()\n\n  If you are set MYOPIC, then you are treated as if you did not own anything\n  when you use the LOOK command or when you automatically look at a location\n  when entering it.  Other commands (such as EXAMINE) are not affected.\n\n  Related Topics:\n\n", "db_key": "MYOPIC", "db_staff_only": false}}, {"pk": 347, "model": "help.helpentry", "fields": {"db_entrytext": "NEWS\n\n  COMMAND: news [<topic>]\n\n  Shows you the current news for the MUX.\n\n", "db_key": "NEWS", "db_staff_only": false}}, {"pk": 673, "model": "help.helpentry", "fields": {"db_entrytext": "NEWUSER_FILE\n\n  CONFIG PARAMETER: newuser_file <filename>\n  DEFAULT: text/newuser.txt\n\n  Specifies the file to be shown to new players immediately after they\n  create their characters, in place of the MOTD file.  This file should\n  contain information about the basic commands and how to get help.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: @readcache, motd_file.\n\n", "db_key": "NEWUSER_FILE", "db_staff_only": false}}, {"pk": 348, "model": "help.helpentry", "fields": {"db_entrytext": "NOBLEED\n\n  FLAG: NOBLEED(-)  ()\n\n  When set on a player, it will append an ANSI white character to\n  the normal ANSI 'normal' character, so it will fix ANSI color 'bleed' on\n  most terminals. (Bleed occurs when a color extends into text it was not\n  meant to.) Do not set this flag unless you have to, it tends to slow down\n  the text display for the MUX.\n\n  Related Topics:\n\n", "db_key": "NOBLEED", "db_staff_only": false}}, {"pk": 674, "model": "help.helpentry", "fields": {"db_entrytext": "NOSITEMON_SITE\n\n  CONFIG PARAMETER: nositemon_site <site>\n\n  Indicates that sites that match <site> are not to be reported to players\n  with the SITEMON flag.\n\n  Related Topics: register_site, REGISTRATION, SITE LISTS, SITE NOTATION.\n\n", "db_key": "NOSITEMON_SITE", "db_staff_only": false}}, {"pk": 349, "model": "help.helpentry", "fields": {"db_entrytext": "NOSPOOF\n\n  FLAG: NOSPOOF(N)  ()\n\n  This flag gives you mucho output when people @emit.  It can be annoying,\n  but you'll know who's spoofing.\n\n  Related Topics: @emit, @femit, @oemit, @pemit.\n\n", "db_key": "NOSPOOF", "db_staff_only": false}}, {"pk": 675, "model": "help.helpentry", "fields": {"db_entrytext": "NOTIFY_RECURSION_LIMIT\n\n  CONFIG PARAMETER: notify_recursion_limit <num>\n  DEFAULT: 20\n\n  Sets the maximum number of times that the notify() routine may be called\n  recursively.  A recursive call is made whenever a message heard by an\n  object is to be forwarded to its contents.\n\n", "db_key": "NOTIFY_RECURSION_LIMIT", "db_staff_only": false}}, {"pk": 350, "model": "help.helpentry", "fields": {"db_entrytext": "NO_COMMAND\n\n  FLAG: NO_COMMAND(n)  ()\n\n  The NO_COMMAND flag disables the checking of $-commands\n  on an object.\n\n  Most MUXes will be configured to automatically set this flag on rooms\n  and players. The server runs faster when fewer objects are checked for\n  $-commands; thus, any object which does not have $-commands on it should\n  be set NO_COMMAND.\n\n  Related Topics:\n\n", "db_key": "NO_COMMAND", "db_staff_only": false}}, {"pk": 676, "model": "help.helpentry", "fields": {"db_entrytext": "NUMBER_GUESTS\n\n  CONFIG PARAMETER: number_guests <num>\n  DEFAULT: 30\n\n  How many guests should we allow at any one time?\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guest_char_num, guest_nuker, guest_prefix.\n\n", "db_key": "NUMBER_GUESTS", "db_staff_only": false}}, {"pk": 351, "model": "help.helpentry", "fields": {"db_entrytext": "OBF\n\n  The OBF Flag is used to denote someone using a form of invisibility,\n  most commonly the vampiric discipline of Obfuscate. They must also have\n  an attribute set on them, OBF_LEVEL, which denotes the level of\n  invisibility they posses. When this attribute is present and the flag is\n  set on them they do not show up in the contents list of rooms. If a\n  player moves through an exit and has OBF_LEVEL of 1 then they will no\n  longer be invisible and will trigger the exit message. OBF_LEVEL of 2 or\n  higher will no longer do this. At OBF_LEVEL is 3 or higher they can set\n  their true desc in the attribute OBFDESC so that it will only be seen by\n  those with the ability to see through their disguise.\n\n  Related Topics: HSS\n\n", "db_key": "OBF", "db_staff_only": false}}, {"pk": 352, "model": "help.helpentry", "fields": {"db_entrytext": "OBJECT TYPES\n\n  There are 4 types of objects: things, players, exits, and rooms.  The first\n  letter following an object's ID number indicates the type: P(layer), E(xit),\n  R(oom), otherwise, thing.  Things are inanimate objects that can be carried.\n  Players are animate objects that can move and carry.  Exits are the means by\n  which objects move from room to room.  Rooms are locations that contain\n  objects and linked exits.\n\n  Related Topics: @create, @dig, @link, @open, @robot, @unlink\n\n", "db_key": "OBJECT TYPES", "db_staff_only": false}}, {"pk": 353, "model": "help.helpentry", "fields": {"db_entrytext": "OPAQUE\n\n  FLAG: OPAQUE(O)  ()\n\n  When set on a player, it prevents other players from\n  seeing what you are carrying in your inventory. Only exception is\n  when the object you are carrying belongs to the other player\n  looking at you.\n\n  Related Topics:\n\n", "db_key": "OPAQUE", "db_staff_only": false}}, {"pk": 677, "model": "help.helpentry", "fields": {"db_entrytext": "OPEN_COST\n\n  CONFIG PARAMETER: open_cost <amount>\n  DEFAULT: 1\n\n  Indicates the cost of using the @open command to open a new exit.\n  If a destination for the new exit is specified and the link is successful,\n  then the link_cost is also charged.\n\n  Related Topics: @open, link_cost.\n\n", "db_key": "OPEN_COST", "db_staff_only": false}}, {"pk": 354, "model": "help.helpentry", "fields": {"db_entrytext": "OPEN_OK\n\n  FLAG: OPEN_OK(z)\n\n  If a location is OPEN_OK, anyone who passes the OpenLock can open\n  exits from it (but not to it). It has no meaning for exits.\n\n  Related Topics: @link, LINKING, LINK_OK, @open.\n\n", "db_key": "OPEN_OK", "db_staff_only": false}}, {"pk": 355, "model": "help.helpentry", "fields": {"db_entrytext": "OUTPUTPREFIX\n\n  COMMAND: outputprefix <string>\n\n  Causes <string> to be output on a line by itself before printing the\n  results of each command.  This command is intended for use by external\n  robot programs, and may be restricted to players whose ROBOT flag is set.\n\n  Related Topics: @robot, outputsuffix, ROBOT.\n\n", "db_key": "OUTPUTPREFIX", "db_staff_only": false}}, {"pk": 356, "model": "help.helpentry", "fields": {"db_entrytext": "OUTPUTSUFFIX\n\n  COMMAND: outputsuffix <string>\n\n  Causes <string> to be output on a line by itself after printing the results\n  of each command.  This command is intended for use by external robot\n  programs, and may be restricted to players whose ROBOT flag is set.\n\n  Related Topics: @robot, outputprefix, ROBOT.\n\n", "db_key": "OUTPUTSUFFIX", "db_staff_only": false}}, {"pk": 678, "model": "help.helpentry", "fields": {"db_entrytext": "OUTPUT_DATABASE\n\n  CONFIG PARAMETER: output_database <pathname>\n  DEFAULT: none\n\n  Specifies the file to which the database is to be written when writing\n  checkpoint dumps or writing the final dump after receiving a @shutdown\n  command.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: @dump, @shutdown, checkpoint_database, input_database.\n\n", "db_key": "OUTPUT_DATABASE", "db_staff_only": false}}, {"pk": 679, "model": "help.helpentry", "fields": {"db_entrytext": "OUTPUT_LIMIT\n\n  CONFIG PARAMETER: output_limit <amount>\n  DEFAULT: 16384\n\n  Specifies how many bytes should be output before the output is flushed\n  and characters are lost.\n\n", "db_key": "OUTPUT_LIMIT", "db_staff_only": false}}, {"pk": 357, "model": "help.helpentry", "fields": {"db_entrytext": "PAGE\n\n  COMMAND: page[/noeval] <players>=[<prefix>]<message>\n           page[/noeval] =[<prefix>]<message>\n           page[/noeval] [<prefix>]<message>\n           page <players>=\n           page\n\n  This command sends <message> to <players>.  The second and third form sends\n  the given message to the same <players> given on the previous page command.\n  The second form is useful when the message itself contains an equal sign.\n\n  The fourth form indicates that you are paging sans-message.  The format is\n  somewhat more appealing than an empty message.\n\n  The last form reports to you the list of players you paged last time.\n\n  <Players> is one or more player names or aliases delimited by any\n  combination of spaces or commas.  Double-quotes can be used around any name\n  containing spaces.  A player's name may also be any unique prefix of players\n  who are currently on the WHO list.  Any duplicate players from your list are\n  removed.\n\n{ 'help page2' for more }\n\n", "db_key": "PAGE", "db_staff_only": false}}, {"pk": 358, "model": "help.helpentry", "fields": {"db_entrytext": "PAGE (continued)\n\n  Examples:\n\n    > page me=Test\n    Foo pages: Test\n    You paged Foo with 'Test'.\n\n    > page me=:tests.\n    From afar, Foo tests.\n    Long distance to Foo: Foo tests.\n\n    > page me=;'s character tests.\n    From afar, Foo's character tests.\n    Long distance to Foo: Foo's character tests.\n\n  If your Idle attribute is set to something, then it is sent to anyone who\n  successfully pages you after you have become idle by the period set by your\n  @idletimeout.  This is useful for when you are away from your terminal for\n  a short while.\n\n  Also, you can selectively disable pages from certain players with the\n  '@lock/page' command (players must pass the lock in order to page you). If\n  someone cannot page you, they will be sent a message including your Reject\n  attribute if they try.  If someone pages you while you are not connected,\n  they are sent a message including your Away attribute.\n\n{ 'help page3' for more. }\n\n", "db_key": "PAGE2", "db_staff_only": false}}, {"pk": 359, "model": "help.helpentry", "fields": {"db_entrytext": "PAGE (continued)\n\n  You can also page many players at one time, where all the players you page\n  will see the message.\n\n  Example:\n    > p Foo, Bar, \"Long John Silver\"= Hi\n    You paged (Foo, Bar, Long John Silver) with 'Hi'.\n    To (Foo, Bar), Widget pages: Hi\n\n  You only need to type the player-list once, then the next time you page that\n  player or set of players, you can abbreviate it with:\n\n    \"p :waves.\"  or,\n    \"p I'm back.\"\n\n  This will work until you page another player or list of players.\n\n  Related Topics: pose, say, whisper, :, ;, \", @pemit, @away, @idle,\n      @idletimeout, @reject.\n\n", "db_key": "PAGE3", "db_staff_only": false}}, {"pk": 680, "model": "help.helpentry", "fields": {"db_entrytext": "PAGE_COST\n\n  CONFIG PARAMETER: page_cost <amount>\n  DEFAULT: 10\n\n  Specifies the cost of using the page command.\n\n  Related Topics: page.\n\n", "db_key": "PAGE_COST", "db_staff_only": false}}, {"pk": 681, "model": "help.helpentry", "fields": {"db_entrytext": "PARANOID_ALLOCATE\n\n  CONFIG PARAMETER: paranoid_allocate <yes/no>\n  DEFAULT: no\n\n  Controls whether or not the game performs a consistency check on the entire\n  set of xbuf buffers each time one is allocated or freed.  This check\n  involves making sure that nobody has written to the memory immediately\n  before and after each buffer.  Normally, only the buffer being allocated or\n  freed is checked.\n\n", "db_key": "PARANOID_ALLOCATE", "db_staff_only": false}}, {"pk": 360, "model": "help.helpentry", "fields": {"db_entrytext": "PARENT\n\n  FLAG: PARENT()  (+)\n\n  This flag is not associated with any hardcode behavior other than to record\n  that it is present or absent from an object. Softcode is free to use this\n  flag for any purpose it sees fit.\n\n  This flag is only available with --enable-firanmux.\n\n  Related Topics:\n\n", "db_key": "PARENT", "db_staff_only": false}}, {"pk": 361, "model": "help.helpentry", "fields": {"db_entrytext": "PARENT OBJECTS\n\n  TOPIC: PARENT OBJECTS\n\n  Parent objects provide a way for several objects to inherit common\n  attributes, exits, and $-commands from a single object, so that changing\n  the parent object affects all of its children.  When searching for\n  attributes or exits, first the object itself is checked, then the parent\n  is checked only if the object does not have what was searched for.\n\n  Any attribute the parent object has will be passed down to its children,\n  if they don't already have one. For instance, if the child object has no\n  description, it will inherit the description of its parent.\n\n  Any exits the parent object has will show up in the exit list of the\n  child, and may be used as normal exits.\n\n  The parent is searched for $-commands as well as the child, and only\n  attributes that are unique to the parent are checked, so that conflicting\n  attribute names are skipped.  If both have an attribute named \"cmd1\",\n  only the child's \"cmd1\" attributes is checked for a $-command.\n\n{ 'help parent2' for more }\n\n", "db_key": "PARENT OBJECTS", "db_staff_only": false}}, {"pk": 362, "model": "help.helpentry", "fields": {"db_entrytext": "PARENT ROOMS\n\n  Parent rooms are a subset of zones. If a room is used as a zone object,\n  it is a parent room (PR). PRs are like local \"master\" rooms. Exits in\n  the PR are global to that zone, and $commands on objects in the PR are\n  global to that zone. Parent rooms are only defined if globals are used.\n  Parent rooms should only be used for very large zones which have a lot\n  of global exits. Otherwise, a ZMO thing should be used, because command\n  evaluation on a parent room is slower than command evaluation on a ZMO.\n  Large numbers of parent rooms may slow down the game significantly.\n\n  Related Topics: ZONES and COMMAND EVALUATION\n\n", "db_key": "PARENT ROOMS", "db_staff_only": false}}, {"pk": 363, "model": "help.helpentry", "fields": {"db_entrytext": "PARENT OBJECTS (continued)\n\n  A parent object may itself have a parent, up to a configurable limit\n  (usually 10 levels).  The parent need not be the same type as its children,\n  and flags and locks are not inherited from parent objects.  You may not\n  create parent loops.\n\n  Related Topics: @parent, parent().\n\n", "db_key": "PARENT2", "db_staff_only": false}}, {"pk": 364, "model": "help.helpentry", "fields": {"db_entrytext": "PARENT_OK\n\n  FLAG: PARENT_OK(Y)  ()\n\n  If an object is set PARENT_OK, then any other object that passes the object's\n  ParentLock may make this object a parent of any object that it controls.\n  Caution: allowing others to use your objects as parents lets them read the\n  attributes on the object (as well as any parents of the object).\n\n  Related Topics: @lock/parent.\n\n", "db_key": "PARENT_OK", "db_staff_only": false}}, {"pk": 682, "model": "help.helpentry", "fields": {"db_entrytext": "PARENT_RECURSION_LIMIT\n\n  CONFIG PARAMETER: parent_recursion_limit <num>\n  DEFAULT: 10\n\n  This directive specifies how far back to check parents for commands\n  and attributes.\n\n", "db_key": "PARENT_RECURSION_LIMIT", "db_staff_only": false}}, {"pk": 683, "model": "help.helpentry", "fields": {"db_entrytext": "PAYCHECK\n\n  CONFIG PARAMETER: paycheck <amount>\n  DEFAULT: 0\n\n  Specifies the default amount of money that players receive each day they\n  connect.  This parameter may be overridden by setting the ALLOWANCE\n  attribute on the player to a different value.\n\n  Related Topics: @allowance, earn_limit, starting_money.\n\n", "db_key": "PAYCHECK", "db_staff_only": false}}, {"pk": 684, "model": "help.helpentry", "fields": {"db_entrytext": "PCREATE_PER_HOUR\n\n  CONFIG PARAMETER: pcreate_per_hour <maximum>\n  DEFAULT: 100\n\n  Specifies the maximum number of player object creations that can be\n  performed game-wide (including from the connect screen and via the @pcreate\n  command).  Attempts to create more than this limit are denied.\n\n  Related Topics: mail_per_hour, user_attr_per_hour\n\n", "db_key": "PCREATE_PER_HOUR", "db_staff_only": false}}, {"pk": 365, "model": "help.helpentry", "fields": {"db_entrytext": "PEERING\n\n  The PEERING flag is used to denote an object which is looking into\n  another realm but is not visible there. It requires the attribute\n  PEERING_REALM be set with a value of the realm being watched. The\n  value MUST be in all uppercase letters.\n\n", "db_key": "PEERING", "db_staff_only": false}}, {"pk": 685, "model": "help.helpentry", "fields": {"db_entrytext": "PEMIT_ANY_OBJECT\n\n  CONFIG PARAMETER: pemit_any_object <yes/no>\n  DEFAULT: no\n\n  Indicates whether or not players may @pemit to faraway objects they do not\n  control.  It does not affect @pemits to faraway players, the\n  pemit_far_players directive is used for that purpose.\n\n  Related Topics: pemit_far_players.\n\n", "db_key": "PEMIT_ANY_OBJECT", "db_staff_only": false}}, {"pk": 686, "model": "help.helpentry", "fields": {"db_entrytext": "PEMIT_FAR_PLAYERS\n\n  CONFIG PARAMETER: pemit_far_players <yes/no>\n  DEFAULT: no\n\n  Controls whether or not players may use the @pemit command to send messages\n  to other connected players that are not in the same room.  The rules and\n  costs for this form of @pemit are the same as for page.\n\n  Related Topics: pemit_any_object.\n\n", "db_key": "PEMIT_FAR_PLAYERS", "db_staff_only": false}}, {"pk": 687, "model": "help.helpentry", "fields": {"db_entrytext": "PERMISSIONS\n\n  Access to many MUX features is controlled by a set of permissions, which\n  can usually be changed via the configuration file or the @admin command.\n\n  There are three different senses of Wizard:\n\n    1) 'WIZARD' means the WIZARD flag,\n\n    2) 'Wizard' means Wizard-level authority which can be achieved either by\n       being set WIZARD or by inheriting that authority from a WIZARD-owned\n       object with the INHERIT flag, and\n\n    3) Wizard(#1) who is always set WIZARD and has other special privileges.\n\n\n  The following list uses two of those senses: 'Wizard' and Wizard(#1).\n\n  This is a list of the valid permissions and their meanings:\n\n    builder        - Must be Wizard, ROYALTY, or have the BUILDER power.\n    dark           - Feature is not shown but is still available (1).\n    disabled       - No one can use this feature.\n\n{ 'wizhelp permissions2' for more }\n\n", "db_key": "PERMISSIONS", "db_staff_only": false}}, {"pk": 688, "model": "help.helpentry", "fields": {"db_entrytext": "PERMISSIONS (continued)\n\n    global_build   - Requires the BUILDER power, Wizard/ROYALTY, or for\n                     building to be allowed game-wide.\n    global_interp  - Requires that global interpretation be turned on.\n    god            - Only #1 may use this feature.\n    head           - Must be set HEAD to use this feature.\n    immortal       - Must be set IMMORTAL or set INHERIT with IMMORTAL owner.\n\n\n    need_contents  - Only players, things, and rooms may use this feature.\n    need_location  - Only players and things may use this feature.\n    need_player    - Only players may use this feature.\n    no_haven       - Non-Wizard players with owners set HAVEN may not use this\n                     feature.\n    no_immobile    - Non-Wizard players with owners set IMMOBILE may not use\n                     this feature (2).\n    no_restricted  - Non-Wizard players with owners set RESTRICTED may not use\n                     this feature (2).\n    no_robot       - Non-Wizard players set ROBOT may not use this feature.\n    no_slave       - Non-Wizard players with owners set SLAVE may not use this\n                     feature.\n\n{ 'wizhelp permissions3' for more }\n\n", "db_key": "PERMISSIONS2", "db_staff_only": false}}, {"pk": 689, "model": "help.helpentry", "fields": {"db_entrytext": "PERMISSIONS (continued)\n\n    no_suspect     - Non-Wizard players with owners set SUSPECT may not use\n                     this feature.\n    no_guest       - Non-Wizards must not possess the GUEST power in order to\n                     use this feature.\n    no_uninspected - Only things which have been inspected can use this\n                     feature.\n    robot          - Only players set ROBOT can use this feature.\n    staff          - Only STAFF/ROYALTY/IMMORTAL players can use this feature.\n    static         - Nothing is allowed to use this feature after the server\n                     starts.  This is useful for controlling something in the\n                     configuration file that you do not want to be\n                     controllable via the @admin command.\n    uninspected    - Only things marked uninspected can use this feature.\n    wizard         - Only Wizards may use this feature.\n\n  Footnotes:\n\n    (1) The dark permission is not available with --enable-firanmux.\n    (2) The no_immutable and no_restricted permissions are only available with\n        --enable-firanmux.\n\n", "db_key": "PERMISSIONS3", "db_staff_only": false}}, {"pk": 690, "model": "help.helpentry", "fields": {"db_entrytext": "PERMIT_SITE\n\n  CONFIG PARAMETER: permit_site <site>\n\n  Indicates that connections are to be accepted and registration is not to be\n  enforced from sites whose address matches the specified <site>.  This\n  directive is typically used to enable connections from a few selected hosts\n  or subnets that would otherwise be disallowed by a forbid_site directive.\n  The default is all sites permitted, none forbidden.\n\n  Related Topics: badsite_file, forbid_site, register_site, guest_site\n                  SITE LISTS, SITE NOTATION.\n\n", "db_key": "PERMIT_SITE", "db_staff_only": false}}, {"pk": 366, "model": "help.helpentry", "fields": {"db_entrytext": "PIPING\n\n  Command piping in MUX is similar to piping in a UNIX shell. You string two\n  or more commands together using the ;| symbol, much as you would using a\n  semicolon. The output from the previous command in a pipe is accessible\n  using the %| substitution. This output contains the raw ASCII codes that\n  would normally be directly output to your terminal. You may use the\n  translate() function to either convert the raw characters in the output to\n  MUX substitutions, or strip them out altogether. Like the semicolon, the ;|\n  symbol in MUX is taken literally if you type it on the terminal. Currently\n  you may only pipe 20 commands in a row.\n\n  Examples:\n  > &MAILDESC me=$+maildesc *=*:look %0 ;| @mail/quick\n                  %1/Description=[translate(%|,1)]\n  > &SAYDESC me=$+saydesc *:look %0 ;| say %r%|\n  > +saydesc me\n  You say, \"\n  Idoru(#5PXMWc)\n  You see nothing special.\n  \"\n\n  Related Topics: translate().\n\n", "db_key": "PIPING", "db_staff_only": false}}, {"pk": 367, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER\n\n  FLAG: PLAYER(P)  ()\n\n  The PLAYER flag identifies you as a player.  Except for the @toad command,\n  this flag cannot be reset.  Regular players, robots, and guests are all\n  player objects.\n\n  Related Topics: @toad (in wizhelp), OBJECT TYPES\n\n", "db_key": "PLAYER", "db_staff_only": false}}, {"pk": 691, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_FLAGS\n\n  CONFIG PARAMETER: player_flags <flags>\n  DEFAULT: blank\n\n  Modifies the set of flags that a player receives when it is created via the\n  @pcreate command or via the connection screen.  Flags prefixed by a ! remove\n  the indicated flag from the set.\n\n  Related Topics: @list, exit_flags, robot_flags, room_flags, thing_flags.\n\n", "db_key": "PLAYER_FLAGS", "db_staff_only": false}}, {"pk": 692, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_LISTEN\n\n  CONFIG PARAMETER: player_listen\n  DEFAULT: no\n\n  Indicates whether the Listen, Aahear, Ahear, and Amhear attributes on\n  player objects are to be obeyed.\n\n", "db_key": "PLAYER_LISTEN", "db_staff_only": false}}, {"pk": 693, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_MATCH_OWN_COMMANDS\n\n  CONFIG PARAMETER: player_match_own_commands <yes/no>\n  DEFAULT: no\n\n  Specifies whether or not players should check themselves for $-commands.\n  This parameter is only checked if the match_own_commands parameter is\n  set to yes.\n\n  Related Topics: match_own_commands.\n\n", "db_key": "PLAYER_MATCH_OWN_COMMANDS", "db_staff_only": false}}, {"pk": 694, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_NAME_CHARSET\n\n  CONFIG PARAMETER: player_name_charset [!]<charset> [[!]<charset>]...\n  DEFAULT: all (Unicode)\n\n    ascii     - Restrict names to use ASCII.\n    iso8859-1 - Restrict names to use iso8859-1.\n    latin-1   - Restrict names to use latin-1 (same as iso8859-1).\n\n  If no restrictions are made, the Unicode set is used.  If more than one\n  restriction is made, the union of the two are used.  That is, as long as a\n  character appears in any of the character sets, it is allowed.\n\n  Related Topics: attr_name_charset, exit_name_charset, room_name_charset,\n                  thing_name_charset.\n\n", "db_key": "PLAYER_NAME_CHARSET", "db_staff_only": false}}, {"pk": 695, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_NAME_SPACES\n\n  CONFIG PARAMETER: player_name_spaces\n  DEFAULT: yes\n\n  Specifies whether or not player names are permitted to contain spaces.\n\n", "db_key": "PLAYER_NAME_SPACES", "db_staff_only": false}}, {"pk": 696, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_PARENT\n\n  CONFIG PARAMETER: player_parent <dbref>\n  DEFAULT:  NOTHING\n\n  Sets the parent object for all newly created players on the game.   Existing\n  players in the game database are not effected.   If <dbref> is not a valid\n  object, the setting is ignored.\n\n  Related Topics: exit_parent, room_parent, thing_parent\n\n", "db_key": "PLAYER_PARENT", "db_staff_only": false}}, {"pk": 697, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_QUEUE_LIMIT\n\n  CONFIG PARAMETER: player_queue_limit\n  DEFAULT: 100\n\n  Sets the maximum number of commands that non-wizard players may have on the\n  queue at one time.  An attempt to queue more commands than allowed will\n  halt the object performing the command.\n\n", "db_key": "PLAYER_QUEUE_LIMIT", "db_staff_only": false}}, {"pk": 698, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_QUOTA\n\n  CONFIG PARAMETER: player_quota <amount>\n  DEFAULT: 1\n\n  Sets how much quota it costs to create a robot player (and also how much the\n  remaining quota is increased when a robot is @destroyed.\n\n  Related Topics: @quota, exit_quota, room_quota, thing_quota, QUOTAS.\n\n", "db_key": "PLAYER_QUOTA", "db_staff_only": false}}, {"pk": 699, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_STARTING_HOME\n\n  CONFIG PARAMETER: player_starting_home\n  DEFAULT: <player_starting_room>\n\n  Specifies the room to which the home of new players is set.  If this\n  parameter has not been set, then the value of the player_starting_room\n  parameter is used instead.\n\n  Related Topics: default_home, player_starting_room, @pcreate, player_flags.\n\n", "db_key": "PLAYER_STARTING_HOME", "db_staff_only": false}}, {"pk": 700, "model": "help.helpentry", "fields": {"db_entrytext": "PLAYER_STARTING_ROOM\n\n  CONFIG PARAMETER: player_starting_room\n  DEFAULT: 0\n\n  Specifies the room that new players start out in.  If the\n  player_starting_home parameter has not been set, then player_starting_room\n  is used for both.\n\n  Related Topics: player_starting_home, @pcreate, player_flags.\n\n", "db_key": "PLAYER_STARTING_ROOM", "db_staff_only": false}}, {"pk": 701, "model": "help.helpentry", "fields": {"db_entrytext": "PORT\n\n  CONFIG PARAMETER: port <port1> [<port2> [<port3> ...]]\n  DEFAULT: 2860\n\n  Specifies the IP port(s) on which the game listens for new connections.\n\n", "db_key": "PORT", "db_staff_only": false}}, {"pk": 368, "model": "help.helpentry", "fields": {"db_entrytext": "POSE\n\n  COMMAND: pose[/<switches>] <message>\n\n  Displays <message> to everyone in your current room, preceded by your name\n  and optionally a space.\n\n  Example:\n    >pose jumps for joy.\n      Player jumps for joy.\n\n  The following switches are available:\n\n     /default - (default) Put a space between your name and the message\n                (ie, display '<name> <message>').\n     /nospace - Don't put a space between your name and the message\n                (ie, display '<name><message>').\n\n  Related Topics: page, say, whisper, :, ;, \".\n\n", "db_key": "POSE", "db_staff_only": false}}, {"pk": 702, "model": "help.helpentry", "fields": {"db_entrytext": "POSTDUMP_MESSAGE\n\n  CONFIG PARAMETER: postdump_message <message>\n  DEFAULT: blank\n\n  Sets the message that is sent to everyone after a database dump\n  whether automatically or via the @dump command.\n\n  Related Topics: @dump, dump_message.\n\n", "db_key": "POSTDUMP_MESSAGE", "db_staff_only": false}}, {"pk": 369, "model": "help.helpentry", "fields": {"db_entrytext": "POWERS LIST\n\n  announce          Can use the @wall command.\n  boot              Can use the @boot command.\n  builder           Can build, if the builder power is enabled.\n  chown_anything    Can @chown anything to anyone.\n  comm_all          Like a wizard with respect to channels.\n  control_all       Can modify any object in the database.\n  expanded_who      Sees the wizard WHO, and SESSION commands.\n  find_unfindable   Can locate unfindable people.\n  free_money        Unlimited money.\n  free_quota        Unlimited quota.\n  guest             Is this a guest character?\n  halt              Can @halt anything, and @halt/all.\n  hide              DARK flag is effective for hiding.\n  idle              No idle timeout.\n  long_fingers      Can get, look, whisper, etc from a distance.\n\n{ 'help powers list2' for more }\n\n", "db_key": "POWERS LIST", "db_staff_only": false}}, {"pk": 370, "model": "help.helpentry", "fields": {"db_entrytext": "POWERS LIST (continued)\n\n  monitor           Can set or reset monitor flag.\n  pass_locks        Can successfully pass all locks.\n  poll              Can set the @poll.\n  prog              Can use @program on players other than them self.\n  search            Can @search anyone.\n  see_all           Can examine and see attributes like a wizard.\n  see_hidden        Can see hidden players and DARK wizards.\n  see_queue         Can @ps/all or @ps any player.\n  siteadmin         Can @shutdown and @restart.\n  stat_any          Can @stat any player.\n  steal_money       Can give negative money.\n  tel_anywhere      Can teleport anywhere.\n  tel_anything      Can teleport anything (includes tel_anywhere)\n  unkillable        Cannot be killed with the 'kill' command.\n\n  Related Topics: @power\n\n", "db_key": "POWERS LIST2", "db_staff_only": false}}, {"pk": 703, "model": "help.helpentry", "fields": {"db_entrytext": "POWER_ALIAS\n\n  CONFIG PARAMETER: power_alias <alias> <powername>\n\n  Defines <alias> as a synonym for the power <powername>.\n\n  Related Topics: alias, flag_alias, function_alias.\n\n", "db_key": "POWER_ALIAS", "db_staff_only": false}}, {"pk": 704, "model": "help.helpentry", "fields": {"db_entrytext": "PUBLIC_CHANNEL\n\n  CONFIG PARAMETER: public_channel <name>\n  DEFAULT: Public\n\n  Specifies the name of the channel that new players join when they are\n  created. You must have previously created the channel. To disable this\n  feature, simply set this parameter to nothing.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guests_channel, guests_channel_alias, public_channel_alias\n\n", "db_key": "PUBLIC_CHANNEL", "db_staff_only": false}}, {"pk": 705, "model": "help.helpentry", "fields": {"db_entrytext": "PUBLIC_CHANNEL_ALIAS\n\n  CONFIG PARAMETER: public_channel_alias <name>\n  DEFAULT: pub\n\n  Specifies the name of the channel alias that new players join when they are\n  created.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: guests_channel, guests_channel_alias, public_channel\n\n", "db_key": "PUBLIC_CHANNEL_ALIAS", "db_staff_only": false}}, {"pk": 706, "model": "help.helpentry", "fields": {"db_entrytext": "PUBLIC_FLAGS\n\n  CONFIG PARAMETER: public_flags <yes/no>\n  DEFAULT: yes\n\n  If enabled, indicates that players may get the flags of any object with the\n  flag(s) function call.  Otherwise, they may only get the flags for objects\n  that are examinable by them.\n\n  Related Topics: flags().\n\n", "db_key": "PUBLIC_FLAGS", "db_staff_only": false}}, {"pk": 371, "model": "help.helpentry", "fields": {"db_entrytext": "PUEBLO\n\n  @VRML_URL is the URL of a VRML scene for a particular room.\n  @HTDesc is an alternate description for players who are logged in using\n       Pueblo.\n  @pemit/html and @emit/html allow outputting unescaped HTML strings.\n\n  Please see http://www.chaco.com/pueblo/doc/enhancing.html for more details.\n\n  Related Topics: HTML, @htdesc, @vrml_url\n\n", "db_key": "PUEBLO", "db_staff_only": false}}, {"pk": 707, "model": "help.helpentry", "fields": {"db_entrytext": "PUEBLO_MESSAGE\n\n  CONFIG PARAMETER: pueblo_message <message>\n  DEFAULT: \"</xch_mudtext><img xch_mode=html>\"\n\n  Sets the message that is sent to Pueblo clients as a reponse to the\n  PUEBLOCLIENT command.\n\n  Related Topics: pueblo.\n\n", "db_key": "PUEBLO_MESSAGE", "db_staff_only": false}}, {"pk": 372, "model": "help.helpentry", "fields": {"db_entrytext": "PUPPET\n\n  FLAG: PUPPET(p)  ()\n\n  @set <object> = puppet. Causes an object to grow eyes and\n  ears, and relay all it sees and hears to its owner.\n\n  Related Topics: @force, PUPPETS\n\n", "db_key": "PUPPET", "db_staff_only": false}}, {"pk": 373, "model": "help.helpentry", "fields": {"db_entrytext": "PUPPETS\n\n  An object is made into a puppet by doing '@set <object>=puppet', once an\n  object is a puppet it will relay all that it sees and hears to its master.\n  All objects created by a puppet are owned by its master, when puppets spend\n  or earn money, they use their master's money supply.  In order to prevent\n  puppets from screwing up puzzles, objects may have the KEY flag set, this\n  will prevent puppets from picking the object up. A puppet may be commanded\n  by its master by '@force <object>=command', or by the shorthand version,\n  '#<number of puppet> command'.  The puppet flag is handy for debugging, as\n  it allows you to see the result messages your object generates.\n\n  Example:\n  @force fred=\"hi there.  -or-  #4342 \"hi there.\n\n  Related Topics: VERBOSE.\n\n", "db_key": "PUPPETS", "db_staff_only": false}}, {"pk": 374, "model": "help.helpentry", "fields": {"db_entrytext": "QUELL\n\n  FLAG: QUELL()  ()\n\n  Any object set QUELL will disregard any WIZARD flag it has.  That is, objects\n  that do not have a WIZARD flag are not affected by the QUELL flag, and\n  objects that do have a WIZARD flag act as if they do not have it. QUELL also\n  prevents objects from inheriting WIZARD abilities from their owners.\n\n  The main purpose of this flag is to allow Wizards to temporarily become\n  \"mortal\" (non-wizardly) for purposes of testing code or whatnot.  With the\n  QUELL flag set, they are for all intents and purposes just like a non-Wizard\n  character.  This allows a Wizard to turn her wizbit on and off, sorta.\n\n  This flag is only available with --enable-firanmux.\n\n  Related Topics:\n\n", "db_key": "QUELL", "db_staff_only": false}}, {"pk": 708, "model": "help.helpentry", "fields": {"db_entrytext": "QUEUE_ACTIVE_CHUNK\n\n  CONFIG PARAMETER: queue_active_chunk <num>\n  DEFAULT: 10\n\n  Specifies the number of commands to be run from the player queue when the\n  check for network traffic indicates that there is data needing to be\n  read from or written to the network.\n\n  Related Topics: queue_idle_chunk.\n\n", "db_key": "QUEUE_ACTIVE_CHUNK", "db_staff_only": false}}, {"pk": 709, "model": "help.helpentry", "fields": {"db_entrytext": "QUEUE_IDLE_CHUNK\n\n  CONFIG PARAMETER: queue_idle_chunk <num>\n  DEFAULT: 10\n\n  Specifies the number of commands to be run from the player queue when the\n  check for network traffic indicates that there is no data needing to be\n  read from or written to the network.\n\n  Related Topics: queue_active_chunk.\n\n", "db_key": "QUEUE_IDLE_CHUNK", "db_staff_only": false}}, {"pk": 375, "model": "help.helpentry", "fields": {"db_entrytext": "QUIET\n\n  FLAG: QUIET(Q)  ()\n\n  This flag when set on yourself prevents you from hearing\n  the 'set' or 'triggered' messages from any objects you own.  When\n  set on an object, only that object will not relay its messages.\n\n  Related Topics:\n\n", "db_key": "QUIET", "db_staff_only": false}}, {"pk": 710, "model": "help.helpentry", "fields": {"db_entrytext": "QUIET_LOOK\n\n  CONFIG PARAMETER: quiet_look <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not players are shown the attributes set on an object\n  when they look at it.  Not recommended.\n\n", "db_key": "QUIET_LOOK", "db_staff_only": false}}, {"pk": 711, "model": "help.helpentry", "fields": {"db_entrytext": "QUIET_WHISPER\n\n  CONFIG PARAMETER: quiet_whisper <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not whispers are completely invisible except to the\n  whispered-to player, or if a '<whisperer> whispers something to\n  <recipient>.' message is displayed to everyone else in the same room.\n\n  Related Topics: whisper.\n\n", "db_key": "QUIET_WHISPER", "db_staff_only": false}}, {"pk": 376, "model": "help.helpentry", "fields": {"db_entrytext": "QUIT\n\n  COMMAND: quit\n\n  Logs you out and disconnects you from the game.\n\n  Related Topics: logout.\n\n", "db_key": "QUIT", "db_staff_only": false}}, {"pk": 712, "model": "help.helpentry", "fields": {"db_entrytext": "QUIT_FILE\n\n  CONFIG PARAMETER: quit_file <filename>\n  DEFAULT: text/quit.txt\n\n  Specifies the name of the file that is displayed to users after they QUIT\n  but before the network connection is closed.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: QUIT, @readcache.\n\n", "db_key": "QUIT_FILE", "db_staff_only": false}}, {"pk": 713, "model": "help.helpentry", "fields": {"db_entrytext": "QUOTAS\n\n  CONFIG PARAMETER: quotas <yes/no>\n  DEFAULT: no\n\n  Indicates whether or not building quotas are enforced and maintained.\n  Quotas are stored as a relative number, ie. number of objects that the\n  player may create, not the total number that the player may create.  If\n  quotas are turned off and turned back on later, any building or @destroying\n  that occurs in the interim does not affect the quotas.\n\n  Related Topics: @create, @destroy, @dig, @open, @quota, QUOTAS.\n\n", "db_key": "QUOTAS", "db_staff_only": false}}, {"pk": 714, "model": "help.helpentry", "fields": {"db_entrytext": "RAW_HELPFILE\n\n  CONFIG PARAMETER: raw_helpfile <command> <pathname>\n  DEFAULT: none\n\n  This is similiar to the 'helpfile' configuration directive, except that\n  the help topics contained in <pathname> are not evaluted by the parser\n  before being shown to the player.\n\n  To prevent access to arbitrary files after the server has started, this\n  directive cannot be used by via @admin after the server has started.\n\n  Related Topics: helpfile\n\n", "db_key": "RAW_HELPFILE", "db_staff_only": false}}, {"pk": 377, "model": "help.helpentry", "fields": {"db_entrytext": "READ\n\n  COMMAND: read [<object>]\n\n  Displays the description of <object>, or the room you're in if you don't\n  specify an object.  Specifying object as <name> or #<dbref> or 'me' or\n  'here' is legal.  You can also use look to look at objects held by other\n  people, just use 'read <person>'s <object>'.\n\n  You may use the /outside switch to look at the location of your current\n  location (useful if you are inside a vehicle or other object).  You may\n  also look at other objects in the 'outer' location, but you may not\n  use the possessive form with the /outside switch (ie: \"read/outside\n  <person>'s <object>\" won't work).\n\n  'look' is the same as 'read'.\n\n", "db_key": "READ", "db_staff_only": false}}, {"pk": 715, "model": "help.helpentry", "fields": {"db_entrytext": "READ_REMOTE_DESC\n\n  CONFIG PARAMETER: read_remote_desc <yes/no>\n  DEFAULT: no\n\n  Indicates whether or not the descriptions of faraway objects are available\n  to players that don't control them via the examine command and get()\n  function.\n\n  Related Topics: examine, get().\n\n", "db_key": "READ_REMOTE_DESC", "db_staff_only": false}}, {"pk": 716, "model": "help.helpentry", "fields": {"db_entrytext": "READ_REMOTE_NAME\n\n  CONFIG PARAMETER: read_remote_name <yes/no>\n  DEFAULT: no\n\n  Indicates whether or not the names of faraway objects are available\n  to players that don't control them via the examine command and get()\n  function.\n\n  Related Topics: examine, get().\n\n", "db_key": "READ_REMOTE_NAME", "db_staff_only": false}}, {"pk": 717, "model": "help.helpentry", "fields": {"db_entrytext": "REALITY LEVELS\n\n  Reality levels are defined if you compile with the -DREALITY_LVLS\n  option.  Once enabled, you use the .conf admin parameter 'reality_level'\n  to define new reality levels.  You can only have a total of 32 reality\n  levels defined.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n  Related topics: @rxlevel, @txlevel, def_player_rx, def_player_tx,\n                 def_thing_rx, def_thing_tx, def_room_rx, def_room_tx,\n                 reality_level, CANSEE()\n\n", "db_key": "REALITY LEVELS", "db_staff_only": false}}, {"pk": 718, "model": "help.helpentry", "fields": {"db_entrytext": "REALITY_LEVEL\n\n  CONFIG PARAMETER: reality_level <name> <value> [<desc attribute>]\n  DEFAULT: none\n\n  Defines a reality level, named <name> and with bitvalue <value>. If you\n  specify <desc attribute>, it will be used in place of @desc for the 'look'\n  command when a match is found for the level. Can be used only in the\n  configuration file.  When a reality_level is defined, it automatically\n  keeps a tally of those defined.  You can currently only have 32 total\n  reality levels defined.\n\n  NOTE: This feature is not available unless reality levels was enabled at\n  compile-time.\n\n  Example:\n    reality_level real  1 desc\n    reality_level ooc   2 desc\n    reality_level build 4 desc\n    reality_level umbra 8 umbra_desc\n\n", "db_key": "REALITY_LEVEL", "db_staff_only": false}}, {"pk": 378, "model": "help.helpentry", "fields": {"db_entrytext": "REGEXP AMBIGUITY\n\n  TOPIC: Regular Expression Ambiguity\n\n          If a regular expression could match two different parts of\n          the input string, it will match the one which begins\n          earliest.  If both begin in the same place but match\n          different lengths, or match the same length in different\n          ways, life gets messier, as follows.\n\n          In general, the possibilities in a list of branches are\n          considered in left-to-right order, the possibilities for\n          `*', `+', and `?' are considered longest-first, nested\n          constructs are considered from the outermost in, and\n          concatenated constructs are considered leftmost-first.  The\n          match that will be chosen is the one that uses the earliest\n          possibility in the first choice that has to be made.  If\n          there is more than one choice, the next will be made in the\n          same manner (earliest possibility) subject to the decision\n          on the first choice.  And so forth.\n\n{ 'help regexp ambiguity2' for more }\n\n", "db_key": "REGEXP AMBIGUITY", "db_staff_only": false}}, {"pk": 379, "model": "help.helpentry", "fields": {"db_entrytext": "REGEXP AMBIGUITY (continued)\n\n          For example, `(ab|a)b*c' could match `abc' in one of two\n          ways.  The first choice is between `ab' and `a'; since `ab'\n          is earlier, and does lead to a successful overall match, it\n          is chosen.  Since the `b' is already spoken for, the `b*'\n          must match its last possibility-the empty string-since it\n          must respect the earlier choice.\n\n          In the particular case where no `|'s are present and there\n          is only one `*', `+', or `?', the net effect is that the\n          longest possible match will be chosen.  So `ab*', presented\n          with `xabbbby', will match `abbbb'.  Note that if `ab*' is\n          tried against `xabyabbbz', it will match `ab' just after\n          `x', due to the begins-earliest rule.  (In effect, the\n          decision on where to start the match is the first choice to\n          be made, hence subsequent choices must respect it even if\n          this leads them to less-preferred alternatives.)\n\n", "db_key": "REGEXP AMBIGUITY2", "db_staff_only": false}}, {"pk": 380, "model": "help.helpentry", "fields": {"db_entrytext": "REGEXP EXAMPLES\n\n  TOPIC: Regular Expression Examples\n\n  The regexp pattern '.' is equivalent to the wildcard '?'; it matches\n  one and only one of an arbitrary character.\n\n  The regexp pattern '.+' is equivalent to the wildcard '*'; it matches\n  one or more arbitrary characters. To match zero or more arbitrary\n  characters, the regexp pattern is '.*'.\n\n  To match a string of numbers, use:       [0-9]+\n  To match a string of letters only, use:  [A-Za-z]+\n\n  Related Topics: regexp syntax\n\n", "db_key": "REGEXP EXAMPLES", "db_staff_only": false}}, {"pk": 381, "model": "help.helpentry", "fields": {"db_entrytext": "REGEXP SYNTAX\n\n  TOPIC: Regular Expression Syntax\n\n  The following explanation is taken from Henry Spencer's regexp(3)\n  package, the regular expression library used in TinyMUX up to version\n  2.2. After that, the PCRE package is used, which has many more features.\n  See a book that covers Perl's regular expressions for details.\n\n          A regular expression is zero or more branches, separated by\n          `|'.  It matches anything that matches one of the branches.\n\n          A branch is zero or more pieces, concatenated.  It matches a\n          match for the first, followed by a match for the second,\n          etc.\n\n          A piece is an atom possibly followed by `*', `+', or `?'.\n          An atom followed by `*' matches a sequence of 0 or more\n          matches of the atom.  An atom followed by `+' matches a\n          sequence of 1 or more matches of the atom.  An atom followed\n          by `?' matches a match of the atom, or the null string.\n\n{ 'help regexp syntax2' for more }\n\n", "db_key": "REGEXP SYNTAX", "db_staff_only": false}}, {"pk": 382, "model": "help.helpentry", "fields": {"db_entrytext": "REGEXP SYNTAX (continued)\n\n          An atom is a regular expression in parentheses (matching a\n          match for the regular expression), a range (see below), `.'\n          (matching any single character), `^' (matching the null\n          string at the beginning of the input string), `$' (matching\n          the null string at the end of the input string), a `\\'\n          followed by a single character (matching that character), or\n          a single character with no other significance (matching that\n          character).\n\n          A range is a sequence of characters enclosed in `[]'.  It\n          normally matches any single character from the sequence.  If\n          the sequence begins with `^', it matches any single\n          character not from the rest of the sequence.  If two\n          characters in the sequence are separated by `-', this is\n          shorthand for the full list of ASCII characters between them\n          (e.g. `[0-9]' matches any decimal digit).  To include a\n          literal `]' in the sequence, make it the first character\n          (following a possible `^').  To include a literal `-', make\n          it the first or last character.\n\n  Related Topics: regexp ambiguity, regexp examples.\n\n", "db_key": "REGEXP SYNTAX2", "db_staff_only": false}}, {"pk": 383, "model": "help.helpentry", "fields": {"db_entrytext": "REGEXPS\n\n  TOPIC: Regular Expressions\n\n  The majority of matching in MUX is done with wildcard (\"globbing\")\n  patterns. There is a second type of matching, using regular expressions,\n  that is available in certain circumstances.\n\n  For attributes that are $-commands or ^-listen-patterns, setting that\n  attribute \"regexp\" (with '@set <object>/<attribute>=regexp') causes\n  patterns to be matched using regular expressions rather than globbing.\n\n  In a regular expression match, the substring of the string which matched\n  the regexp pattern is %0; %1 through %9 are the substrings of the string\n  which matched parenthesized expressions within the regexp pattern.\n\n{ 'help regexps2' for more }\n\n", "db_key": "REGEXPS", "db_staff_only": false}}, {"pk": 384, "model": "help.helpentry", "fields": {"db_entrytext": "REGEXPS (continued)\n\n  Regular expressions are extremely useful when you want to enforce\n  a data type. For example, if you have a command where you want a\n  player to enter a string and a number ('+setnum <player>=<number>',\n  for example), you might do it like this:\n\n  &DO_NUM Command Object=$+setnum (.+)=([0-9]*): @va me=Data: %1 = %2\n  @set Command Object/DO_NUM = regexp\n\n  Then, '+setnum cookies=30' would set VA to \"Data: cookies = 30\".\n  This eliminates your having to check to see if the player entered\n  a number, since the regular expression matches only numbers.\n  Furthermore, the '+' guarantees that there needs to be at least\n  one character there, so a player can't enter '+setnum cookies='\n  or '+setnum =10' or similarly malformed input.\n\n  Also note that regexps are case-sensitive, but wildcard globbing is not.\n  Some regular expression functions offer case-insensitive versions, some\n  regexp can be made case-insensitive by putting (?i) at the start.\n  Setting the CASE attribute flag is another way of selecting\n  case-insensitivity.\n\n  Related Topics: regexp syntax\n\n", "db_key": "REGEXPS2", "db_staff_only": false}}, {"pk": 719, "model": "help.helpentry", "fields": {"db_entrytext": "REGISTER_CREATE_FILE\n\n  CONFIG PARAMETER: register_create_file <filename>\n  DEFAULT: text/create_reg.txt\n\n  Specifies the name of the file that is shown to players who attempt to\n  create a new character when registration is in force from their site.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: @list_file, @readcache, register_site.\n\n", "db_key": "REGISTER_CREATE_FILE", "db_staff_only": false}}, {"pk": 720, "model": "help.helpentry", "fields": {"db_entrytext": "REGISTER_SITE\n\n  CONFIG PARAMETER: register_site <site>\n\n  Indicates that registration is to be enforced for sites whose address\n  matches the specified <site>.\n\n  Related Topics: forbid_site, permit_site, guest_site, REGISTRATION,\n                  SITE LISTS, SITE NOTATION.\n\n", "db_key": "REGISTER_SITE", "db_staff_only": false}}, {"pk": 721, "model": "help.helpentry", "fields": {"db_entrytext": "REGISTRATION\n\n  Related Topics: SITE LISTS\n\n", "db_key": "REGISTRATION", "db_staff_only": false}}, {"pk": 385, "model": "help.helpentry", "fields": {"db_entrytext": "REPORT\n\n  COMMAND: report\n\n  Display an aggregation or census of player objects divided into 8 hour\n  segments based on LAST connection attribute.\n\n  Related Topics:\n\n", "db_key": "REPORT", "db_staff_only": false}}, {"pk": 722, "model": "help.helpentry", "fields": {"db_entrytext": "RESET_PLAYERS\n\n  CONFIG PARAMETER: reset_players <yes/no>.\n  DEFAULT: no\n\n  Requests that the record player counter is reset.  This request takes\n  affect at @restart or ./Startmux.\n\n  Related Topics: connrecord().\n\n", "db_key": "RESET_PLAYERS", "db_staff_only": false}}, {"pk": 386, "model": "help.helpentry", "fields": {"db_entrytext": "RESTRICTED\n\n  FLAG: RESTRICTED()  (!)\n\n  Any object set RESTRICTED will have the number of commands available to use\n  greatly limited.  Generally, this flag works in conjunction with the\n  no_restricted access permission (see 'wizhelp PERMISSIONS', 'wizhelp\n  access', etc.) which is used to mark which commands can not be used by\n  RESTRICTED players (or objects).\n\n  Command access permissions can be viewed by a wizard using the '@list\n  permissions' command.  Commands marked 'no_restricted' in this list cannot\n  be used by RESTRICTED players or objects.\n\n  Note that a RESTRICTED Wizard character who later sets herself QUELL will\n  not be able to set herself un-RESTRICTED!  Fixing this will require the help\n  of a fully-powered wizard.  Be careful with this combination.\n\n  This flag is only available with --enable-firanmux.\n\n  Related Topics: no_restricted\n\n", "db_key": "RESTRICTED", "db_staff_only": false}}, {"pk": 723, "model": "help.helpentry", "fields": {"db_entrytext": "RESTRICT_HOME\n\n  CONFIG PARAMETER: restrict_home <yes/no>\n  DEFAULT: no\n\n  Specifies whether or not the HOME command can be hooked with @hook or\n  ignored with @icmd.\n\n  Related Topics: hook setup, @hook, @icmd.\n\n", "db_key": "RESTRICT_HOME", "db_staff_only": false}}, {"pk": 724, "model": "help.helpentry", "fields": {"db_entrytext": "RETRY_LIMIT\n\n  CONFIG PARAMETER: retry_limit <count>\n  DEFAULT: 3\n\n  Specifies the number of times that a user is allowed to try to connect to\n  an existing player before being disconnected.\n\n  Related Topics: conn_timeout.\n\n", "db_key": "RETRY_LIMIT", "db_staff_only": false}}, {"pk": 387, "model": "help.helpentry", "fields": {"db_entrytext": "ROBOT\n\n  FLAG: ROBOT(r)  ()\n\n  If set on a player, indicates that the player is a robot and is allowed to\n  use the OUTPUTPREFIX and OUTPUTSUFFIX commands that many publicly available\n  robot programs require.  Some MUXes do not restrict access to the\n  OUTPUTPREFIX and OUTPUTSUFFIX commands.\n\n  If set on an exit or a thing, indicates that robot players may not use the\n  exit or pick up the thing, the player is treated as having failed the lock.\n\n  Related Topics: OUTPUTPREFIX, OUTPUTSUFFIX, @robot.\n\n", "db_key": "ROBOT", "db_staff_only": false}}, {"pk": 725, "model": "help.helpentry", "fields": {"db_entrytext": "ROBOT_COST\n\n  CONFIG PARAMETER: robot_cost <amount>\n  DEFAULT: 1000\n\n  Specifies the cost of using the @robot command to create a robot.\n\n  Related Topics: @robot, ROBOT.\n\n", "db_key": "ROBOT_COST", "db_staff_only": false}}, {"pk": 726, "model": "help.helpentry", "fields": {"db_entrytext": "ROBOT_FLAGS\n\n  CONFIG PARAMETER: robot_flags <flags>\n  DEFAULT: ROBOT\n\n  Modifies the set of flags that a robot receives when it is created via\n  the @robot command.  Flags prefixed by a ! remove the indicated flag from\n  the set.\n\n  Related Topics: @list, exit_flags, player_flags, room_flags, thing_flags.\n\n", "db_key": "ROBOT_FLAGS", "db_staff_only": false}}, {"pk": 727, "model": "help.helpentry", "fields": {"db_entrytext": "ROBOT_SPEECH\n\n  CONFIG PARAMETER: robot_speech: <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not robot characters are allowed to use the speech,\n  pose, and emit commands in areas not controlled by their owner.\n\n  Related Topics: @robot, ROBOT.\n\n", "db_key": "ROBOT_SPEECH", "db_staff_only": false}}, {"pk": 388, "model": "help.helpentry", "fields": {"db_entrytext": "ROOM\n\n  FLAG: ROOM(R)  ()\n\n  This flag is automatically set on rooms when you @dig a new room.  It cannot\n  be changed.\n\n  Related Topics: OBJECT TYPES\n\n", "db_key": "ROOM", "db_staff_only": false}}, {"pk": 728, "model": "help.helpentry", "fields": {"db_entrytext": "ROOM_FLAGS\n\n  CONFIG PARAMETER: room_flags <flags>\n  DEFAULT: blank\n\n  Modifies the set of flags that a room receives when it is @dug.\n  Flags prefixed by a ! remove the indicated flag from the set.\n\n  Related Topics: @list, exit_flags, player_flags, robot_flags, thing_flags.\n\n", "db_key": "ROOM_FLAGS", "db_staff_only": false}}, {"pk": 729, "model": "help.helpentry", "fields": {"db_entrytext": "ROOM_NAME_CHARSET\n\n  CONFIG PARAMETER: room_name_charset [!]<charset> [[!]<charset>]...\n  DEFAULT: all (Unicode)\n\n    ascii     - Restrict names to use ASCII.\n    iso8859-1 - Restrict names to use iso8859-1.\n    latin-1   - Restrict names to use latin-1 (same as iso8859-1).\n\n  If no restrictions are made, the Unicode set is used.  If more than one\n  restriction is made, the union of the two are used.  That is, as long as a\n  character appears in any of the character sets, it is allowed.\n\n  Related Topics: attr_name_charset, exit_name_charset, player_name_charset,\n                  room_name_charset, thing_name_charset.\n\n", "db_key": "ROOM_NAME_CHARSET", "db_staff_only": false}}, {"pk": 730, "model": "help.helpentry", "fields": {"db_entrytext": "ROOM_PARENT\n\n  CONFIG PARAMETER: room_parent <dbref>\n  DEFAULT:  NOTHING\n\n  Sets the parent object for all newly created rooms on the game.   Existing\n  rooms in the game database are not effected.   If <dbref> is not a valid\n  object, the setting is ignored.\n\n  Related Topics: exit_parent, player_parent, thing_parent\n\n", "db_key": "ROOM_PARENT", "db_staff_only": false}}, {"pk": 731, "model": "help.helpentry", "fields": {"db_entrytext": "ROOM_QUOTA\n\n  CONFIG PARAMETER: room_quota <amount>\n  DEFAULT: 1\n\n  Sets how much quota it costs to dig a room (and also how much the\n  remaining quota is increased when a room is @destroyed.\n\n  Related Topics: @quota, exit_quota, player_quota, thing_quota, QUOTAS.\n\n", "db_key": "ROOM_QUOTA", "db_staff_only": false}}, {"pk": 389, "model": "help.helpentry", "fields": {"db_entrytext": "ROYALTY\n\n  FLAG: ROYALTY(Z)  ()\n\n  If a person is ROYALTY, they can see and examine things, and\n  teleport anywhere or anything, like a wizard can. They cannot modify\n  objects or players they do not control, and cannot use wizard commands.\n  This flag may only be set by a wizard.\n\n  Related Topics:\n\n", "db_key": "ROYALTY", "db_staff_only": false}}, {"pk": 732, "model": "help.helpentry", "fields": {"db_entrytext": "RUN_STARTUP\n\n  CONFIG PARAMETER: run_startup\n  DEFAULT: Yes\n\n  Controls whether the @startup attribute is automatically executed at\n  database load time.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n", "db_key": "RUN_STARTUP", "db_staff_only": false}}, {"pk": 733, "model": "help.helpentry", "fields": {"db_entrytext": "SACRIFICE_ADJUST\n\n  CONFIG PARAMETER: sacrifice_adjust <amount>\n  DEFAULT: -1\n\n  This parameter is part of the formula that is used to determine an object's\n  value given the amount spent on its creation.  The formula is:\n\n     value = (cost / sacrifice_factor) + sacrifice_adjust.\n\n  The inverse formula is used to determine how much the owner receives when\n  @destroying an object.\n\n  Related Topics: @create, @destroy, SACRIFICING, sacrifice_factor.\n\n", "db_key": "SACRIFICE_ADJUST", "db_staff_only": false}}, {"pk": 734, "model": "help.helpentry", "fields": {"db_entrytext": "SACRIFICE_FACTOR\n\n  CONFIG PARAMETER: sacrifice_factor <amount>\n  DEFAULT: 5\n\n  This parameter is part of the formula that is used to determine an object's\n  value given the amount spent on its creation.  The formula is:\n\n     value = (cost / sacrifice_factor) + sacrifice_adjust.\n\n  The inverse formula is used to determine how much the owner receives when\n  @destroying an object.\n\n  Related Topics: @create, @destroy, SACRIFICING, sacrifice_adjust.\n\n", "db_key": "SACRIFICE_FACTOR", "db_staff_only": false}}, {"pk": 390, "model": "help.helpentry", "fields": {"db_entrytext": "SAFE\n\n  FLAG: SAFE(s)  ()\n\n  When set, requires the use of the /override switch to @destroy in order to\n  destroy the object.  It does not prevent the destruction of the object,\n  but merely requires some additional effort.  If a thing is set DESTROY_OK,\n  its SAFE flag is ignored and it may be destroyed without using the /override\n  switch.\n\n  Related Topics: @destroy, DESTROY_OK.\n\n", "db_key": "SAFE", "db_staff_only": false}}, {"pk": 735, "model": "help.helpentry", "fields": {"db_entrytext": "SAFER_PASSWORDS\n\n  CONFIG PARAMETER: safer_passwords [yes/no]\n  DEFAULT: No\n\n  Normally, nearly any password is accepted, but if this\n  configuration option is enabled, passwords must contain\n  at least one capital letter, one lowercase letter, and\n  one numeric digit or symbol.\n\n", "db_key": "SAFER_PASSWORDS", "db_staff_only": false}}, {"pk": 736, "model": "help.helpentry", "fields": {"db_entrytext": "SAFE_WIPE\n\n  CONFIG PARAMETER: safe_wipe [yes/no]\n  DEFAULT: No\n\n  Is @wipe disallowed for SAFE-marked objects?\n\n", "db_key": "SAFE_WIPE", "db_staff_only": false}}, {"pk": 391, "model": "help.helpentry", "fields": {"db_entrytext": "SAY\n\n  COMMAND:  say[/noeval] <message>\n            nsay <message>\n            \"<message>\n\n  Says <message> out loud to everyone in your current location (usually\n  a room).  If you use say/noeval or nsay, the message is not evaluated.\n\n  Example:\n    > say Where is the movie theater?\n    Player says, \"Where is the movie theater?\"\n\n  Related Topics: page, pose, whisper, :, ;, \".\n\n", "db_key": "SAY", "db_staff_only": false}}, {"pk": 392, "model": "help.helpentry", "fields": {"db_entrytext": "SCORE\n\n  COMMAND: score\n\n  Displays how much money you have.  Helpful to see if any machines are\n  looping.\n\n  Related Topics: @ps, LOOPING, inventory.\n\n", "db_key": "SCORE", "db_staff_only": false}}, {"pk": 393, "model": "help.helpentry", "fields": {"db_entrytext": "SEARCH CLASSES\r\n\r\n  You may use the following classes in @search commands and search()\r\n  function calls:\r\n\r\n  TYPE      - Restricts to objects of the indicated type (THING, ROOM,\r\n              EXIT, PLAYER, GARBAGE).\r\n  NAME      - Restricts to objects whose names start with <restriction>.\r\n  OBJECTS   - A combination of TYPE=OBJECT and NAME=<restriction>.\r\n  THINGS    - An alias for OBJECTS.\r\n  ROOMS     - A combination of TYPE=ROOM and NAME=<restriction>.\r\n  EXITS     - A combination of TYPE=EXIT and NAME=<restriction>.\r\n  PLAYERS   - A combination of TYPE=PLAYER and NAME=<restriction>.\r\n  FLAGS     - Restricts to objects which have the flags listed in\r\n              <restriction> set..\r\n  POWER     - Restricts to objects which have the specified power.\r\n  ZONE      - Restricts to objects that are in the indicated zone.\r\n  PARENT    - Restricts to the parent designated by <restriction>.\r\n", "db_key": "SEARCH CLASSES", "db_staff_only": false}}, {"pk": 737, "model": "help.helpentry", "fields": {"db_entrytext": "SEARCH CRITERIA\n\n  The following criteria may be used when searching the database with the\n  @search and @mark commands:\n\n  Syntax: {@mark|@search} [<player>] [<class>=<restriction>]\n\n  <player>  - Restricts to objects owned by the named player.\n              By default, the search is limited to objects owned by the\n              invoking player, except when searching for players or if\n              the invoking player is a wizard.\n\n{ 'wizhelp search criteria2' for more }\n\n", "db_key": "SEARCH CRITERIA", "db_staff_only": false}}, {"pk": 738, "model": "help.helpentry", "fields": {"db_entrytext": "SEARCH CRITERIA (continued)\n\n  The following classes may be used when searching:\n\n  TYPE      - Restricts to objects of the indicated type (OBJECTS, ROOMS,\n              EXITS, PLAYERS).\n  NAME      - Restricts to objects whose names start with <restriction>.\n  OBJECTS   - A combination of TYPE=OBJECT and NAME=<restriction>\n  ROOMS     - A combination of TYPE=ROOM and NAME=<restriction>\n  EXITS     - A combination of TYPE=EXIT and NAME=<restriction>\n  PLAYERS   - A combination of TYPE=PLAYER and NAME=<restriction>\n  FLAGS     - Restricts to objects which have the flags listed in\n              <restriction> set.\n\n  Related Topics: @mark, @search.\n\n", "db_key": "SEARCH CRITERIA2", "db_staff_only": false}}, {"pk": 739, "model": "help.helpentry", "fields": {"db_entrytext": "SEARCH_COST\n\n  CONFIG PARAMETER: search_cost <amount>\n  DEFAULT: 100\n\n  Specifies how much commands that scan the entire database (such as @find,\n  @search, and stats with a playername) cost.\n\n  Related Topics: stats, @find, @search.\n\n", "db_key": "SEARCH_COST", "db_staff_only": false}}, {"pk": 740, "model": "help.helpentry", "fields": {"db_entrytext": "SEE_OWNED_DARK\n\n  CONFIG PARAMETERS: see_owned_dark <yes/no>\n  DEFAULT: yes\n\n  Specifies whether or not players see their own DARK objects when they\n  look at a room.  It does not affect the inventory or examine commands,\n  both of which show all objects.\n\n", "db_key": "SEE_OWNED_DARK", "db_staff_only": false}}, {"pk": 395, "model": "help.helpentry", "fields": {"db_entrytext": "SEMAPHORES\n\n  Semaphores may be used for synchronizing complex objects or for enforcing\n  mutual exclusion.  You may use any object you own or any LINK_OK object as\n  a semaphore, and any type of object (thing, room, player, or exit) may be\n  used.\n\n  The semaphore state of an object is shown by the Semaphore attribute (which\n  is read-only); a positive number indicates the number of commands awaiting\n  notifies, and a negative number indicates the number of waits on that\n  semaphore that will not block.\n\n  Use the '@wait <object>' form of the @wait command to request a command be\n  delayed until <object> is notified with the @notify command.  The @drain\n  and @notify/all commands clear the semaphore on <object>, either\n  discarding or executing all pending commands.  Remember that the\n  object performing the @wait executes the command, not the object used\n  as a semaphore.\n\n{ 'help semaphores2' for more }\n\n", "db_key": "SEMAPHORES", "db_staff_only": false}}, {"pk": 397, "model": "help.helpentry", "fields": {"db_entrytext": "SESSION\n\n  COMMAND: session\n\n  Displays information on how many characters you have sent and received\n  during this session, and which (Internal) port you are connected to on the\n  MUX.\n\n  Example:\n    > session\n                                     Characters Input----  Characters Output---\n    Player Name     On For Idle Port Pend  Lost     Total  Pend  Lost     Total\n    Mortal           00:06   0s   16    0     0        44   156     0      2679\n    2 Players logged in.\n\n  Pending characters are those waiting to be acted on as commands (for input)\n  or waiting to be sent out over the network (output).  Lost characters are\n  due to overflowing either the MUX's input or output buffers, either as the\n  result of running a single command that produces too much output (such as\n  @find and @search commands that match a large number of objects), or from\n  typing too much on one line.\n\n  Note: your Pending count for output will always be nonzero, as the output\n  of the SESSION command hasn't been sent out over the network yet.\n\n", "db_key": "SESSION", "db_staff_only": false}}, {"pk": 398, "model": "help.helpentry", "fields": {"db_entrytext": "SHROUD\n\n  The SHROUD flag is used to denote an object who is in the shroud. They\n  can be heard by those set MEDIUM but not seen. They see the WRAITHDESC\n  of the room if it is present and they see anything set SHROUD as\n  well as other normally visible objects.\n\n", "db_key": "SHROUD", "db_staff_only": false}}, {"pk": 741, "model": "help.helpentry", "fields": {"db_entrytext": "SIGNALS\n\n  From a shell, the following signals can be sent to the server:\n\n    SIGUSR1  - Server will restart (see @restart).\n    SIGUSR2  - Server will drop a flatfile (see @dump/flat).\n    SIGHUP   - Server will perform a normal dump (see @dump).\n    SIGTERM  - Server will shutdown (see @shutdown).\n\n", "db_key": "SIGNALS", "db_staff_only": false}}, {"pk": 742, "model": "help.helpentry", "fields": {"db_entrytext": "SIGNAL_ACTION\n\n  CONFIG PARAMETER: signal_action <default|exit>\n  DEFAULT: default\n\n  Specifies what action to take when a fatal signal is received.  The\n  possibilities are:\n\n     default  - Log the error, produce a panic dump, dump a core file, and\n                restart the game using the last reliably saved database.\n                For a description of the restart process, see @restart.\n     exit     - Log the error, and exit, hopefully with a core file.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n", "db_key": "SIGNAL_ACTION", "db_staff_only": false}}, {"pk": 743, "model": "help.helpentry", "fields": {"db_entrytext": "SITE LISTS\n\n  Site lists match the numeric IP address of the connecting player, and help\n  to manage client access to the MUX.\n\n  There are two site lists:\n\n      Access Control List  - forbid_site, permit_site, register_site,\n                             guest_site, nositemon_site.\n      Suspects             - suspect_site and trust_site\n\n  Both contain an ordered list of 'sites', 'subnets', or 'hosts' specified\n  with a notation explained in the 'SITE NOTATION' topic.\n\n  Each site in the list is matched in the order it appears in the\n  configuration file, and the first one that matches is used.  Therefore, you\n  should put the more narrowly-defined sites before the more broadly-defined\n  ones. Otherwise, the more narrowly-defined site (the one covering a subset\n  of IP addresses within the more broadly-defined site) will never be in\n  force.\n\n  Additions made to the lists after startup with the @admin command are put\n  at the front of the list, and are checked before entries from the config\n  file and previous entries made by the @admin command.\n\n{ 'wizhelp site lists2' for more }\n\n", "db_key": "SITE LISTS", "db_staff_only": false}}, {"pk": 744, "model": "help.helpentry", "fields": {"db_entrytext": "SITE LISTS (continued)\n\n  Example:  Restricting Access\n\n  register_site  135.246.4.40 255.255.255.255  <- Allow this site w/reg\n  forbid_site    135.246.4.0  255.255.255.0    <- Disallow a class C subnet\n  permit_site    135.246.0.0  255.255.0.0      <- Permit a class B network\n  register_site  195.3.17.1   255.255.255.255  <- Permit this site w/reg.\n  forbid_site    0.0.0.0      0.0.0.0          <- Disallow everyone else\n\n  These directives only allow access from 135.346.*.* and 195.3.17.1, except\n  that all hosts in the 135.246.4 subnet except for 135.246.4.40 are also\n  not allowed access.  People connecting from 135.246.4.40 and 195.3.17.1\n  are not allowed to create their own characters (registration is enabled\n  for those sites), while people connecting from elsewhere on the 135.246\n  net are allowed to create their own characters.\n\n  Related Topics: @admin, forbid_site, @list site_information, permit_site,\n                  register_site, SITE NOTATION, suspect_site, trust_site,\n                  guest_site, nositemon_site..\n\n", "db_key": "SITE LISTS2", "db_staff_only": false}}, {"pk": 745, "model": "help.helpentry", "fields": {"db_entrytext": "SITE NOTATION\n\n Site notation specifies a range of numeric IP addresses.  A particular range\n can include a single IP address or the entire Internet.\n\n There are several variations:\n\n   <address> <mask>    - The <address> and <mask> are both dotted IPv4\n                         notation, but the <mask> is further restricted that\n                         it's '1' bits are all together and form a prefix.\n                         The <mask> specifies which bits in the <address> are\n                         significant.\n\n   <address>/<N>       - The <address> is a dotted IPv4 number, but <N> is an\n                         integer from 0 to 32 that specifies the number of\n                         significant bits in left-most part of the <address>.\n                         This notation is called CIDR IP prefix notation or\n                         'slash notation'.\n\n{ 'wizhelp site notation2' for more }\n\n", "db_key": "SITE NOTATION", "db_staff_only": false}}, {"pk": 746, "model": "help.helpentry", "fields": {"db_entrytext": "SITE NOTATION (continued)\n\n Four forms of dotted IPv4 addresses are allowed:\n\n   8.8.8.8, 8.8.16, 8.24 and 32.\n\n 8 means an 8-bit integer from 0 to 255, 16 means a 16-bit integer\n from 65536, etc. The 8.8.8.8 form is the most common. The latter three\n originated on BSD.\n\n Furthermore, the integer can be expressed in decimal, octal, or hexadecimal\n notation. Hexadecimal numbers have a '0x' prefix. Octal numbers have a '0'\n prefix.\n\n Examples:\n\n   135.246.4.40 255.255.255.255   - Single host.\n   135.246.4.0  0xFF.255.0777.0   - Class C subnet.\n   135.246.4.0/24                 - Same as above in CIDR IP format.\n   135.246.0/16                   - Class B subnet.\n   135.0/8                        - Class A subnet in CIDR IP format.\n   0 0                            - The entire Internet\n   0/0                            - Same as above in CIDR IP format.\n\n", "db_key": "SITE NOTATION2", "db_staff_only": false}}, {"pk": 399, "model": "help.helpentry", "fields": {"db_entrytext": "SITEMON\n\n  FLAG: SITEMON($)  ()\n\n  Enables notification (to any player with this flag set) of network\n  connections and disconnections to the site.\n\n  Related Topics: SUSPECT\n\n", "db_key": "SITEMON", "db_staff_only": false}}, {"pk": 747, "model": "help.helpentry", "fields": {"db_entrytext": "SITE_CHARS\n\n  CONFIG PARAMETER: site_chars <number>\n  DEFAULT: 25\n\n  Specifies the length of the hostname that is shown in a wizard WHO\n  listing. If <number> is 0, then the hostname will be shown in full.\n\n", "db_key": "SITE_CHARS", "db_staff_only": false}}, {"pk": 400, "model": "help.helpentry", "fields": {"db_entrytext": "SLAVE\n\n  FLAG: SLAVE(x)  ()\n\n  If set on a player, neither the player nor any of his objects may perform\n  any commands that change the database.  Some sites may restrict additional\n  commands.  This flag may only be set or cleared by wizards.\n\n  Related Topics:\n\n", "db_key": "SLAVE", "db_staff_only": false}}, {"pk": 748, "model": "help.helpentry", "fields": {"db_entrytext": "SLAY\n\n  COMMAND: slay <player/object>\n\n  Kills the indicated player or object without paying any insurance to the\n  victim.  It should be used in places where suicide should not be rewarded.\n\n  Related Topics: kill, IMMORTAL.\n\n", "db_key": "SLAY", "db_staff_only": false}}, {"pk": 749, "model": "help.helpentry", "fields": {"db_entrytext": "SPACE_COMPRESS\n\n  CONFIG PARAMETER: space_compress <yes/no>\n  DEFAULT: yes\n\n  Specifies whether or not extra spaces are to be removed from user input\n  as it is processed.  If enabled, multiple spaces are compressed to a single\n  space, and spaces at the ends of strings are removed.\n\n", "db_key": "SPACE_COMPRESS", "db_staff_only": false}}, {"pk": 401, "model": "help.helpentry", "fields": {"db_entrytext": "SPOOFING\n\n  Spoofing is the act of making other characters think that a person said or\n  did something that they did not.  This is very easy to accomplish, and has\n  some good effects, which is why it is allowed.  Note that the NOSPOOF flag\n  allows players to see exactly who is spoofing what.\n\n  Example:\n    ... From TinyJerk's perspective ...\n    > @emit Wizard is a jerk!\n    Wizard is a jerk.\n\n   ... From Wizard's perspective, Wizard is set NOSPOOF ...\n   [TinyJerk(#226)] Wizard is a jerk!\n   > @boot tinyjerk\n   You booted TinyJerk off!\n   TinyJerk has disconnected.\n   1 connection closed.\n\n   ... TinyJerk's perspective again ...\n   Wizard gently shows you the door.\n\n   *** Disconnected ***\n\n", "db_key": "SPOOFING", "db_staff_only": false}}, {"pk": 750, "model": "help.helpentry", "fields": {"db_entrytext": "SQL_DATABASE\n\n  CONFIG PARAMETER: sql_database <string>\n  DEFAULT: None\n\n  Specifies the name of the SQL database.\n\n  This option is only available with --enable-inlinsql or --enable-stubslave.\n\n  Related Topics: sql_user, sql_user, and sql_password.\n\n", "db_key": "SQL_DATABASE", "db_staff_only": false}}, {"pk": 751, "model": "help.helpentry", "fields": {"db_entrytext": "SQL_PASSWORD\n\n  CONFIG PARAMETER: sql_password <string>\n  DEFAULT: None\n\n  Specifies the password for the SQL session.\n\n  This option is only available with --enable-inlinsql or --enable-stubslave.\n\n  Related Topics: sql_server, sql_user, and sql_database.\n\n", "db_key": "SQL_PASSWORD", "db_staff_only": false}}, {"pk": 752, "model": "help.helpentry", "fields": {"db_entrytext": "SQL_SERVER\n\n  CONFIG PARAMETER: sql_server <string>\n  DEFAULT: None\n\n  Specifies the host name of the SQL server.\n\n  This option is only available with --enable-inlinsql or --enable-stubslave.\n\n  Related Topics: sql_user, sql_password, and sql_database.\n\n", "db_key": "SQL_SERVER", "db_staff_only": false}}, {"pk": 753, "model": "help.helpentry", "fields": {"db_entrytext": "SQL_USER\n\n  CONFIG PARAMETER: sql_user <string>\n  DEFAULT: None\n\n  Specifies the user name for the SQL session.\n\n  This option is only available with --enable-inlinsql or --enable-stubslave.\n\n  Related Topics: sql_server, sql_password, and sql_database.\n\n", "db_key": "SQL_USER", "db_staff_only": false}}, {"pk": 402, "model": "help.helpentry", "fields": {"db_entrytext": "STACK\n\n  Command lists that are run on objects can have up to 10 stack values\n  named %0 through %9 (or [v(0)] through [v(9)]).  Stack values can be set\n  by the @trigger command, or by matching wildcard characters in the Listen\n  attribute (in the case of the Ahear, Aahear, and Amhear attributes).\n\n  Example:\n    > @listen item = * foo *\n    Set.\n    > @ahear item = \"-->[v(1)]<-- bar -->[v(0)]<--\n    Set.\n    > say Fee fie foo fum\n    You say, \"Fee fie foo fum\"\n    item says \"-->fum\"<-- bar -->Wizard says \"Fee fie<--\"\n\n", "db_key": "STACK", "db_staff_only": false}}, {"pk": 754, "model": "help.helpentry", "fields": {"db_entrytext": "STACK_LIMIT\n\n  CONFIG PARAMETER: stack_limit <number>\n  DEFAULT: 50\n\n  The number of items that are allowed on an object's stack. You should be\n  sparse with this parameter, as stack items are retained until they are\n  removed.\n\n", "db_key": "STACK_LIMIT", "db_staff_only": false}}, {"pk": 403, "model": "help.helpentry", "fields": {"db_entrytext": "STAFF\n\n  FLAG: STAFF(w)  ()\n\n  This flag can be used to mark players who serve as staff on the\n  MUX. It is wizard-settable only.\n\n  Related Topics:\n\n\n", "db_key": "STAFF", "db_staff_only": false}}, {"pk": 755, "model": "help.helpentry", "fields": {"db_entrytext": "STARTING_MONEY\n\n  CONFIG PARAMETER: starting_money <amount>\n  DEFAULT: 0\n\n  Sets the amount of money that new players start out with.\n\n  Related Topics: paycheck.\n\n", "db_key": "STARTING_MONEY", "db_staff_only": false}}, {"pk": 756, "model": "help.helpentry", "fields": {"db_entrytext": "STARTING_QUOTA\n\n  CONFIG PARAMETER: starting_quota <amount>\n  DEFAULT: 20\n\n  Sets the building quota that players receive when they are created, whether\n  by @pcreate or the connection screen.\n\n  Related Topics: @quota, quotas.\n\n", "db_key": "STARTING_QUOTA", "db_staff_only": false}}, {"pk": 757, "model": "help.helpentry", "fields": {"db_entrytext": "STARTUP\n\n  FLAG: STARTUP(z) (all types)\n\n  This flag is managed internally by the server and it is not directly\n  settable.  It indicates whether or not the object has a STARTUP attribute\n  that is to be run when the MUX is booted.  This saves a considerable amount\n  of time considering that very few objects have a STARTUP attribute.\n  This flag is set automatically when the STARTUP attribute is set to a\n  non-empty string, and cleared when the STARTUP attribute is removed or\n  set to a null string.\n\n  Related Topics: @startup.\n\n", "db_key": "STARTUP", "db_staff_only": false}}, {"pk": 758, "model": "help.helpentry", "fields": {"db_entrytext": "STATUS_FILE\n\n  CONFIG PARAMETER: status_file <filename>\n  DEFAULT: shutdown.status\n\n  If you give an argument to the @shutdown command, that argument is written\n  out to the file named by this directive.  The file can be used by an\n  auto-restart script to decide whether or not to bring the MUX back up,\n  for instance.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n", "db_key": "STATUS_FILE", "db_staff_only": false}}, {"pk": 404, "model": "help.helpentry", "fields": {"db_entrytext": "STICKY\n\n  FLAG: STICKY(S)  ()\n\n  If a thing is STICKY, it goes home when dropped\n  (See HOMES). If a room is STICKY, its drop-to is delayed until the\n  last person leaves (See DROP-TOs). Only meaningful for things and\n  rooms.\n\n  Related Topics:\n\n", "db_key": "STICKY", "db_staff_only": false}}, {"pk": 759, "model": "help.helpentry", "fields": {"db_entrytext": "STRIPPED_FLAGS\n\n  CONFIG PARAMETER: stripped_flags <flags>\n  DEFAULT: BLIND CONNECTED GAGGED HEAD_FLAG IMMORTAL INHERIT\n           ROYALTY SLAVE STAFF SUSPECT UNINSPECTED WIZARD\n\n  Modifies the set of flags that are stripped from objects during @chown,\n  @chownall, @clone, @chzone, and guest creation.  Flags prefixed by a !\n  remove the indicated flag from the set.\n\n  Related Topics: @chown, @chownall, @chzone, @clone.\n\n", "db_key": "STRIPPED_FLAGS", "db_staff_only": false}}, {"pk": 405, "model": "help.helpentry", "fields": {"db_entrytext": "SUBSTITUTIONS\n\n  The most basic form of evaluation is a %-substitution.  Even when other\n  forms of evaluation are not performed, %-substitutions usually are.  A\n  %-substitution is a '%' followed by one or two letters, digits, or symbols.\n  If a sequence is understood, it is substituted by a corresponding value.\n  If a sequence is not understood, the initial '%' is removed.  In this way,\n  the '%' also acts similarly to the '\\' escape.\n\n  For some substitutions, if the letter following the '%' is capitalized, the\n  first letter of the result of the substitution is also capitalized.\n\n  Certain %-sequences provide gender-specific pronouns.  Some provide\n  information about the execution state.  Some provide control over the\n  appearance of text.\n\n  Commonly-used substitutions:\n\n    %r       Carriage Return\n    %t       Tab\n    %b       Space\n    %%       Literal '%'.\n    %\\       Literal '\\'.\n    %x<code> ANSI color codes. See: ansi().\n    %c<code> ANSI color codes. See: ansi().\n\n{ 'help substitutions2' for more }\n\n", "db_key": "SUBSTITUTIONS", "db_staff_only": false}}, {"pk": 406, "model": "help.helpentry", "fields": {"db_entrytext": "SUBSTITUTIONS (continued)\n\n  Pronoun-related substitutions:\n\n    %s, %S   Subjective form: he, she, it, they.  See: subj(%#)\n    %o, %O   Objective form: him, her, it, them.  See: obj(%#)\n    %p, %P   Possessive form: his, her, its, their.  See: poss(%#)\n    %a, %A   Absolute Possessive form: his, hers, its, theirs.  See: aposs(%#)\n\n  Database substitutions:\n\n    %n, %N   Enactor's name.  See name(%#).\n    %k, %K   Enactor's moniker.  See moniker(%#).\n    %va-%vz  Contents of attribute va through vz\n    %=<attr> Equivalent to v(attr).\n\n  Execution state substitutions:\n\n    %m       Text of the last command executed.\n    %0-%9    Value of positional parameter/stack location 0 through 9.\n    %i0-%i9  Equivalent to itext(0) through itext(9).\n    %q0-%q9  Value of temporary (setq) register 0 through 9.\n    %qa-%qz  Value of temporary (setq) register A through Z.\n\n{ 'help substitutions3' for more }\n\n", "db_key": "SUBSTITUTIONS2", "db_staff_only": false}}, {"pk": 407, "model": "help.helpentry", "fields": {"db_entrytext": "SUBSTITUTIONS (continued)\n\n  Execution state substitutions (continued):\n\n    %#      Database number of the object that caused the message to be\n            displayed or the action list to be run (Enactor).\n\n    %@      Database number of the object immediately calling %! (Caller).\n            This number starts as the same as %#, but can be affected by\n            u()-type functions, zones, and @function.\n\n    %!      Database number of the object holding the message or running\n            the action list (Executor).\n\n    %l      Database number of the location of the object that caused the\n            message to be displayed or the action list to be run.\n\n    %|      A string piped from the previous command in a pipe.\n\n  Note that %va-%vz is equivalent to [get(%!/a)-[get(%!/z)], and %=<name> is\n  equivalent to [get(%!/name)].  The substitutions forms are more efficient.\n  Note that %=<name> supports single-letter attributes names while [v(name)]\n  does not. For attribute names longer than one character, %=<name>,\n  [get(%!/name], and v(name) are equivalent.\n\n  Related Topics: ANSI(), ANSI CODES, ANSI SUBSTITUTION, GENDER, V().\n\n", "db_key": "SUBSTITUTIONS3", "db_staff_only": false}}, {"pk": 408, "model": "help.helpentry", "fields": {"db_entrytext": "SUCCESS\n\n  You successfully use a player or a thing when you take it (because you\n  passed the lock).  You successfully use an exit when you go through it.\n  You successfully use a room when you look around and the room is not locked\n  against you.\n\n  Related Topics: get, look, @asuccess, @lock, @osuccess, @success.\n\n", "db_key": "SUCCESS", "db_staff_only": false}}, {"pk": 760, "model": "help.helpentry", "fields": {"db_entrytext": "SUSPECT\n\n  FLAG: SUSPECT(u) (players)\n\n  When set on a player, causes connects, disconnects, name changes, kills, and\n  attempted kills to be reported to all connected wizards.  All commands from\n  a SUSPECT-set player are potentially logged as controlled by the 'log'\n  configuration option.\n\n  This flag is only visible and settable by wizards.\n\n  Related Topics: log\n\n", "db_key": "SUSPECT", "db_staff_only": false}}, {"pk": 761, "model": "help.helpentry", "fields": {"db_entrytext": "SUSPECT_SITE\n\n  CONFIG PARAMETER: suspect_site <site>\n\n  Indicates that sites whose address matches the specified <site> are to be\n  considered suspect, and any player creates, connects and disconnects are to\n  be reported to all logged-in wizards.\n\n  Related Topics: trust_site, SITE LISTS, SITE NOTATION.\n\n", "db_key": "SUSPECT_SITE", "db_staff_only": false}}, {"pk": 762, "model": "help.helpentry", "fields": {"db_entrytext": "SWEEP_DARK\n\n  CONFIG PARAMETER: sweep_dark <yes/no>\n  DEFAULT: no\n\n  Indicates whether or not players are allowed to @sweep dark places they do not\n  control.\n\n  Related Topics: @sweep.\n\n", "db_key": "SWEEP_DARK", "db_staff_only": false}}, {"pk": 409, "model": "help.helpentry", "fields": {"db_entrytext": "SWITCHES\n\n  Some commands have command switches associated with them that can be used\n  to modify their behavior.  For instance, switches on the @ps command\n  control the amount of information displayed, and switches on the @switch\n  command indicate whether to perform all action lists whose targets match\n  the search string, or just the first.\n\n  Related Topics: @list.\n\n", "db_key": "SWITCHES", "db_staff_only": false}}, {"pk": 763, "model": "help.helpentry", "fields": {"db_entrytext": "SWITCH_DEFAULT_ALL\n\n  CONFIG PARAMETER: switch_default_all <yes/no>\n  DEFAULT: yes\n\n  Indicates whether the @switch command should perform the commands for all\n  targets that match or just the first one that matches if you don't specify\n  either /all or /first as a command switch.\n\n", "db_key": "SWITCH_DEFAULT_ALL", "db_staff_only": false}}, {"pk": 410, "model": "help.helpentry", "fields": {"db_entrytext": "TAKE\n\n  COMMAND: take[/<switch>] <object>\n           take[/<switch>] <exit>\n           take[/<switch>] <object>'s <sub-object>\n\n  The first form picks up <object> from your location and adds it to your\n  inventory.  It will fail if the object is locked against you, or if you\n  are inside a player or object that you don't control and which isn't\n  set ENTER_OK.\n\n  The second form takes an exit from your location and adds it to you.\n  Anyone inside you may then use the exit to travel to the exit's destination.\n  You may take exits that you own, and exits owned by others in locations that\n  you own.\n\n  The third form takes <sub-object> from <object> and adds it to your\n  inventory.  <object> must be ENTER_OK and <sub-object> must not be locked\n  against you for this to work.  The lock on <object> is not checked.\n\n{ 'help take2' for more }\n\n", "db_key": "TAKE", "db_staff_only": false}}, {"pk": 412, "model": "help.helpentry", "fields": {"db_entrytext": "TERSE\n\n  FLAG: TERSE(q)  ()\n\n  If you are set TERSE then you are not shown the description, success/failure\n  messages, contents, or exits of locations you enter.  You must use the LOOK\n  or EXAMINE commands to see this information.\n\n  Others in the location still get the osucc/ofail messages and the asucc or\n  afail command list is still run.\n\n  Related Topics: examine, look.\n\n", "db_key": "TERSE", "db_staff_only": false}}, {"pk": 764, "model": "help.helpentry", "fields": {"db_entrytext": "TERSE_SHOWS_CONTENTS\n\n  CONFIG PARAMETER: terse_shows_contents <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not to suppress the listing of a location's contents\n  when producing TERSE output (whether from an automatic look or a 'real'\n  look if look_obey_terse is turned on.\n\n  Related Topics: look_obey_terse, terse_shows_exits,\n                  terse_shows_move_messages.\n\n", "db_key": "TERSE_SHOWS_CONTENTS", "db_staff_only": false}}, {"pk": 765, "model": "help.helpentry", "fields": {"db_entrytext": "TERSE_SHOWS_EXITS\n\n  CONFIG PARAMETER: terse_shows_exits <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not to suppress the listing of a location's obvious\n  exits when producing TERSE output (whether from an automatic look or a\n  'real' look if look_obey_terse is turned on.\n\n  Related Topics: look_obey_terse, terse_shows_contents,\n                  terse_shows_move_messages.\n\n", "db_key": "TERSE_SHOWS_EXITS", "db_staff_only": false}}, {"pk": 766, "model": "help.helpentry", "fields": {"db_entrytext": "TERSE_SHOWS_MOVE_MESSAGES\n\n  CONFIG PARAMETER: terse_shows_move_messages <yes/no>\n  DEFAULT: yes\n\n  Indicates whether or not to suppress messages related to moving about\n  produced by locations and exits.  These messages are the ENTER and LEAVE\n  messages on locations, and the SUCC and DROP messages on exits.\n  The messages seen by others (Oxxx attributes) and the actions to be\n  performed (Axxx attributes) are unaffected.\n\n  Related Topics: look_obey_terse, terse_shows_contents, terse_shows_exits.\n\n", "db_key": "TERSE_SHOWS_MOVE_MESSAGES", "db_staff_only": false}}, {"pk": 767, "model": "help.helpentry", "fields": {"db_entrytext": "THING_FLAGS\n\n  CONFIG PARAMETER: thing_flags <flags>.\n  DEFAULT: blank\n\n  Modifies the set of flags that a thing receives when it is @created.\n  Flags prefixed by a ! remove the indicated flag from the set.\n\n  Related Topics: @list, exit_flags, player_flags, robot_flags, room_flags.\n\n", "db_key": "THING_FLAGS", "db_staff_only": false}}, {"pk": 768, "model": "help.helpentry", "fields": {"db_entrytext": "THING_NAME_CHARSET\n\n  CONFIG PARAMETER: thing_name_charset [!]<charset> [[!]<charset>]...\n  DEFAULT: all (Unicode)\n\n    ascii     - Restrict names to use ASCII.\n    iso8859-1 - Restrict names to use iso8859-1.\n    latin-1   - Restrict names to use latin-1 (same as iso8859-1).\n\n  If no restrictions are made, the Unicode set is used.  If more than one\n  restriction is made, the union of the two are used.  That is, as long as a\n  character appears in any of the character sets, it is allowed.\n\n  Related Topics: attr_name_charset, exit_name_charset, player_name_charset,\n                  room_name_charset.\n\n", "db_key": "THING_NAME_CHARSET", "db_staff_only": false}}, {"pk": 769, "model": "help.helpentry", "fields": {"db_entrytext": "THING_PARENT\n\n  CONFIG PARAMETER: thing_parent <dbref>\n  DEFAULT:  NOTHING\n\n  Sets the parent object for all newly created things on the game.   Existing\n  things in the game database are not effected.   If <dbref> is not a valid\n  object, the setting is ignored.\n\n  Related Topics: exit_parent, player_parent, room_parent\n\n", "db_key": "THING_PARENT", "db_staff_only": false}}, {"pk": 770, "model": "help.helpentry", "fields": {"db_entrytext": "THING_QUOTA\n\n  CONFIG PARAMETER: thing_quota <amount>\n  DEFAULT: 1\n\n  Sets how much quota it costs to create a thing (and also how much the\n  remaining quota is increased when a thing is @destroyed.\n\n  Related Topics: @quota, exit_quota, player_quota, room_quota, QUOTAS.\n\n", "db_key": "THING_QUOTA", "db_staff_only": false}}, {"pk": 413, "model": "help.helpentry", "fields": {"db_entrytext": "THINK\n\n  COMMAND: think <message>\n\n  You can use this command to send a private message to yourself. Pronoun\n  substitution is performed. This is essentially equivalent to \"@pemit\n  me=<message>\", but with \"think\", there is no prepended text. One possible\n  use: \"@adesc me=think --> %n(%#[flags(%#)]) just looked at you.\"\n\n  Related Topics: @eval.\n\n", "db_key": "THINK", "db_staff_only": false}}, {"pk": 414, "model": "help.helpentry", "fields": {"db_entrytext": "THROW\n\n  COMMAND: throw[/<switch>] <object>\n           throw[/<switch>] <exit>\n\n  The first form removes <object> from your inventory and puts it in your\n  location, except for the following special cases: Dropping a STICKY thing\n  sends it home, and dropping a thing in a room with a drop-to sends the\n  thing to the drop-to location.\n\n  The second form removes <exit> from your list of exits and adds it to the\n  list of exits for the current location.  Anyone in the same location as\n  you may then use the exit to travel to the exit's destination.  You can\n  only drop exits when you own the location where you are dropping them.\n\n  The following switch is recognized:\n     /quiet   - Don't perform the @odrop/@adrop attributes on the dropped\n                 object.  This switch only works if you control the object.\n\n  'drop' is the same as 'throw'.\n\n  Related Topics: get, @adrop, @drop, @odrop, DROP-TO, STICKY.\n\n", "db_key": "THROW", "db_staff_only": false}}, {"pk": 771, "model": "help.helpentry", "fields": {"db_entrytext": "TIMESLICE\n\n  CONFIG PARAMETER: timeslice <seconds>\n  DEFAULT: 1.000\n\n  Specifies the interval (in seconds) at which connected users' command quotas\n  are increased.  Each command a user types in (commands executed by machines\n  do not count) decreases that user's quota by 1, and the user's commands are\n  only executed if the quota is greater than zero.\n\n  Related Topics: command_quota_incr, command_quota_max.\n\n", "db_key": "TIMESLICE", "db_staff_only": false}}, {"pk": 772, "model": "help.helpentry", "fields": {"db_entrytext": "TOAD_RECIPIENT\n\n  CONFIG PARAMETER: toad_recipient <player dbref>\n\n  This is a configuration parameter; as such dbrefs should be given as the raw\n  number and not be preceded by the usual '#' (this is interpreted the\n  beginning of a comment by the config file parser).\n\n  Default: #-1 (-1)\n\n  When a player is @toaded (or @nuked) his or her property is normally @chowned\n  to another player; toad_recipient controls who the recipient of the player's\n  objects are. If the value is set to -1 the @toading wizard will get ownership\n  of all the victim's objects, otherwise the specified player gets ownership.\n  This can be explicitly overridden by providing a recipient with the @toad\n  command.\n\n  @toad/@nuke are potential security risks as they normally change the\n  ownership of a victim (a non-privileged character and presumably untrusted\n  player) to a player with wizard permissions. Furthermore, this can cause\n  clutter and it can be often difficult to sort out unwanted objects after an\n  @toading.\n\n  It is recommended that games create a non-privileged character for the\n  express purpose of being a toad_recipient.\n\n  Example:\n   > @pcreate Nobody=noone\n   New player 'Nobody' created with password 'noone'\n             (dbref of #57)\n\n   > @admin toad_recipient=57\n\n  Related Topics: @admin, @toad, @nuke, config parameters.\n\n", "db_key": "TOAD_RECIPIENT", "db_staff_only": false}}, {"pk": 415, "model": "help.helpentry", "fields": {"db_entrytext": "TOPICS\n\n  Help available on the following Topics:\n\n  $-COMMANDS               ARBITRARY COMMANDS       ATTRIBUTE OWNERSHIP\n  BEING KILLED             BOGUS COMMANDS           BOOLEAN VALUES\n  COMMAND EVALUATION       COMSYS                   CONTROL\n  COSTS                    CREDITS                  DROP-TO\n  ENACTOR                  EXITS                    FAILURE\n  FLAG LIST                FLAGS                    FUNCTION LIST\n  FUNCTIONS                GENDER                   GOALS\n  HERE                     HOMES                    LINKING\n  LISTENING                LISTS                    LOOPING\n  ME                       MONEY                    MOVING\n  OBJECT TYPES             PARENT OBJECTS           PARENT ROOMS\n  PIPING                   POWERS LIST              PUEBLO\n  PUPPETS                  REGEXPS                  SEARCH CLASSES\n  SEMAPHORES               SPOOFING                 STACK\n  SUBSTITUTIONS            SUCCESS                  SWITCHES\n  USER-DEFINED COMMANDS    VERBS                    WIZARDS\n  ZONES\n\n", "db_key": "TOPICS", "db_staff_only": false}}, {"pk": 416, "model": "help.helpentry", "fields": {"db_entrytext": "TRACE\n\n  FLAG: TRACE(T)  ()\n\n  When a thing is set TRACE, it will report to its owner the result of all\n  substitutions that it performs that change the original string.  The order\n  for displaying nested evaluations (such as when evaluating the arguments to\n  a function) is a site-selected configuration parameter.\n\n  Example:\n    > @set object = trace\n    > @va object = say The result is [add(4,mul(3,%0))].\n    > @trig object/va = 7\n      object(#322)} '%0' -> '7'\n      object(#322)} 'mul(3,%0)' -> '21'\n      object(#322)} 'add(4,mul(3,%0))' -> '25'\n      object(#322)} 'The result is [add(4,mul(3,%0))].' -> 'The result is 25.'\n      object says \"The result is 25.\"\n\n{ 'help trace2' for more }\n\n", "db_key": "TRACE", "db_staff_only": false}}, {"pk": 417, "model": "help.helpentry", "fields": {"db_entrytext": "TRACE (continued)\n\n  When trace output is displayed in top-down order (final evaluation first,\n  followed by the 'smaller' evaluations needed to perform it), then the total\n  number of trace output lines that may be produced by an evaluation is limited\n  to 200.  Bottom-up trace output is not limited.\n\n  Trace may also be set on a specific attribute, thus narrowing down the scope\n  of the trace output to results from that specific object/attribute\n  combination.\n\n  Example:\n    > @set object/attribute = trace\n\n  Related Topics: VERBOSE.\n\n", "db_key": "TRACE2", "db_staff_only": false}}, {"pk": 773, "model": "help.helpentry", "fields": {"db_entrytext": "TRACE_OUTPUT_LIMIT\n\n  CONFIG PARAMETER: trace_output_limit <amount>\n  DEFAULT: 200\n\n  Specifies the maximum number of lines of trace output that will be displayed\n  when using top-down format.  Bottom-up format output is not affected by this\n  parameter.\n\n  Note that this parameter is intended as a limit on the amount of memory used\n  to store intermediate data and not on the quantity of trace output, top-down\n  format needs to keep all intermediate results in memory before displaying\n  them, while bottom-up format displays them immediately after generating them.\n\n  When trace output lines are discarded, only the last (trace_output_limit)\n  lines are kept.  These lines contain information about the evaluations done\n  earliest in the process of evaluating the expression (usually the innermost\n  evaluations and earlier arguments of outer functions).\n\n", "db_key": "TRACE_OUTPUT_LIMIT", "db_staff_only": false}}, {"pk": 774, "model": "help.helpentry", "fields": {"db_entrytext": "TRACE_TOPDOWN\n\n  CONFIG PARAMETER: trace_topdown <yes/no>\n  DEFAULT: yes\n\n  Specifies whether TRACE output is displayed top-down (complete evaluation\n  shown first, followed by sub-evaluations), or bottom-up (sub-evaluations\n  shown first, followed by the larger evaluation of which they are a part).\n\n", "db_key": "TRACE_TOPDOWN", "db_staff_only": false}}, {"pk": 418, "model": "help.helpentry", "fields": {"db_entrytext": "TRAIN\n\n  COMMAND: train <command>\n\n  The train command is used to output to your location exactly what you\n  have typed, then execute it.  The output is not parsed and is taken\n  verbatim and displayed as is.\n\n  Example:\n    > train @emit To do addition, type:  say add(1,1) = 2\n    YourName types -=> @emit To do addition, type: say add(1,1) = 2\n    To do addition, type: say add(1,1) = 2\n\n  Related Topics: @emit, pose, @pemit, think\n\n", "db_key": "TRAIN", "db_staff_only": false}}, {"pk": 419, "model": "help.helpentry", "fields": {"db_entrytext": "TRANSPARENT\n\n  FLAG: TRANSPARENT(t)  ()\n\n  If an exit is TRANSPARENT, then when you look at it you see the description\n  of the room on the other side of the exit in addition to the description\n  of the exit. When a room is TRANSPARENT, you see a 'long' listing of\n  exits, including their destinations.\n\n  Related Topics:\n\n", "db_key": "TRANSPARENT", "db_staff_only": false}}, {"pk": 775, "model": "help.helpentry", "fields": {"db_entrytext": "TRUST_SITE\n\n  CONFIG PARAMETER: trust_site <site>\n\n  Indicates that sites whose address matches the specified <site> are not to\n  be considered suspect.\n\n  Related Topics: suspect_site, SITE LISTS, SITE NOTATION.\n\n", "db_key": "TRUST_SITE", "db_staff_only": false}}, {"pk": 420, "model": "help.helpentry", "fields": {"db_entrytext": "ULOCAL() (continued)\n\n  Examples:\n    > &FRUIT me=apples bananas oranges pears\n    > &SUB-FUNCTION me=[setq(0,v(FRUIT))][extract(%q0,match(%q0,%0),1)]\n    > &TOP-FUNCTION me=[setq(0,are delicious!)][ulocal(SUB-FUNCTION,%0)] %q0\n    > say u(TOP-FUNCTION,b*)\n    You say, \"bananas are delicious!\"\n\n  If SUB-FUNCTION had been called with u() instead of ulocal():\n    > &TOP-FUNCTION me=[setq(0,are delicious!)][u(SUB-FUNCTION,%0)] %q0\n    > say u(TOP-FUNCTION,b*)\n    You say, \"bananas apples bananas oranges pears\"\n\n  In this second example, in SUB-FUNCTION, %q0 was set to \"apples bananas\n  oranges pears\", so that when the u() \"returned\" and TOP-FUNCTION evaluated\n  %q0, this is what was printed. In the first example, ulocal() reset the\n  value of %q0 to its original \"are delicious!\"\n\n  Related Topics: u(), setq(), r()\n\n", "db_key": "ULOCAL2", "db_staff_only": false}}, {"pk": 421, "model": "help.helpentry", "fields": {"db_entrytext": "UMBRA\n\n  The UMBRA flag is used to denote an object which is in the umbra. They\n  will see the room's UMBRADESC if it is present and will not see or be\n  seen by those not set UMBRA.\n\n", "db_key": "UMBRA", "db_staff_only": false}}, {"pk": 776, "model": "help.helpentry", "fields": {"db_entrytext": "UNCOMPRESS_PROGRAM\n\n  CONFIG PARAMETER: uncompress_program <path>.\n  DEFAULT: gunzip\n\n  Specifies the program to be run to uncompress compressed database files when\n  reading them in at startup.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: compress_program, compression.\n\n", "db_key": "UNCOMPRESS_PROGRAM", "db_staff_only": false}}, {"pk": 422, "model": "help.helpentry", "fields": {"db_entrytext": "UNFINDABLE\n\n  FLAG: UNFINDABLE(U)  ()\n\n  If a player is set UNFINDABLE, he cannot be found by the loc() or room()\n  functions.\n\n  If a room is set UNFINDABLE, players in that room (or inside objects\n  in the room) cannot be found by loc()/room().\n\n  Related Topics:\n\n", "db_key": "UNFINDABLE", "db_staff_only": false}}, {"pk": 423, "model": "help.helpentry", "fields": {"db_entrytext": "UNICODE\n\n  FLAG: UNICODE(~)\n\n  When set on a player, it forces the client character set in all sessions to\n  be UTF-8.  This necessarily affects the encoding of bytes to the client.\n\n  The default is for each client to negotiate its character set ability on a\n  per session basis, but some clients which support UTF-8 do not support the\n  auto negotiation of it.\n\n  Related Topics: accent(), stripaccents(), chr(), ord(), ASCII.\n\n", "db_key": "UNICODE", "db_staff_only": false}}, {"pk": 424, "model": "help.helpentry", "fields": {"db_entrytext": "UNINSPECTED\n\n  FLAG: UNINSPECTED(g)  ()\n\n  This flag is typically set on rooms that need to be\n  inspected for good building practices. This flag may only be set by\n  wizards and royalty.\n\n  Related Topics:\n\n", "db_key": "UNINSPECTED", "db_staff_only": false}}, {"pk": 777, "model": "help.helpentry", "fields": {"db_entrytext": "UNOWNED_SAFE\n\n  CONFIG PARAMETER: unowned_safe <yes/no>.\n  DEFAULT: no\n\n  Indicates whether or not objects not owned by you are automatically\n  considered SAFE.  (This parameter only affects wizards)  Note that players\n  are always considered SAFE, and DESTROY_OK things are never considered SAFE.\n\n  Related Topics: @destroy, DESTROY_OK, SAFE.\n\n", "db_key": "UNOWNED_SAFE", "db_staff_only": false}}, {"pk": 425, "model": "help.helpentry", "fields": {"db_entrytext": "USE\n\n  COMMAND: use <object>\n\n  Uses <object>.  Some objects will do interesting, useful, or dangerous\n  things when used, for instance, using a camera should result in a\n  picture being taken.\n\n  Objects that you wish to limit who or under what circumstances they may\n  used by others should be @lock'ed with the appropriate uselock.\n\n  Related Topics: @ause, @ouse, @use, @lock, @lock locks.\n\n", "db_key": "USE", "db_staff_only": false}}, {"pk": 426, "model": "help.helpentry", "fields": {"db_entrytext": "USER-DEFINED COMMANDS\n\n  These commands are called arbitrary commands, user-defined commands, or\n  $-commands (for how they are defined).  See 'arbitrary commands' for the\n  full description.\n\n  Related Topics: arbitrary commands\n\n", "db_key": "USER-DEFINED COMMANDS", "db_staff_only": false}}, {"pk": 778, "model": "help.helpentry", "fields": {"db_entrytext": "USER_ATTR_ACCESS\n\n  CONFIG PARAMETER: user_attr_access [!]<privilege> [[!]<privilege>]...\n\n  Changes the access flags that new user-named attributes receive when\n  they are created.  By default, user attributes are invisible to others.\n\n", "db_key": "USER_ATTR_ACCESS", "db_staff_only": false}}, {"pk": 779, "model": "help.helpentry", "fields": {"db_entrytext": "USER_ATTR_PER_HOUR\n\n  CONFIG PARAMETER: user_attr_per_hour <max>\n  DEFAULT: 5000\n\n  Specifies the maximum number of user-defined attributes per hour that\n  a mortal may create.  Attempts to create user-defined attributes after\n  this limit has been reached are denied.  Only new names are affected.\n  Use of a pre-existing name is not counted towards this limit.\n\n  Related Topics: mail_per_hour, pcreate_per_hour\n\n", "db_key": "USER_ATTR_PER_HOUR", "db_staff_only": false}}, {"pk": 427, "model": "help.helpentry", "fields": {"db_entrytext": "VACATION\n\n  FLAG: VACATION(|)  ()\n\n  This flag can only be set by wizards. It is usually used to\n  mark players who will be inactive for a long period of time. It is\n  automatically cleared when the character logs on.\n\n  Related Topics:\n\n", "db_key": "VACATION", "db_staff_only": false}}, {"pk": 428, "model": "help.helpentry", "fields": {"db_entrytext": "VERBOSE\n\n  FLAG: VERBOSE(v)  ()\n\n  This flag causes all commands executed by the object having\n  the flag to be sent to the owner of the object.\n\n  Examples:\n    > @create foo\n    > @set foo=VERBOSE\n    > @force foo=\"Hi.\n      foo  \"Hi.\n      foo says \"Hi.\"\n\n  Related Topics: TRACE\n\n", "db_key": "VERBOSE", "db_staff_only": false}}, {"pk": 429, "model": "help.helpentry", "fields": {"db_entrytext": "VERBS\n\n  For many verbs there are three attributes that specify messages and actions\n  associated with the verb in addition to the verb's built-in action.\n  The attributes are named Verb, Overb, and Averb.  Verb is the message that\n  the enactor sees, Overb is the message that everyone else in the same room\n  as the enactor sees, and Averb is a list of commands that are run.\n  These attributes may be set using the @<attribute> command, so the commands\n  to set the attributes related to the 'drop' command are @drop, @odrop, and\n  @adrop.\n\n", "db_key": "VERBS", "db_staff_only": false}}, {"pk": 431, "model": "help.helpentry", "fields": {"db_entrytext": "VISUAL\n\n  FLAG: VISUAL(V)  ()\n\n  The flag a lot of players have been waiting for. When set on\n  your object, it allows other players to examine it and see all the\n  object's attributes as if they owned the object. They cannot make\n  any changes to the object.\n\n  Related Topics:\n\n", "db_key": "VISUAL", "db_staff_only": false}}, {"pk": 780, "model": "help.helpentry", "fields": {"db_entrytext": "WAIT_COST\n\n  CONFIG PARAMETER: wait_cost <amount>.\n  DEFAULT: 10\n\n  Sets the amount of money that it costs to run the @wait command and other\n  actions that add commands to the queue.  The money is refunded when the\n  command is removed from the queue (either when it is executed or by @halt).\n\n  Related Topics: @wait.\n\n", "db_key": "WAIT_COST", "db_staff_only": false}}, {"pk": 432, "model": "help.helpentry", "fields": {"db_entrytext": "WHISPER\n\n  COMMAND: whisper [<player>[,<player2>[, ...]]]=<message>\n\n  Whispers the message to one or more players in the same room.  No one else\n  can see the message that you whisper.\n\n  You can format the message one of several ways by specifying ':', ';', or\n  '\"' as the first character of the message.  ':' and ';' format the message\n  as 'You sense <player> <message>', with ';' omitting the space between\n  <player> and <message>.  '\"' formats the message in normal whisper format\n  (this is the default).\n\n  Like the page command, the last list of players is used again if the\n  following short-hand is used:\n\n    \"w :waves.\"  or,\n    \"w I'm back.\"\n\n  Related Topics: page, pose, say, :, ;, \".\n\n", "db_key": "WHISPER", "db_staff_only": false}}, {"pk": 433, "model": "help.helpentry", "fields": {"db_entrytext": "WHO\n\n  COMMAND: who [<prefix>]\n\n  Displays a list of players currently connected to the MUX.\n  The WHO report tells you how long a player has been on, how long they\n  have been inactive, and what they are doing (if they have used the @doing\n  command).  If <prefix> is specified, only players whose names start with\n  <prefix> are listed.\n\n  Related Topics: @doing.\n\n", "db_key": "WHO", "db_staff_only": false}}, {"pk": 434, "model": "help.helpentry", "fields": {"db_entrytext": "WIZARD\n\n  FLAG: WIZARD(W)  ()\n\n  If a person is WIZARD, they are a wizard, unkillable,\n  subject to fewer restrictions, and able to use wizard commands.\n  In general, WIZARDs can do anything using #<number> or *<player>.\n  Only player #1 can set and unset the WIZARD flag of other players.\n  No WIZARD can turn their own WIZARD flag off.\n\n  Related Topics:\n\n", "db_key": "WIZARD", "db_staff_only": false}}, {"pk": 435, "model": "help.helpentry", "fields": {"db_entrytext": "WIZARDS\n\n  Wizards are the people that help run the game and make sure that everything\n  is working properly.  They have special powers to tweak reality in ways\n  mortals can only dream of.  Be nice to them, they are going out of their\n  way to help keep the game running smoothly. And remember, if you have any\n  problems or just want to talk to someone, they will be there for you as\n  well.\n\n", "db_key": "WIZARDS", "db_staff_only": false}}, {"pk": 781, "model": "help.helpentry", "fields": {"db_entrytext": "WIZARD_MOTD_FILE\n\n  CONFIG PARAMETER: wizard_motd_file <path>\n  DEFAULT: text/wizmotd.txt\n\n  Specifies the name of the file that contains the wizard MOTD message that\n  is displayed to wizards when they log in.  This message is displayed in\n  addition to the wizard MOTD message that is set by the @motd/wiz command or\n  the wizard_motd_message config parameter.  The contents of the file are\n  read in to a cache when the game is started and whenever a @readcache\n  command is executed.\n\n  This configuration option cannot be changed after the server starts.  It\n  can only be changed via the configuration file.\n\n  Related Topics: @readcache, wizard_motd_message.\n\n", "db_key": "WIZARD_MOTD_FILE", "db_staff_only": false}}, {"pk": 782, "model": "help.helpentry", "fields": {"db_entrytext": "WIZARD_MOTD_MESSAGE\n\n  CONFIG PARAMETER: wizard_motd_message <message>\n  DEFAULT: blank\n\n  Sets the wizard MOTD message that is displayed to wizards when they log in.\n  This message is displayed in addition to the contents of the wizmotd.txt\n  file.  It can be changed with the @motd/wiz command and examined by the\n  @listmotd command.\n\n  Related Topics: @listmotd, @motd, motd_message, wizard_motd_file.\n\n", "db_key": "WIZARD_MOTD_MESSAGE", "db_staff_only": false}}, {"pk": 783, "model": "help.helpentry", "fields": {"db_entrytext": "WIZHELP\n\n  COMMAND: wizhelp <topic>\n\n  Displays information from the wizard help file.  The information is\n  typically of use only to wizards and/or the game maintainer.\n\n  Related Topics: the source code.\n\n", "db_key": "WIZHELP", "db_staff_only": false}}, {"pk": 436, "model": "help.helpentry", "fields": {"db_entrytext": "WRAP() (continued)\n\n  Examples:\n  > @emit wrap(Hi there. How are you?, 10, right, |%b, %b|)\n  |  Hi there. |\n  |    How are |\n  |       you? |\n\n  > @emit DESC: [wrap(get(me/desc), 10, left,,,6)]\n  DESC: You see\n        before\n        you a\n        stranger.\n\n  The width can not be above 4000 characters.\n\n  Related Topics: ljust(), rjust(), center(), columns().\n\n", "db_key": "WRAP2", "db_staff_only": false}}, {"pk": 1, "model": "help.helpentry", "fields": {"db_entrytext": "This is to prevent a weird encoding error with SQLite3.", "db_key": "Z19kD", "db_staff_only": false}}, {"pk": 437, "model": "help.helpentry", "fields": {"db_entrytext": "ZONE OBJECTS\n\n  Every object in the database has the potential of being associated with a\n  zone object. For more details on how zones work, see the related topic.\n\n  Related Topics: zones\n\n", "db_key": "ZONE OBJECTS", "db_staff_only": false}}, {"pk": 438, "model": "help.helpentry", "fields": {"db_entrytext": "ZONES\n\n  Zones are areas of the MUX which may be controlled by many people.\n  Essentially, they allow group ownership of objects.\n\n  The default zone is NOTHING. Any building done by a player defaults\n  to belonging to the same zone that the player belongs to.\n  Every zone is defined by a Zone Master Object (ZMO). The ZMO is an\n  ordinary MUX object owned by some player. A wizard may change the\n  zone of an object or player to a ZMO.\n\n  If the ZMO is a room, it is called a \"Parent room.\" Most of the\n  statements about ZMOs also apply to parent rooms; for details,\n  see the help topic PARENT ROOMS.\n\n{ 'help zones2' for more }\n\n", "db_key": "ZONES", "db_staff_only": false}}, {"pk": 439, "model": "help.helpentry", "fields": {"db_entrytext": "ZONES (continued)\n\n  Anyone who can pass the Enter lock of the ZMO has control over all\n  objects in that zone. This, in essence, gives that player wizard\n  powers within that zone. For this reason, one must be extremely\n  careful with the enter locks of ZMOs!\n\n  Also, $commands on a ZMO are treated as global within that zone.\n  The game attempts to match $commands for the ZMO of the player's\n  location, as well as $commands for the player's own zone.\n  For some suggestions on how to use zones, see \"help ZONES3\".\n\n{ 'help zones3' for more }\n\n", "db_key": "ZONES2", "db_staff_only": false}}, {"pk": 440, "model": "help.helpentry", "fields": {"db_entrytext": "ZONES (continued)\n\n  Some suggested uses of zones:\n\n    1. If you are working on a building project with several people, it\n       may be useful to create a zone object and @elock it to all of you,\n       and ask a wizard to @chzone the players involved to the zone object.\n       That way, all of the players working on the project will be able to\n       modify the building.\n\n    2. On a similar thread, if several players are working on a project\n       involving only a few objects, it may be simpler to create a zone\n       object and @chzone those few objects to the ZMO instead of resetting\n       the zones of the players. Note that a player does not have to belong\n       to a zone in order to change objects in that zone; all is merely\n       required to pass the ZMO's enter lock.\n\n{ 'help zones4' for more }\n\n", "db_key": "ZONES3", "db_staff_only": false}}, {"pk": 441, "model": "help.helpentry", "fields": {"db_entrytext": "ZONES (continued)\n\n  More possible uses for zones:\n\n    3. If local wizards are desired, a zone object may be created and enter\n       locked to the local wizard. Players building within that zone should\n       be @chzone'd to that ZMO. The local wizard will then be able to\n       control anything within that domain.\n\n    4. If you want restricted global commands defined over only a small area,\n       you can define that area to be part of a zone, and place the desired\n       $commands upon the ZMO.\n\n", "db_key": "ZONES4", "db_staff_only": false}}, {"pk": 784, "model": "help.helpentry", "fields": {"db_entrytext": "ZONE_RECURSION_LIMIT\n\n  CONFIG PARAMETER: zone_recursion_limit <num>\n  DEFAULT: 20\n\n  This directive specifies how far back to check a zone tree for control and\n  commands.\n\n", "db_key": "ZONE_RECURSION_LIMIT", "db_staff_only": false}}, {"pk": 442, "model": "help.helpentry", "fields": {"db_entrytext": "\\\n\n  COMMAND: \\<message>\n\n  Outputs <message> to everyone in your current room without embellishment.\n\n  Example:\n    >\\A chill falls over the room.\n    A chill falls over the room.\n\n  Related Topics: @emit, @oemit, NOSPOOF.\n\n", "db_key": "\\", "db_staff_only": false}}, {"pk": 230, "model": "help.helpentry", "fields": {"db_entrytext": "ARBITRARY COMMANDS (continued)\n\n  Example:\n    > @va testobj = $foobar *:\"I was foobar'ed with %0.\n    Set.\n    > foobar xyzzy\n    testobj says \"I was foobar'ed with xyzzy\"\n\n  You can prevent individual attributes from being checked for $-commands\n  with the command '@set <obj>/<attr> = no_program'.  Attributes so set\n  are reported with ($) following the attribute name when examined.\n  The command '@set <obj>/<attr> = !no_program' clears the flag.\n\n  You can also match a regular expression rather than wildcards. See\n  'help Regular Expressions' for details.\n\n  The following attributes are never checked for $-commands: ALIAS CHARGES\n  DESC DROP FAIL IDESC ODESC ODROP OFAIL OSUCC SEX SUCC.\n\n  Related Topics: @set.\n\n", "db_key": "arbitrary2", "db_staff_only": false}}, {"pk": 232, "model": "help.helpentry", "fields": {"db_entrytext": "ATTRIBUTE OWNERSHIP (continued)\n\n  Locked attributes may not be modified or removed, and do not change ownership\n  when the object containing them is @chowned.\n\n  You may not modify or remove attributes that you own that are stored\n  on objects that you do not own, but you may modify or remove attributes\n  owned by others on your objects (if you do this, the attribute becomes owned\n  by you).\n\n  If an attribute is owned by someone other than the object's owner, then\n  the number of the attribute's owner is shown in parentheses immediately\n  after the attribute name.  If there are any flags set on the attribute,\n  those flags are indicated in the parentheses too.\n\n{ 'help attrib3' for more }\n\n", "db_key": "attrib2", "db_staff_only": false}}, {"pk": 233, "model": "help.helpentry", "fields": {"db_entrytext": "ATTRIBUTE OWNERSHIP (continued)\n\n  When checking an attribute lock against an object, the lock will\n  always fail if the locked object is not owned by the same player as\n  the attribute being tested.  The comparison specified in the lock is\n  only performed if the owner of the locked object also owns the\n  attribute on the object being checked.\n\n  Related Topics: ATTRIBUTE FLAGS, @chown, examine, @lock, @set,\n                  @unlock.\n\n", "db_key": "attrib3", "db_staff_only": false}}, {"pk": 250, "model": "help.helpentry", "fields": {"db_entrytext": "COMMAND EVALUATION (continued)\n\n  - The first word of the command is checked to see if it is an internal MUX\n    command.  If so, the remainder of the command is broken up into arguments,\n    %-substitution and function evaluation may be performed on the (split up)\n    arguments, and the command is executed.\n  - %-substitution and function evaluation is performed on the command.\n  - All objects in the player's inventory, all objects in the player's\n    location, and the location itself are searched for $-commands that match\n    the command.  All that match are performed.  The player may or may not be\n    checked, depending on how the MUX is configured.\n  - The commands defined in the zone tree you or your location is in.\n\n  Note: Commands that can cause other commands to be executed (such as @wait,\n  @switch, @trigger, etc) never perform substitution on their arguments, they\n  leave the evaluation to the command that is to be executed.  This prevents\n  most of the problems with getting objects to perform unintended commands by\n  putting a ';', '}', or ',' in an argument.  The @force command is an\n  exception in that it evaluates its argument, so it should be used with\n  caution (preferably by never using it to pass information that someone else\n  entered, use @trigger instead).\n\n  Also, the construct '$xx *:%0' does not work (and is very dangerous\n  programming), use '$xx *:@force me=%0' if you need this functionality.\n\n", "db_key": "command evaluation2", "db_staff_only": false}}, {"pk": 344, "model": "help.helpentry", "fields": {"db_entrytext": "MOVING (continued)\n\n  - You are moved to the new location.  If you are entering an object,\n    teleporting, or going home, all KEY objects are stripped from you.\n  - If the new location is a room, you receive the room's DESC, others in the\n    room receive the ODESC, and the room runs its ADESC.  If you pass the\n    room's lock do the same with SUCC, OSUCC, and ASUCC, otherwise use FAIL,\n    OFAIL, and AFAIL.\n  - If the new location is a player or an object, you receive the location's\n    IDESC (or DESC if the IDESC is not set).  In either event, others in the\n    same location see the ODESC message and the location runs its ADESC\n    action list.\n  - You are shown the contents and visible exits if the location is not DARK.\n  - If you used an exit, then you receive the DROP message for the exit,\n    others in the new room receive the exit's ODROP message, and the exit\n    runs its ADROP action list.\n  - If you are teleporting or being teleported, you receive your TPORT\n    attribute, others in your new location receive your OTPORT attribute,\n    and your ATPORT attribute is run.\n  - You receive your MOVE attribute, others in your new location receive\n    your OMOVE attribute, and your AMOVE attribute is run.\n\n{ 'help moving3' for more }\n\n", "db_key": "moving2", "db_staff_only": false}}, {"pk": 345, "model": "help.helpentry", "fields": {"db_entrytext": "MOVING (continued)\n\n  - If you are a player, or have your LISTEN attribute set to something,\n    and if the old location is not dark and you are not dark, you receive the\n    ENTER message for the new room, others in the new room receive the OENTER\n    message, and the new room runs its AENTER action list. Others in the room\n    you just left receive the new room's OXLEAVE message, and others in the\n    old location receive the message '<your name> has arrived.'\n  - If the old location is a STICKY room and has its drop-to set, see if\n    objects in that room should be sent to the drop-to location.  If so,\n    do it.\n  - If you are a player, you have a chance of finding some money.\n\n  Related Topics: @adesc, @adrop, @aenter, @afail, @aleave, @asucc, @atport,\n      @desc, @drop, @enter, @fail, @leave, @listen, @odesc, @odrop, @oenter,\n      @ofail, @oleave, @osucc, @oxenter, @oxleave, @oxtport, @succ, @tport,\n      move, @teleport, home, KEY, STICKY, DROP-TOS, FAILURE, SUCCESS.\n\n", "db_key": "moving3", "db_staff_only": false}}, {"pk": 396, "model": "help.helpentry", "fields": {"db_entrytext": "SEMAPHORES (continued)\n\n  You may also combine the semaphore and timer options of @wait with\n  '@wait <object>/<timeout> = <command>'  If the time period expires before\n  the semaphore is notified, then the command is executed and the semaphore\n  count is decremented, just as if the command had been run because the\n  semaphore had been notified.\n\n  Examples: <simple>     @wait semaphore=\"Foo\n                         @notify semaphore\n            <mutex lock> @va mutex lock=@wait me=@trig me/vb\n                         @vb mutex lock=\"Got it!;@notify me\n                         @startup mutex lock=@notify me\n            <timed wait> @wait timer/60 = \"Sixty Second Timer.\n\n  In the above examples you will say \"Foo\" after semaphore is notified,\n  you will say \"Got it\" when you have the mutual exclusion lock mutex lock\n  (You could have also modified object registers that need to be protected\n  from concurrent update), and you will say \"Sixty Second Timer.\" either when\n  timer is notified or after sixty seconds pass.\n\n  Related Topics: @drain, @notify, @wait.\n\n", "db_key": "semaphores2", "db_staff_only": false}}, {"pk": 411, "model": "help.helpentry", "fields": {"db_entrytext": "TAKE (continued)\n\n  The following switch is recognized:\n     /quiet   - Don't perform the @osucc/@asucc or @ofail/@afail attributes\n                on the target object.  This switch only works if you control\n                the object.\n\n  <object> and <sub-object> may be either players or things.\n  'get' is the same as 'take'.\n\n  Related Topics: drop, @afail, @asucc, @fail, @ofail, @osucc, @succ,\n      ENTER_OK, FAILURE, SUCCESS.\n\n", "db_key": "take2", "db_staff_only": false}}]
